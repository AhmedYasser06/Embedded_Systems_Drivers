

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Aug 13 01:54:30 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    39                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    40                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    42   000000                     
    43                           ; Version 2.20
    44                           ; Generated 12/02/2020 GMT
    45                           ; 
    46                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F4620 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77   000000                     
    78                           	psect	idataCOMRAM
    79   001472                     __pidataCOMRAM:
    80                           	callstack 0
    81                           
    82                           ;initializer for _port_registers
    83   001472  80                 	db	128
    84   001473  0F                 	db	15
    85   001474  81                 	db	129
    86   001475  0F                 	db	15
    87   001476  82                 	db	130
    88   001477  0F                 	db	15
    89   001478  83                 	db	131
    90   001479  0F                 	db	15
    91   00147A  84                 	db	132
    92   00147B  0F                 	db	15
    93                           
    94                           ;initializer for _lat_registers
    95   00147C  89                 	db	137
    96   00147D  0F                 	db	15
    97   00147E  8A                 	db	138
    98   00147F  0F                 	db	15
    99   001480  8B                 	db	139
   100   001481  0F                 	db	15
   101   001482  8C                 	db	140
   102   001483  0F                 	db	15
   103   001484  8D                 	db	141
   104   001485  0F                 	db	15
   105                           
   106                           ;initializer for _tris_registers
   107   001486  92                 	db	146
   108   001487  0F                 	db	15
   109   001488  93                 	db	147
   110   001489  0F                 	db	15
   111   00148A  94                 	db	148
   112   00148B  0F                 	db	15
   113   00148C  95                 	db	149
   114   00148D  0F                 	db	15
   115   00148E  96                 	db	150
   116   00148F  0F                 	db	15
   117                           
   118                           ;initializer for _lcd_1
   119   001490  02                 	db	2
   120   001491  0A                 	db	10
   121   001492  12                 	db	18
   122   001493  1A                 	db	26
   123   001494  22                 	db	34
   124   001495  2A                 	db	42
   125                           
   126                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3083
   127   001496  68                 	db	104
   128                           
   129                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3081
   130   001497  5A                 	db	90
   131                           
   132                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3079
   133   001498  62                 	db	98
   134                           
   135                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3077
   136   001499  2A                 	db	42
   137                           
   138                           ;initializer for MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3072
   139   00149A  1A                 	db	26
   140                           
   141                           ;initializer for MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3070
   142   00149B  62                 	db	98
   143                           
   144                           ;initializer for MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3068
   145   00149C  2A                 	db	42
   146                           
   147                           ;initializer for _RB7_Flag
   148   00149D  01                 	db	1
   149                           
   150                           ;initializer for _RB6_Flag
   151   00149E  01                 	db	1
   152                           
   153                           ;initializer for _RB5_Flag
   154   00149F  01                 	db	1
   155                           
   156                           ;initializer for _RB4_Flag
   157   0014A0  01                 	db	1
   158                           
   159                           	psect	idataBANK0
   160   00153A                     __pidataBANK0:
   161                           	callstack 0
   162                           
   163                           ;initializer for _lcd_2
   164   00153A  32                 	db	50
   165   00153B  3A                 	db	58
   166   00153C  03                 	db	3
   167   00153D  0B                 	db	11
   168   00153E  13                 	db	19
   169   00153F  1B                 	db	27
   170   001540  23                 	db	35
   171   001541  2B                 	db	43
   172   001542  33                 	db	51
   173   001543  3B                 	db	59
   174                           
   175                           	psect	smallconst
   176   001000                     __psmallconst:
   177                           	callstack 0
   178   001000  00                 	db	0
   179   001001                     _btn_values:
   180                           	callstack 0
   181   001001  37                 	db	55
   182   001002  38                 	db	56
   183   001003  39                 	db	57
   184   001004  2F                 	db	47
   185   001005  34                 	db	52
   186   001006  35                 	db	53
   187   001007  36                 	db	54
   188   001008  2A                 	db	42
   189   001009  31                 	db	49
   190   00100A  32                 	db	50
   191   00100B  33                 	db	51
   192   00100C  2D                 	db	45
   193   00100D  23                 	db	35
   194   00100E  30                 	db	48
   195   00100F  3D                 	db	61
   196   001010  2B                 	db	43
   197   001011                     __end_of_btn_values:
   198                           	callstack 0
   199   000000                     _SPBRGH	set	4016
   200   000000                     _SPBRG	set	4015
   201   000000                     _TXREG	set	4013
   202   000000                     _TXSTAbits	set	4012
   203   000000                     _RCREG	set	4014
   204   000000                     _RCSTAbits	set	4011
   205   000000                     _TMR3L	set	4018
   206   000000                     _TMR3H	set	4019
   207   000000                     _TMR2	set	4044
   208   000000                     _T2CONbits	set	4042
   209   000000                     _TMR1L	set	4046
   210   000000                     _TMR1H	set	4047
   211   000000                     _T1CONbits	set	4045
   212   000000                     _TMR0L	set	4054
   213   000000                     _TMR0H	set	4055
   214   000000                     _T0CONbits	set	4053
   215   000000                     _INTCON2bits	set	4081
   216   000000                     _INTCON3bits	set	4080
   217   000000                     _SSPBUF	set	4041
   218   000000                     _SSPSTATbits	set	4039
   219   000000                     _SSPADD	set	4040
   220   000000                     _SSPCON2bits	set	4037
   221   000000                     _SSPCON1bits	set	4038
   222   000000                     _EECON2	set	4007
   223   000000                     _ADCON1bits	set	4033
   224   000000                     _ADRESL	set	4035
   225   000000                     _ADRESH	set	4036
   226   000000                     _INTCONbits	set	4082
   227   000000                     _TRISD	set	3989
   228   000000                     _TRISC	set	3988
   229   000000                     _PR2	set	4043
   230   000000                     _TRISB	set	3987
   231   000000                     _TRISE	set	3990
   232   000000                     _PORTBbits	set	3969
   233   000000                     _TRISCbits	set	3988
   234   000000                     _PIE1bits	set	3997
   235   000000                     _ADCON2bits	set	4032
   236   000000                     _ADCON0bits	set	4034
   237   000000                     _PORTE	set	3972
   238   000000                     _PORTD	set	3971
   239   000000                     _PORTC	set	3970
   240   000000                     _PORTB	set	3969
   241   000000                     _PORTA	set	3968
   242   000000                     _LATA	set	3977
   243   000000                     _TRISA	set	3986
   244   000000                     _PIE2bits	set	4000
   245   000000                     _CCP2CONbits	set	4026
   246   000000                     _CCP1CONbits	set	4029
   247   000000                     _PIR1bits	set	3998
   248   000000                     _CCPR1L	set	4030
   249   000000                     _CCPR2L	set	4027
   250   000000                     _EECON1bits	set	4006
   251   000000                     _EEDATA	set	4008
   252   000000                     _EEADR	set	4009
   253   000000                     _EEADRH	set	4010
   254   000000                     _T3CONbits	set	4017
   255   000000                     _PIR2bits	set	4001
   256   000000                     _LATE	set	3981
   257   000000                     _LATD	set	3980
   258   000000                     _LATC	set	3979
   259   000000                     _LATB	set	3978
   260   000000                     _BAUDCONbits	set	4024
   261   001011                     STR_1:
   262   001011  25                 	db	37
   263   001012  69                 	db	105	;'i'
   264   001013  00                 	db	0
   265   001014  00                 	db	0	; dummy byte at the end
   266   000000                     
   267                           ; #config settings
   268                           
   269                           	psect	cinit
   270   00141C                     __pcinit:
   271                           	callstack 0
   272   00141C                     start_initialization:
   273                           	callstack 0
   274   00141C                     __initialization:
   275                           	callstack 0
   276                           
   277                           ; Initialize objects allocated to BANK0 (10 bytes)
   278                           ; load TBLPTR registers with __pidataBANK0
   279   00141C  0E3A               	movlw	low __pidataBANK0
   280   00141E  6EF6               	movwf	tblptrl,c
   281   001420  0E15               	movlw	high __pidataBANK0
   282   001422  6EF7               	movwf	tblptrh,c
   283   001424  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   284   001426  6EF8               	movwf	tblptru,c
   285   001428  EE00  F080         	lfsr	0,__pdataBANK0
   286   00142C  EE10 F00A          	lfsr	1,10
   287   001430                     copy_data0:
   288   001430  0009               	tblrd		*+
   289   001432  CFF5 FFEE          	movff	tablat,postinc0
   290   001436  50E5               	movf	postdec1,w,c
   291   001438  50E1               	movf	fsr1l,w,c
   292   00143A  E1FA               	bnz	copy_data0
   293                           
   294                           ; Initialize objects allocated to COMRAM (47 bytes)
   295                           ; load TBLPTR registers with __pidataCOMRAM
   296   00143C  0E72               	movlw	low __pidataCOMRAM
   297   00143E  6EF6               	movwf	tblptrl,c
   298   001440  0E14               	movlw	high __pidataCOMRAM
   299   001442  6EF7               	movwf	tblptrh,c
   300   001444  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   301   001446  6EF8               	movwf	tblptru,c
   302   001448  EE00  F047         	lfsr	0,__pdataCOMRAM
   303   00144C  EE10 F02F          	lfsr	1,47
   304   001450                     copy_data1:
   305   001450  0009               	tblrd		*+
   306   001452  CFF5 FFEE          	movff	tablat,postinc0
   307   001456  50E5               	movf	postdec1,w,c
   308   001458  50E1               	movf	fsr1l,w,c
   309   00145A  E1FA               	bnz	copy_data1
   310                           
   311                           ; Clear objects allocated to COMRAM (70 bytes)
   312   00145C  EE00  F001         	lfsr	0,__pbssCOMRAM
   313   001460  0E46               	movlw	70
   314   001462                     clear_0:
   315   001462  6AEE               	clrf	postinc0,c
   316   001464  06E8               	decf	wreg,f,c
   317   001466  E1FD               	bnz	clear_0
   318   001468                     end_of_initialization:
   319                           	callstack 0
   320   001468                     __end_of__initialization:
   321                           	callstack 0
   322   001468  9077               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   323   00146A  9277               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   324   00146C  0100               	movlb	0
   325   00146E  EF85  F00A         	goto	_main	;jump to C main() function
   326                           
   327                           	psect	bssCOMRAM
   328   000001                     __pbssCOMRAM:
   329                           	callstack 0
   330   000001                     	ds	6
   331   000007                     _EUSART_OverrunErrorHandler:
   332                           	callstack 0
   333   000007                     	ds	2
   334   000009                     _EUSART_FramingErrorHandler:
   335                           	callstack 0
   336   000009                     	ds	2
   337   00000B                     _EUSART_RxInterruptHandler:
   338                           	callstack 0
   339   00000B                     	ds	2
   340   00000D                     _EUSART_TxInterruptHandler:
   341                           	callstack 0
   342   00000D                     	ds	2
   343   00000F                     _timer3_preload:
   344                           	callstack 0
   345   00000F                     	ds	2
   346   000011                     _TMR3_InterruptHandler:
   347                           	callstack 0
   348   000011                     	ds	2
   349   000013                     _TMR2_InterruptHandler:
   350                           	callstack 0
   351   000013                     	ds	2
   352   000015                     _timer1_preload:
   353                           	callstack 0
   354   000015                     	ds	2
   355   000017                     _TMR1_InterruptHandler:
   356                           	callstack 0
   357   000017                     	ds	2
   358   000019                     _timer0_preload:
   359                           	callstack 0
   360   000019                     	ds	2
   361   00001B                     _TMR0_InterruptHandler:
   362                           	callstack 0
   363   00001B                     	ds	2
   364   00001D                     _RB7_InterruptHandler_LOW:
   365                           	callstack 0
   366   00001D                     	ds	2
   367   00001F                     _RB7_InterruptHandler_HIGH:
   368                           	callstack 0
   369   00001F                     	ds	2
   370   000021                     _RB6_InterruptHandler_LOW:
   371                           	callstack 0
   372   000021                     	ds	2
   373   000023                     _RB6_InterruptHandler_HIGH:
   374                           	callstack 0
   375   000023                     	ds	2
   376   000025                     _RB5_InterruptHandler_LOW:
   377                           	callstack 0
   378   000025                     	ds	2
   379   000027                     _RB5_InterruptHandler_HIGH:
   380                           	callstack 0
   381   000027                     	ds	2
   382   000029                     _RB4_InterruptHandler_LOW:
   383                           	callstack 0
   384   000029                     	ds	2
   385   00002B                     _RB4_InterruptHandler_HIGH:
   386                           	callstack 0
   387   00002B                     	ds	2
   388   00002D                     _INT2_InterruptHandler:
   389                           	callstack 0
   390   00002D                     	ds	2
   391   00002F                     _INT1_InterruptHandler:
   392                           	callstack 0
   393   00002F                     	ds	2
   394   000031                     _INT0_InterruptHandler:
   395                           	callstack 0
   396   000031                     	ds	2
   397   000033                     _I2C_Report_Receive_Overflow_InterruptHandle:
   398                           	callstack 0
   399   000033                     	ds	2
   400   000035                     _I2C_DefaultInterruptHandle:
   401                           	callstack 0
   402   000035                     	ds	2
   403   000037                     _I2C_Report_Write_Collision_InterruptHandler:
   404                           	callstack 0
   405   000037                     	ds	2
   406   000039                     _CCP2_InterruptHandler:
   407                           	callstack 0
   408   000039                     	ds	2
   409   00003B                     _CCP1_InterruptHandler:
   410                           	callstack 0
   411   00003B                     	ds	2
   412   00003D                     _ADC_InterruptHandler:
   413                           	callstack 0
   414   00003D                     	ds	2
   415   00003F                     _timer2_preload:
   416                           	callstack 0
   417   00003F                     	ds	1
   418   000040                     relay_turn_off@F3030:
   419                           	callstack 0
   420   000040                     	ds	1
   421   000041                     relay_turn_on@F3025:
   422                           	callstack 0
   423   000041                     	ds	1
   424   000042                     relay_initialize@F3020:
   425                           	callstack 0
   426   000042                     	ds	1
   427   000043                     led_turn_toggle@F3041:
   428                           	callstack 0
   429   000043                     	ds	1
   430   000044                     led_turn_off@F3036:
   431                           	callstack 0
   432   000044                     	ds	1
   433   000045                     led_turn_on@F3031:
   434                           	callstack 0
   435   000045                     	ds	1
   436   000046                     led_initialize@F3026:
   437                           	callstack 0
   438   000046                     	ds	1
   439                           
   440                           	psect	dataCOMRAM
   441   000047                     __pdataCOMRAM:
   442                           	callstack 0
   443   000047                     _port_registers:
   444                           	callstack 0
   445   000047                     	ds	10
   446   000051                     _lat_registers:
   447                           	callstack 0
   448   000051                     	ds	10
   449   00005B                     _tris_registers:
   450                           	callstack 0
   451   00005B                     	ds	10
   452   000065                     _lcd_1:
   453                           	callstack 0
   454   000065                     	ds	6
   455   00006B                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3083:
   456                           	callstack 0
   457   00006B                     	ds	1
   458   00006C                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3081:
   459                           	callstack 0
   460   00006C                     	ds	1
   461   00006D                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3079:
   462                           	callstack 0
   463   00006D                     	ds	1
   464   00006E                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3077:
   465                           	callstack 0
   466   00006E                     	ds	1
   467   00006F                     MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3072:
   468                           	callstack 0
   469   00006F                     	ds	1
   470   000070                     MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3070:
   471                           	callstack 0
   472   000070                     	ds	1
   473   000071                     MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3068:
   474                           	callstack 0
   475   000071                     	ds	1
   476   000072                     _RB7_Flag:
   477                           	callstack 0
   478   000072                     	ds	1
   479   000073                     _RB6_Flag:
   480                           	callstack 0
   481   000073                     	ds	1
   482   000074                     _RB5_Flag:
   483                           	callstack 0
   484   000074                     	ds	1
   485   000075                     _RB4_Flag:
   486                           	callstack 0
   487   000075                     	ds	1
   488                           
   489                           	psect	dataBANK0
   490   000080                     __pdataBANK0:
   491                           	callstack 0
   492   000080                     _lcd_2:
   493                           	callstack 0
   494   000080                     	ds	10
   495                           
   496                           	psect	cstackCOMRAM
   497   000076                     __pcstackCOMRAM:
   498                           	callstack 0
   499   000076                     RB4_ISR@RB4_Source:
   500                           	callstack 0
   501   000076                     RB5_ISR@RB5_Source:
   502                           	callstack 0
   503   000076                     RB6_ISR@RB6_Source:
   504                           	callstack 0
   505   000076                     RB7_ISR@RB7_Source:
   506                           	callstack 0
   507                           
   508                           ; 1 bytes @ 0x0
   509   000076                     	ds	1
   510   000077                     
   511                           ; 1 bytes @ 0x1
   512 ;;
   513 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   514 ;;
   515 ;; *************** function _main *****************
   516 ;; Defined at:
   517 ;;		line 11 in file "application.c"
   518 ;; Parameters:    Size  Location     Type
   519 ;;		None
   520 ;; Auto vars:     Size  Location     Type
   521 ;;  ret             1    0        unsigned char 
   522 ;; Return value:  Size  Location     Type
   523 ;;                  2  1704[None  ] int 
   524 ;; Registers used:
   525 ;;		wreg, status,2, cstack
   526 ;; Tracked objects:
   527 ;;		On entry : 0/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   535 ;;Total ram usage:        0 bytes
   536 ;; Hardware stack levels required when called: 4
   537 ;; This function calls:
   538 ;;		_application_intialize
   539 ;; This function is called by:
   540 ;;		Startup code after reset
   541 ;; This function uses a non-reentrant model
   542 ;;
   543                           
   544                           	psect	text0
   545   00150A                     __ptext0:
   546                           	callstack 0
   547   00150A                     _main:
   548                           	callstack 27
   549   00150A                     
   550                           ;application.c: 14:     application_intialize();
   551   00150A  ECA6  F00A         	call	_application_intialize	;wreg free
   552   00150E                     l1705:
   553   00150E  EF87  F00A         	goto	l1705
   554   001512  EF07  F000         	goto	start
   555   001516                     __end_of_main:
   556                           	callstack 0
   557                           
   558 ;; *************** function _application_intialize *****************
   559 ;; Defined at:
   560 ;;		line 23 in file "application.c"
   561 ;; Parameters:    Size  Location     Type
   562 ;;		None
   563 ;; Auto vars:     Size  Location     Type
   564 ;;  ret             1    0        unsigned char 
   565 ;; Return value:  Size  Location     Type
   566 ;;                  1    wreg      void 
   567 ;; Registers used:
   568 ;;		wreg, status,2, cstack
   569 ;; Tracked objects:
   570 ;;		On entry : 0/0
   571 ;;		On exit  : 0/0
   572 ;;		Unchanged: 0/0
   573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   578 ;;Total ram usage:        0 bytes
   579 ;; Hardware stack levels used: 1
   580 ;; Hardware stack levels required when called: 3
   581 ;; This function calls:
   582 ;;		_ecu_layer_intialize
   583 ;; This function is called by:
   584 ;;		_main
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588                           	psect	text1
   589   00154C                     __ptext1:
   590                           	callstack 0
   591   00154C                     _application_intialize:
   592                           	callstack 27
   593   00154C                     
   594                           ;application.c: 25:     ecu_layer_intialize();
   595   00154C  ECBB  F00A         	call	_ecu_layer_intialize	;wreg free
   596   001550  0012               	return		;funcret
   597   001552                     __end_of_application_intialize:
   598                           	callstack 0
   599                           
   600 ;; *************** function _ecu_layer_intialize *****************
   601 ;; Defined at:
   602 ;;		line 101 in file "ECU_Layer/ecu_layer_init.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;		None
   605 ;; Auto vars:     Size  Location     Type
   606 ;;  ret             1    0        unsigned char 
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      void 
   609 ;; Registers used:
   610 ;;		wreg, status,2
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   620 ;;Total ram usage:        0 bytes
   621 ;; Hardware stack levels used: 1
   622 ;; Hardware stack levels required when called: 2
   623 ;; This function calls:
   624 ;;		Nothing
   625 ;; This function is called by:
   626 ;;		_application_intialize
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630                           	psect	text2
   631   001576                     __ptext2:
   632                           	callstack 0
   633   001576                     _ecu_layer_intialize:
   634                           	callstack 27
   635   001576  0012               	return		;funcret
   636   001578                     __end_of_ecu_layer_intialize:
   637                           	callstack 0
   638                           
   639 ;; *************** function _InterruptManager *****************
   640 ;; Defined at:
   641 ;;		line 32 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;		None
   644 ;; Auto vars:     Size  Location     Type
   645 ;;		None
   646 ;; Return value:  Size  Location     Type
   647 ;;                  1    wreg      void 
   648 ;; Registers used:
   649 ;;		wreg, status,2, status,0, cstack
   650 ;; Tracked objects:
   651 ;;		On entry : 0/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   659 ;;Total ram usage:        0 bytes
   660 ;; Hardware stack levels used: 1
   661 ;; Hardware stack levels required when called: 1
   662 ;; This function calls:
   663 ;;		_ADC_ISR
   664 ;;		_CCP1_ISR
   665 ;;		_CCP2_ISR
   666 ;;		_EUSART_RX_ISR
   667 ;;		_EUSART_TX_ISR
   668 ;;		_INT0_ISR
   669 ;;		_INT1_ISR
   670 ;;		_INT2_ISR
   671 ;;		_MSSP_I2C_BC_ISR
   672 ;;		_MSSP_I2C_ISR
   673 ;;		_MSSP_SPI_ISR
   674 ;;		_RB4_ISR
   675 ;;		_RB5_ISR
   676 ;;		_RB6_ISR
   677 ;;		_RB7_ISR
   678 ;;		_TMR0_ISR
   679 ;;		_TMR1_ISR
   680 ;;		_TMR2_ISR
   681 ;;		_TMR3_ISR
   682 ;; This function is called by:
   683 ;;		Interrupt level 2
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           	psect	intcode
   688   000008                     __pintcode:
   689                           	callstack 0
   690   000008                     _InterruptManager:
   691                           	callstack 27
   692                           
   693                           ;incstack = 0
   694   000008  8277               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   695   00000A  ED0B  F008         	call	int_func,f	;refresh shadow registers
   696                           
   697                           	psect	intcode_body
   698   001016                     __pintcode_body:
   699                           	callstack 27
   700   001016                     int_func:
   701                           	callstack 27
   702   001016  0006               	pop		; remove dummy address from shadow register refresh
   703   001018                     
   704                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 34:     if((1 == INTCONbits.INT0IE) && (
      +                          1 == INTCONbits.INT0IF)){
   705   001018  A8F2               	btfss	242,4,c	;volatile
   706   00101A  EF11  F008         	goto	i2u213_41
   707   00101E  EF13  F008         	goto	i2u213_40
   708   001022                     i2u213_41:
   709   001022  EF1C  F008         	goto	i2l1220
   710   001026                     i2u213_40:
   711   001026  A2F2               	btfss	242,1,c	;volatile
   712   001028  EF18  F008         	goto	i2u214_41
   713   00102C  EF1A  F008         	goto	i2u214_40
   714   001030                     i2u214_41:
   715   001030  EF1C  F008         	goto	i2l1220
   716   001034                     i2u214_40:
   717   001034                     
   718                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 35:         INT0_ISR();
   719   001034  ECB1  F00A         	call	_INT0_ISR	;wreg free
   720   001038                     i2l1220:
   721                           
   722                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 38:     if((1 == INTCON3bits.INT1E) && (
      +                          1 == INTCON3bits.INT1F)){
   723   001038  A6F0               	btfss	240,3,c	;volatile
   724   00103A  EF21  F008         	goto	i2u215_41
   725   00103E  EF23  F008         	goto	i2u215_40
   726   001042                     i2u215_41:
   727   001042  EF2C  F008         	goto	i2l1222
   728   001046                     i2u215_40:
   729   001046  A0F0               	btfss	240,0,c	;volatile
   730   001048  EF28  F008         	goto	i2u216_41
   731   00104C  EF2A  F008         	goto	i2u216_40
   732   001050                     i2u216_41:
   733   001050  EF2C  F008         	goto	i2l1222
   734   001054                     i2u216_40:
   735   001054                     
   736                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 39:         INT1_ISR();
   737   001054  ECAF  F00A         	call	_INT1_ISR	;wreg free
   738   001058                     i2l1222:
   739                           
   740                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 42:     if((1 == INTCON3bits.INT2IE) && 
      +                          (1 == INTCON3bits.INT2IF)){
   741   001058  A8F0               	btfss	240,4,c	;volatile
   742   00105A  EF31  F008         	goto	i2u217_41
   743   00105E  EF33  F008         	goto	i2u217_40
   744   001062                     i2u217_41:
   745   001062  EF3C  F008         	goto	i2l1224
   746   001066                     i2u217_40:
   747   001066  A2F0               	btfss	240,1,c	;volatile
   748   001068  EF38  F008         	goto	i2u218_41
   749   00106C  EF3A  F008         	goto	i2u218_40
   750   001070                     i2u218_41:
   751   001070  EF3C  F008         	goto	i2l1224
   752   001074                     i2u218_40:
   753   001074                     
   754                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 43:         INT2_ISR();
   755   001074  ECAD  F00A         	call	_INT2_ISR	;wreg free
   756   001078                     i2l1224:
   757                           
   758                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 49:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
   759   001078  A6F2               	btfss	242,3,c	;volatile
   760   00107A  EF41  F008         	goto	i2u219_41
   761   00107E  EF43  F008         	goto	i2u219_40
   762   001082                     i2u219_41:
   763   001082  EF5E  F008         	goto	i2l1226
   764   001086                     i2u219_40:
   765   001086  A0F2               	btfss	242,0,c	;volatile
   766   001088  EF48  F008         	goto	i2u220_41
   767   00108C  EF4A  F008         	goto	i2u220_40
   768   001090                     i2u220_41:
   769   001090  EF5E  F008         	goto	i2l1226
   770   001094                     i2u220_40:
   771   001094  A881               	btfss	129,4,c	;volatile
   772   001096  EF4F  F008         	goto	i2u221_41
   773   00109A  EF51  F008         	goto	i2u221_40
   774   00109E                     i2u221_41:
   775   00109E  EF5E  F008         	goto	i2l1226
   776   0010A2                     i2u221_40:
   777   0010A2  0475               	decf	_RB4_Flag^0,w,c	;volatile
   778   0010A4  A4D8               	btfss	status,2,c
   779   0010A6  EF57  F008         	goto	i2u222_41
   780   0010AA  EF59  F008         	goto	i2u222_40
   781   0010AE                     i2u222_41:
   782   0010AE  EF5E  F008         	goto	i2l1226
   783   0010B2                     i2u222_40:
   784   0010B2                     
   785                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 50:        (PORTBbits.RB4 == GPIO_HIGH) 
      +                          && (RB4_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 51:         RB4_Flag
      +                           = 0;
   786   0010B2  0E00               	movlw	0
   787   0010B4  6E75               	movwf	_RB4_Flag^0,c	;volatile
   788   0010B6                     
   789                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 52:         RB4_ISR(0);
   790   0010B6  0E00               	movlw	0
   791   0010B8  EC78  F00A         	call	_RB4_ISR
   792   0010BC                     i2l1226:
   793                           
   794                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 55:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
   795   0010BC  A6F2               	btfss	242,3,c	;volatile
   796   0010BE  EF63  F008         	goto	i2u223_41
   797   0010C2  EF65  F008         	goto	i2u223_40
   798   0010C6                     i2u223_41:
   799   0010C6  EF80  F008         	goto	i2l1228
   800   0010CA                     i2u223_40:
   801   0010CA  A0F2               	btfss	242,0,c	;volatile
   802   0010CC  EF6A  F008         	goto	i2u224_41
   803   0010D0  EF6C  F008         	goto	i2u224_40
   804   0010D4                     i2u224_41:
   805   0010D4  EF80  F008         	goto	i2l1228
   806   0010D8                     i2u224_40:
   807   0010D8  B881               	btfsc	129,4,c	;volatile
   808   0010DA  EF71  F008         	goto	i2u225_41
   809   0010DE  EF73  F008         	goto	i2u225_40
   810   0010E2                     i2u225_41:
   811   0010E2  EF80  F008         	goto	i2l1228
   812   0010E6                     i2u225_40:
   813   0010E6  5075               	movf	_RB4_Flag^0,w,c	;volatile
   814   0010E8  A4D8               	btfss	status,2,c
   815   0010EA  EF79  F008         	goto	i2u226_41
   816   0010EE  EF7B  F008         	goto	i2u226_40
   817   0010F2                     i2u226_41:
   818   0010F2  EF80  F008         	goto	i2l1228
   819   0010F6                     i2u226_40:
   820   0010F6                     
   821                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 56:        (PORTBbits.RB4 == GPIO_LOW) &
      +                          & (RB4_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 57:         RB4_Flag 
      +                          = 1;
   822   0010F6  0E01               	movlw	1
   823   0010F8  6E75               	movwf	_RB4_Flag^0,c	;volatile
   824   0010FA                     
   825                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 58:         RB4_ISR(1);
   826   0010FA  0E01               	movlw	1
   827   0010FC  EC78  F00A         	call	_RB4_ISR
   828   001100                     i2l1228:
   829                           
   830                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 61:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
   831   001100  A6F2               	btfss	242,3,c	;volatile
   832   001102  EF85  F008         	goto	i2u227_41
   833   001106  EF87  F008         	goto	i2u227_40
   834   00110A                     i2u227_41:
   835   00110A  EFA2  F008         	goto	i2l1230
   836   00110E                     i2u227_40:
   837   00110E  A0F2               	btfss	242,0,c	;volatile
   838   001110  EF8C  F008         	goto	i2u228_41
   839   001114  EF8E  F008         	goto	i2u228_40
   840   001118                     i2u228_41:
   841   001118  EFA2  F008         	goto	i2l1230
   842   00111C                     i2u228_40:
   843   00111C  AA81               	btfss	129,5,c	;volatile
   844   00111E  EF93  F008         	goto	i2u229_41
   845   001122  EF95  F008         	goto	i2u229_40
   846   001126                     i2u229_41:
   847   001126  EFA2  F008         	goto	i2l1230
   848   00112A                     i2u229_40:
   849   00112A  0474               	decf	_RB5_Flag^0,w,c	;volatile
   850   00112C  A4D8               	btfss	status,2,c
   851   00112E  EF9B  F008         	goto	i2u230_41
   852   001132  EF9D  F008         	goto	i2u230_40
   853   001136                     i2u230_41:
   854   001136  EFA2  F008         	goto	i2l1230
   855   00113A                     i2u230_40:
   856   00113A                     
   857                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 62:        (PORTBbits.RB5 == GPIO_HIGH) 
      +                          && (RB5_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 63:         RB5_Flag
      +                           = 0;
   858   00113A  0E00               	movlw	0
   859   00113C  6E74               	movwf	_RB5_Flag^0,c	;volatile
   860   00113E                     
   861                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 64:         RB5_ISR(0);
   862   00113E  0E00               	movlw	0
   863   001140  EC6B  F00A         	call	_RB5_ISR
   864   001144                     i2l1230:
   865                           
   866                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 67:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
   867   001144  A6F2               	btfss	242,3,c	;volatile
   868   001146  EFA7  F008         	goto	i2u231_41
   869   00114A  EFA9  F008         	goto	i2u231_40
   870   00114E                     i2u231_41:
   871   00114E  EFC4  F008         	goto	i2l1232
   872   001152                     i2u231_40:
   873   001152  A0F2               	btfss	242,0,c	;volatile
   874   001154  EFAE  F008         	goto	i2u232_41
   875   001158  EFB0  F008         	goto	i2u232_40
   876   00115C                     i2u232_41:
   877   00115C  EFC4  F008         	goto	i2l1232
   878   001160                     i2u232_40:
   879   001160  BA81               	btfsc	129,5,c	;volatile
   880   001162  EFB5  F008         	goto	i2u233_41
   881   001166  EFB7  F008         	goto	i2u233_40
   882   00116A                     i2u233_41:
   883   00116A  EFC4  F008         	goto	i2l1232
   884   00116E                     i2u233_40:
   885   00116E  5074               	movf	_RB5_Flag^0,w,c	;volatile
   886   001170  A4D8               	btfss	status,2,c
   887   001172  EFBD  F008         	goto	i2u234_41
   888   001176  EFBF  F008         	goto	i2u234_40
   889   00117A                     i2u234_41:
   890   00117A  EFC4  F008         	goto	i2l1232
   891   00117E                     i2u234_40:
   892   00117E                     
   893                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 68:        (PORTBbits.RB5 == GPIO_LOW) &
      +                          & (RB5_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 69:         RB5_Flag 
      +                          = 1;
   894   00117E  0E01               	movlw	1
   895   001180  6E74               	movwf	_RB5_Flag^0,c	;volatile
   896   001182                     
   897                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 70:         RB5_ISR(1);
   898   001182  0E01               	movlw	1
   899   001184  EC6B  F00A         	call	_RB5_ISR
   900   001188                     i2l1232:
   901                           
   902                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 73:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
   903   001188  A6F2               	btfss	242,3,c	;volatile
   904   00118A  EFC9  F008         	goto	i2u235_41
   905   00118E  EFCB  F008         	goto	i2u235_40
   906   001192                     i2u235_41:
   907   001192  EFE6  F008         	goto	i2l1234
   908   001196                     i2u235_40:
   909   001196  A0F2               	btfss	242,0,c	;volatile
   910   001198  EFD0  F008         	goto	i2u236_41
   911   00119C  EFD2  F008         	goto	i2u236_40
   912   0011A0                     i2u236_41:
   913   0011A0  EFE6  F008         	goto	i2l1234
   914   0011A4                     i2u236_40:
   915   0011A4  AC81               	btfss	129,6,c	;volatile
   916   0011A6  EFD7  F008         	goto	i2u237_41
   917   0011AA  EFD9  F008         	goto	i2u237_40
   918   0011AE                     i2u237_41:
   919   0011AE  EFE6  F008         	goto	i2l1234
   920   0011B2                     i2u237_40:
   921   0011B2  0473               	decf	_RB6_Flag^0,w,c	;volatile
   922   0011B4  A4D8               	btfss	status,2,c
   923   0011B6  EFDF  F008         	goto	i2u238_41
   924   0011BA  EFE1  F008         	goto	i2u238_40
   925   0011BE                     i2u238_41:
   926   0011BE  EFE6  F008         	goto	i2l1234
   927   0011C2                     i2u238_40:
   928   0011C2                     
   929                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 74:        (PORTBbits.RB6 == GPIO_HIGH) 
      +                          && (RB6_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 75:         RB6_Flag
      +                           = 0;
   930   0011C2  0E00               	movlw	0
   931   0011C4  6E73               	movwf	_RB6_Flag^0,c	;volatile
   932   0011C6                     
   933                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 76:         RB6_ISR(0);
   934   0011C6  0E00               	movlw	0
   935   0011C8  EC5E  F00A         	call	_RB6_ISR
   936   0011CC                     i2l1234:
   937                           
   938                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 79:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
   939   0011CC  A6F2               	btfss	242,3,c	;volatile
   940   0011CE  EFEB  F008         	goto	i2u239_41
   941   0011D2  EFED  F008         	goto	i2u239_40
   942   0011D6                     i2u239_41:
   943   0011D6  EF08  F009         	goto	i2l1236
   944   0011DA                     i2u239_40:
   945   0011DA  A0F2               	btfss	242,0,c	;volatile
   946   0011DC  EFF2  F008         	goto	i2u240_41
   947   0011E0  EFF4  F008         	goto	i2u240_40
   948   0011E4                     i2u240_41:
   949   0011E4  EF08  F009         	goto	i2l1236
   950   0011E8                     i2u240_40:
   951   0011E8  BC81               	btfsc	129,6,c	;volatile
   952   0011EA  EFF9  F008         	goto	i2u241_41
   953   0011EE  EFFB  F008         	goto	i2u241_40
   954   0011F2                     i2u241_41:
   955   0011F2  EF08  F009         	goto	i2l1236
   956   0011F6                     i2u241_40:
   957   0011F6  5073               	movf	_RB6_Flag^0,w,c	;volatile
   958   0011F8  A4D8               	btfss	status,2,c
   959   0011FA  EF01  F009         	goto	i2u242_41
   960   0011FE  EF03  F009         	goto	i2u242_40
   961   001202                     i2u242_41:
   962   001202  EF08  F009         	goto	i2l1236
   963   001206                     i2u242_40:
   964   001206                     
   965                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 80:        (PORTBbits.RB6 == GPIO_LOW) &
      +                          & (RB6_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 81:         RB6_Flag 
      +                          = 1;
   966   001206  0E01               	movlw	1
   967   001208  6E73               	movwf	_RB6_Flag^0,c	;volatile
   968   00120A                     
   969                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 82:         RB6_ISR(1);
   970   00120A  0E01               	movlw	1
   971   00120C  EC5E  F00A         	call	_RB6_ISR
   972   001210                     i2l1236:
   973                           
   974                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 85:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
   975   001210  A6F2               	btfss	242,3,c	;volatile
   976   001212  EF0D  F009         	goto	i2u243_41
   977   001216  EF0F  F009         	goto	i2u243_40
   978   00121A                     i2u243_41:
   979   00121A  EF2A  F009         	goto	i2l1238
   980   00121E                     i2u243_40:
   981   00121E  A0F2               	btfss	242,0,c	;volatile
   982   001220  EF14  F009         	goto	i2u244_41
   983   001224  EF16  F009         	goto	i2u244_40
   984   001228                     i2u244_41:
   985   001228  EF2A  F009         	goto	i2l1238
   986   00122C                     i2u244_40:
   987   00122C  AE81               	btfss	129,7,c	;volatile
   988   00122E  EF1B  F009         	goto	i2u245_41
   989   001232  EF1D  F009         	goto	i2u245_40
   990   001236                     i2u245_41:
   991   001236  EF2A  F009         	goto	i2l1238
   992   00123A                     i2u245_40:
   993   00123A  0472               	decf	_RB7_Flag^0,w,c	;volatile
   994   00123C  A4D8               	btfss	status,2,c
   995   00123E  EF23  F009         	goto	i2u246_41
   996   001242  EF25  F009         	goto	i2u246_40
   997   001246                     i2u246_41:
   998   001246  EF2A  F009         	goto	i2l1238
   999   00124A                     i2u246_40:
  1000   00124A                     
  1001                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 86:        (PORTBbits.RB7 == GPIO_HIGH) 
      +                          && (RB7_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 87:         RB7_Flag
      +                           = 0;
  1002   00124A  0E00               	movlw	0
  1003   00124C  6E72               	movwf	_RB7_Flag^0,c	;volatile
  1004   00124E                     
  1005                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 88:         RB7_ISR(0);
  1006   00124E  0E00               	movlw	0
  1007   001250  EC51  F00A         	call	_RB7_ISR
  1008   001254                     i2l1238:
  1009                           
  1010                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 91:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  1011   001254  A6F2               	btfss	242,3,c	;volatile
  1012   001256  EF2F  F009         	goto	i2u247_41
  1013   00125A  EF31  F009         	goto	i2u247_40
  1014   00125E                     i2u247_41:
  1015   00125E  EF4C  F009         	goto	i2l1240
  1016   001262                     i2u247_40:
  1017   001262  A0F2               	btfss	242,0,c	;volatile
  1018   001264  EF36  F009         	goto	i2u248_41
  1019   001268  EF38  F009         	goto	i2u248_40
  1020   00126C                     i2u248_41:
  1021   00126C  EF4C  F009         	goto	i2l1240
  1022   001270                     i2u248_40:
  1023   001270  BE81               	btfsc	129,7,c	;volatile
  1024   001272  EF3D  F009         	goto	i2u249_41
  1025   001276  EF3F  F009         	goto	i2u249_40
  1026   00127A                     i2u249_41:
  1027   00127A  EF4C  F009         	goto	i2l1240
  1028   00127E                     i2u249_40:
  1029   00127E  5072               	movf	_RB7_Flag^0,w,c	;volatile
  1030   001280  A4D8               	btfss	status,2,c
  1031   001282  EF45  F009         	goto	i2u250_41
  1032   001286  EF47  F009         	goto	i2u250_40
  1033   00128A                     i2u250_41:
  1034   00128A  EF4C  F009         	goto	i2l1240
  1035   00128E                     i2u250_40:
  1036   00128E                     
  1037                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 92:        (PORTBbits.RB7 == GPIO_LOW) &
      +                          & (RB7_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 93:         RB7_Flag 
      +                          = 1;
  1038   00128E  0E01               	movlw	1
  1039   001290  6E72               	movwf	_RB7_Flag^0,c	;volatile
  1040   001292                     
  1041                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 94:         RB7_ISR(1);
  1042   001292  0E01               	movlw	1
  1043   001294  EC51  F00A         	call	_RB7_ISR
  1044   001298                     i2l1240:
  1045                           
  1046                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 99:     if((1 == PIE1bits.ADIE) && (1 ==
      +                           PIR1bits.ADIF)){
  1047   001298  AC9D               	btfss	157,6,c	;volatile
  1048   00129A  EF51  F009         	goto	i2u251_41
  1049   00129E  EF53  F009         	goto	i2u251_40
  1050   0012A2                     i2u251_41:
  1051   0012A2  EF5C  F009         	goto	i2l1242
  1052   0012A6                     i2u251_40:
  1053   0012A6  AC9E               	btfss	158,6,c	;volatile
  1054   0012A8  EF58  F009         	goto	i2u252_41
  1055   0012AC  EF5A  F009         	goto	i2u252_40
  1056   0012B0                     i2u252_41:
  1057   0012B0  EF5C  F009         	goto	i2l1242
  1058   0012B4                     i2u252_40:
  1059   0012B4                     
  1060                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 100:         ADC_ISR();
  1061   0012B4  ECB9  F00A         	call	_ADC_ISR	;wreg free
  1062   0012B8                     i2l1242:
  1063                           
  1064                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 104:     if((1 == INTCONbits.TMR0IE) && 
      +                          (1 == INTCONbits.TMR0IF)){
  1065   0012B8  AAF2               	btfss	242,5,c	;volatile
  1066   0012BA  EF61  F009         	goto	i2u253_41
  1067   0012BE  EF63  F009         	goto	i2u253_40
  1068   0012C2                     i2u253_41:
  1069   0012C2  EF6C  F009         	goto	i2l1244
  1070   0012C6                     i2u253_40:
  1071   0012C6  A4F2               	btfss	242,2,c	;volatile
  1072   0012C8  EF68  F009         	goto	i2u254_41
  1073   0012CC  EF6A  F009         	goto	i2u254_40
  1074   0012D0                     i2u254_41:
  1075   0012D0  EF6C  F009         	goto	i2l1244
  1076   0012D4                     i2u254_40:
  1077   0012D4                     
  1078                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 105:         TMR0_ISR();
  1079   0012D4  EC97  F00A         	call	_TMR0_ISR	;wreg free
  1080   0012D8                     i2l1244:
  1081                           
  1082                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 108:     if((1 == PIE1bits.TMR1IE) && (1
      +                           == PIR1bits.TMR1IF)){
  1083   0012D8  A09D               	btfss	157,0,c	;volatile
  1084   0012DA  EF71  F009         	goto	i2u255_41
  1085   0012DE  EF73  F009         	goto	i2u255_40
  1086   0012E2                     i2u255_41:
  1087   0012E2  EF7C  F009         	goto	i2l1246
  1088   0012E6                     i2u255_40:
  1089   0012E6  A09E               	btfss	158,0,c	;volatile
  1090   0012E8  EF78  F009         	goto	i2u256_41
  1091   0012EC  EF7A  F009         	goto	i2u256_40
  1092   0012F0                     i2u256_41:
  1093   0012F0  EF7C  F009         	goto	i2l1246
  1094   0012F4                     i2u256_40:
  1095   0012F4                     
  1096                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 109:         TMR1_ISR();
  1097   0012F4  EC91  F00A         	call	_TMR1_ISR	;wreg free
  1098   0012F8                     i2l1246:
  1099                           
  1100                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 112:     if((1 == PIE1bits.TMR2IE) && (1
      +                           == PIR1bits.TMR2IF)){
  1101   0012F8  A29D               	btfss	157,1,c	;volatile
  1102   0012FA  EF81  F009         	goto	i2u257_41
  1103   0012FE  EF83  F009         	goto	i2u257_40
  1104   001302                     i2u257_41:
  1105   001302  EF8C  F009         	goto	i2l1248
  1106   001306                     i2u257_40:
  1107   001306  A29E               	btfss	158,1,c	;volatile
  1108   001308  EF88  F009         	goto	i2u258_41
  1109   00130C  EF8A  F009         	goto	i2u258_40
  1110   001310                     i2u258_41:
  1111   001310  EF8C  F009         	goto	i2l1248
  1112   001314                     i2u258_40:
  1113   001314                     
  1114                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 113:         TMR2_ISR();
  1115   001314  ECA2  F00A         	call	_TMR2_ISR	;wreg free
  1116   001318                     i2l1248:
  1117                           
  1118                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 116:     if((1 == PIE2bits.TMR3IE) && (1
      +                           == PIR2bits.TMR3IF)){
  1119   001318  A2A0               	btfss	160,1,c	;volatile
  1120   00131A  EF91  F009         	goto	i2u259_41
  1121   00131E  EF93  F009         	goto	i2u259_40
  1122   001322                     i2u259_41:
  1123   001322  EF9C  F009         	goto	i2l1250
  1124   001326                     i2u259_40:
  1125   001326  A2A1               	btfss	161,1,c	;volatile
  1126   001328  EF98  F009         	goto	i2u260_41
  1127   00132C  EF9A  F009         	goto	i2u260_40
  1128   001330                     i2u260_41:
  1129   001330  EF9C  F009         	goto	i2l1250
  1130   001334                     i2u260_40:
  1131   001334                     
  1132                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 117:         TMR3_ISR();
  1133   001334  EC8B  F00A         	call	_TMR3_ISR	;wreg free
  1134   001338                     i2l1250:
  1135                           
  1136                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 121:     if((1 == PIE1bits.TXIE) && (1 =
      +                          = PIR1bits.TXIF)){
  1137   001338  A89D               	btfss	157,4,c	;volatile
  1138   00133A  EFA1  F009         	goto	i2u261_41
  1139   00133E  EFA3  F009         	goto	i2u261_40
  1140   001342                     i2u261_41:
  1141   001342  EFAC  F009         	goto	i2l1252
  1142   001346                     i2u261_40:
  1143   001346  A89E               	btfss	158,4,c	;volatile
  1144   001348  EFA8  F009         	goto	i2u262_41
  1145   00134C  EFAA  F009         	goto	i2u262_40
  1146   001350                     i2u262_41:
  1147   001350  EFAC  F009         	goto	i2l1252
  1148   001354                     i2u262_40:
  1149   001354                     
  1150                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 122:         EUSART_TX_ISR();
  1151   001354  ECB3  F00A         	call	_EUSART_TX_ISR	;wreg free
  1152   001358                     i2l1252:
  1153                           
  1154                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 125:     if((1 == PIE1bits.RCIE) && (1 =
      +                          = PIR1bits.RCIF)){
  1155   001358  AA9D               	btfss	157,5,c	;volatile
  1156   00135A  EFB1  F009         	goto	i2u263_41
  1157   00135E  EFB3  F009         	goto	i2u263_40
  1158   001362                     i2u263_41:
  1159   001362  EFBC  F009         	goto	i2l1254
  1160   001366                     i2u263_40:
  1161   001366  AA9E               	btfss	158,5,c	;volatile
  1162   001368  EFB8  F009         	goto	i2u264_41
  1163   00136C  EFBA  F009         	goto	i2u264_40
  1164   001370                     i2u264_41:
  1165   001370  EFBC  F009         	goto	i2l1254
  1166   001374                     i2u264_40:
  1167   001374                     
  1168                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 126:         EUSART_RX_ISR();
  1169   001374  ECBD  F00A         	call	_EUSART_RX_ISR	;wreg free
  1170   001378                     i2l1254:
  1171                           
  1172                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 131:     if((1 == PIE1bits.SSPIE) && (1 
      +                          == PIR1bits.SSPIF)){
  1173   001378  A69D               	btfss	157,3,c	;volatile
  1174   00137A  EFC1  F009         	goto	i2u265_41
  1175   00137E  EFC3  F009         	goto	i2u265_40
  1176   001382                     i2u265_41:
  1177   001382  EFCC  F009         	goto	i2l1256
  1178   001386                     i2u265_40:
  1179   001386  A69E               	btfss	158,3,c	;volatile
  1180   001388  EFC8  F009         	goto	i2u266_41
  1181   00138C  EFCA  F009         	goto	i2u266_40
  1182   001390                     i2u266_41:
  1183   001390  EFCC  F009         	goto	i2l1256
  1184   001394                     i2u266_40:
  1185   001394                     
  1186                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 132:         MSSP_I2C_ISR();
  1187   001394  ECA9  F00A         	call	_MSSP_I2C_ISR	;wreg free
  1188   001398                     i2l1256:
  1189                           
  1190                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 135:     if((1 == PIE2bits.BCLIE) && (1 
      +                          == PIR2bits.BCLIF)){
  1191   001398  A6A0               	btfss	160,3,c	;volatile
  1192   00139A  EFD1  F009         	goto	i2u267_41
  1193   00139E  EFD3  F009         	goto	i2u267_40
  1194   0013A2                     i2u267_41:
  1195   0013A2  EFDC  F009         	goto	i2l1258
  1196   0013A6                     i2u267_40:
  1197   0013A6  A6A1               	btfss	161,3,c	;volatile
  1198   0013A8  EFD8  F009         	goto	i2u268_41
  1199   0013AC  EFDA  F009         	goto	i2u268_40
  1200   0013B0                     i2u268_41:
  1201   0013B0  EFDC  F009         	goto	i2l1258
  1202   0013B4                     i2u268_40:
  1203   0013B4                     
  1204                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 136:         MSSP_I2C_BC_ISR();
  1205   0013B4  ECAB  F00A         	call	_MSSP_I2C_BC_ISR	;wreg free
  1206   0013B8                     i2l1258:
  1207                           
  1208                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 139:     if((1 == PIE1bits.SSPIE) && (1 
      +                          == PIR1bits.SSPIF)){
  1209   0013B8  A69D               	btfss	157,3,c	;volatile
  1210   0013BA  EFE1  F009         	goto	i2u269_41
  1211   0013BE  EFE3  F009         	goto	i2u269_40
  1212   0013C2                     i2u269_41:
  1213   0013C2  EFEC  F009         	goto	i2l1260
  1214   0013C6                     i2u269_40:
  1215   0013C6  A69E               	btfss	158,3,c	;volatile
  1216   0013C8  EFE8  F009         	goto	i2u270_41
  1217   0013CC  EFEA  F009         	goto	i2u270_40
  1218   0013D0                     i2u270_41:
  1219   0013D0  EFEC  F009         	goto	i2l1260
  1220   0013D4                     i2u270_40:
  1221   0013D4                     
  1222                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 140:         MSSP_SPI_ISR();
  1223   0013D4  ECBC  F00A         	call	_MSSP_SPI_ISR	;wreg free
  1224   0013D8                     i2l1260:
  1225                           
  1226                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 145:     if((1 == PIE1bits.CCP1IE) && (1
      +                           == PIR1bits.CCP1IF)){
  1227   0013D8  A49D               	btfss	157,2,c	;volatile
  1228   0013DA  EFF1  F009         	goto	i2u271_41
  1229   0013DE  EFF3  F009         	goto	i2u271_40
  1230   0013E2                     i2u271_41:
  1231   0013E2  EFFC  F009         	goto	i2l1262
  1232   0013E6                     i2u271_40:
  1233   0013E6  A49E               	btfss	158,2,c	;volatile
  1234   0013E8  EFF8  F009         	goto	i2u272_41
  1235   0013EC  EFFA  F009         	goto	i2u272_40
  1236   0013F0                     i2u272_41:
  1237   0013F0  EFFC  F009         	goto	i2l1262
  1238   0013F4                     i2u272_40:
  1239   0013F4                     
  1240                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 146:         CCP1_ISR();
  1241   0013F4  ECB7  F00A         	call	_CCP1_ISR	;wreg free
  1242   0013F8                     i2l1262:
  1243                           
  1244                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 149:     if((1 == PIE2bits.CCP2IE) && (1
      +                           == PIR2bits.CCP2IF)){
  1245   0013F8  A0A0               	btfss	160,0,c	;volatile
  1246   0013FA  EF01  F00A         	goto	i2u273_41
  1247   0013FE  EF03  F00A         	goto	i2u273_40
  1248   001402                     i2u273_41:
  1249   001402  EF0C  F00A         	goto	i2l1265
  1250   001406                     i2u273_40:
  1251   001406  A0A1               	btfss	161,0,c	;volatile
  1252   001408  EF08  F00A         	goto	i2u274_41
  1253   00140C  EF0A  F00A         	goto	i2u274_40
  1254   001410                     i2u274_41:
  1255   001410  EF0C  F00A         	goto	i2l1265
  1256   001414                     i2u274_40:
  1257   001414                     
  1258                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 150:         CCP2_ISR();
  1259   001414  ECB5  F00A         	call	_CCP2_ISR	;wreg free
  1260   001418                     i2l1265:
  1261   001418  9277               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1262   00141A  0011               	retfie		f
  1263   00141C                     __end_of_InterruptManager:
  1264                           	callstack 0
  1265                           
  1266 ;; *************** function _TMR3_ISR *****************
  1267 ;; Defined at:
  1268 ;;		line 102 in file "MCAL_Layer/Timer3/hal_timr3.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;		None
  1271 ;; Auto vars:     Size  Location     Type
  1272 ;;		None
  1273 ;; Return value:  Size  Location     Type
  1274 ;;                  1    wreg      void 
  1275 ;; Registers used:
  1276 ;;		wreg, status,2
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1286 ;;Total ram usage:        0 bytes
  1287 ;; Hardware stack levels used: 1
  1288 ;; This function calls:
  1289 ;;		Nothing
  1290 ;; This function is called by:
  1291 ;;		_InterruptManager
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295                           	psect	text4
  1296   001516                     __ptext4:
  1297                           	callstack 0
  1298   001516                     _TMR3_ISR:
  1299                           	callstack 27
  1300   001516                     
  1301                           ;MCAL_Layer/Timer3/hal_timr3.c: 103:     (PIR2bits.TMR3IF = 0);
  1302   001516  92A1               	bcf	161,1,c	;volatile
  1303   001518                     
  1304                           ;MCAL_Layer/Timer3/hal_timr3.c: 104:     TMR3H = (timer3_preload) >> 8;
  1305   001518  5010               	movf	(_timer3_preload+1)^0,w,c
  1306   00151A  6EB3               	movwf	179,c	;volatile
  1307   00151C                     
  1308                           ;MCAL_Layer/Timer3/hal_timr3.c: 105:     TMR3L = (uint8)(timer3_preload);
  1309   00151C  C00F  FFB2         	movff	_timer3_preload,4018	;volatile
  1310   001520  0012               	return		;funcret
  1311   001522                     __end_of_TMR3_ISR:
  1312                           	callstack 0
  1313                           
  1314 ;; *************** function _TMR2_ISR *****************
  1315 ;; Defined at:
  1316 ;;		line 95 in file "MCAL_Layer/Timer2/hal_timr2.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;		None
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;		None
  1321 ;; Return value:  Size  Location     Type
  1322 ;;                  1    wreg      void 
  1323 ;; Registers used:
  1324 ;;		None
  1325 ;; Tracked objects:
  1326 ;;		On entry : 0/0
  1327 ;;		On exit  : 0/0
  1328 ;;		Unchanged: 0/0
  1329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1334 ;;Total ram usage:        0 bytes
  1335 ;; Hardware stack levels used: 1
  1336 ;; This function calls:
  1337 ;;		Nothing
  1338 ;; This function is called by:
  1339 ;;		_InterruptManager
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343                           	psect	text5
  1344   001544                     __ptext5:
  1345                           	callstack 0
  1346   001544                     _TMR2_ISR:
  1347                           	callstack 27
  1348   001544                     
  1349                           ;MCAL_Layer/Timer2/hal_timr2.c: 96:     (PIR1bits.TMR2IF = 0);
  1350   001544  929E               	bcf	158,1,c	;volatile
  1351                           
  1352                           ;MCAL_Layer/Timer2/hal_timr2.c: 97:     TMR2 = timer2_preload;
  1353   001546  C03F  FFCC         	movff	_timer2_preload,4044	;volatile
  1354   00154A  0012               	return		;funcret
  1355   00154C                     __end_of_TMR2_ISR:
  1356                           	callstack 0
  1357                           
  1358 ;; *************** function _TMR1_ISR *****************
  1359 ;; Defined at:
  1360 ;;		line 102 in file "MCAL_Layer/Timer1/hal_timr1.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;		None
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;		None
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  1    wreg      void 
  1367 ;; Registers used:
  1368 ;;		wreg, status,2
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1378 ;;Total ram usage:        0 bytes
  1379 ;; Hardware stack levels used: 1
  1380 ;; This function calls:
  1381 ;;		Nothing
  1382 ;; This function is called by:
  1383 ;;		_InterruptManager
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           	psect	text6
  1388   001522                     __ptext6:
  1389                           	callstack 0
  1390   001522                     _TMR1_ISR:
  1391                           	callstack 27
  1392   001522                     
  1393                           ;MCAL_Layer/Timer1/hal_timr1.c: 103:     (PIR1bits.TMR1IF = 0);
  1394   001522  909E               	bcf	158,0,c	;volatile
  1395   001524                     
  1396                           ;MCAL_Layer/Timer1/hal_timr1.c: 104:     TMR1H = (timer1_preload) >> 8;
  1397   001524  5016               	movf	(_timer1_preload+1)^0,w,c	;volatile
  1398   001526  6ECF               	movwf	207,c	;volatile
  1399   001528                     
  1400                           ;MCAL_Layer/Timer1/hal_timr1.c: 105:     TMR1L = (uint8)(timer1_preload);
  1401   001528  C015  FFCE         	movff	_timer1_preload,4046	;volatile
  1402   00152C  0012               	return		;funcret
  1403   00152E                     __end_of_TMR1_ISR:
  1404                           	callstack 0
  1405                           
  1406 ;; *************** function _TMR0_ISR *****************
  1407 ;; Defined at:
  1408 ;;		line 107 in file "MCAL_Layer/Timer0/hal_timr0.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;		None
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;		None
  1413 ;; Return value:  Size  Location     Type
  1414 ;;                  1    wreg      void 
  1415 ;; Registers used:
  1416 ;;		wreg, status,2
  1417 ;; Tracked objects:
  1418 ;;		On entry : 0/0
  1419 ;;		On exit  : 0/0
  1420 ;;		Unchanged: 0/0
  1421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1426 ;;Total ram usage:        0 bytes
  1427 ;; Hardware stack levels used: 1
  1428 ;; This function calls:
  1429 ;;		Nothing
  1430 ;; This function is called by:
  1431 ;;		_InterruptManager
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           
  1435                           	psect	text7
  1436   00152E                     __ptext7:
  1437                           	callstack 0
  1438   00152E                     _TMR0_ISR:
  1439                           	callstack 27
  1440   00152E                     
  1441                           ;MCAL_Layer/Timer0/hal_timr0.c: 108:     (INTCONbits.TMR0IF = 0);
  1442   00152E  94F2               	bcf	242,2,c	;volatile
  1443   001530                     
  1444                           ;MCAL_Layer/Timer0/hal_timr0.c: 109:     TMR0H = (timer0_preload) >> 8;
  1445   001530  501A               	movf	(_timer0_preload+1)^0,w,c
  1446   001532  6ED7               	movwf	215,c	;volatile
  1447   001534                     
  1448                           ;MCAL_Layer/Timer0/hal_timr0.c: 110:     TMR0L = (uint8)(timer0_preload);
  1449   001534  C019  FFD6         	movff	_timer0_preload,4054	;volatile
  1450   001538  0012               	return		;funcret
  1451   00153A                     __end_of_TMR0_ISR:
  1452                           	callstack 0
  1453                           
  1454 ;; *************** function _RB7_ISR *****************
  1455 ;; Defined at:
  1456 ;;		line 164 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;  RB7_Source      1    wreg     unsigned char 
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;  RB7_Source      1    0[COMRAM] unsigned char 
  1461 ;; Return value:  Size  Location     Type
  1462 ;;                  1    wreg      void 
  1463 ;; Registers used:
  1464 ;;		wreg, status,2, status,0
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1471 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1473 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1474 ;;Total ram usage:        1 bytes
  1475 ;; Hardware stack levels used: 1
  1476 ;; This function calls:
  1477 ;;		Nothing
  1478 ;; This function is called by:
  1479 ;;		_InterruptManager
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483                           	psect	text8
  1484   0014A2                     __ptext8:
  1485                           	callstack 0
  1486   0014A2                     _RB7_ISR:
  1487                           	callstack 27
  1488                           
  1489                           ;incstack = 0
  1490                           ;RB7_ISR@RB7_Source stored from wreg
  1491   0014A2  6E76               	movwf	RB7_ISR@RB7_Source^0,c
  1492   0014A4                     
  1493                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 166:     (INTCONbits.RBIF = 0);
  1494   0014A4  90F2               	bcf	242,0,c	;volatile
  1495   0014A6                     
  1496                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 169:     if(0 == RB7_Source){
  1497   0014A6  5076               	movf	RB7_ISR@RB7_Source^0,w,c
  1498   0014A8  A4D8               	btfss	status,2,c
  1499   0014AA  EF59  F00A         	goto	i2u35_41
  1500   0014AE  EF5B  F00A         	goto	i2u35_40
  1501   0014B2                     i2u35_41:
  1502   0014B2  EF5D  F00A         	goto	i2l2752
  1503   0014B6                     i2u35_40:
  1504   0014B6  EF5D  F00A         	goto	i2l1045
  1505   0014BA                     i2l2752:
  1506   0014BA                     i2l1045:
  1507   0014BA  0012               	return		;funcret
  1508   0014BC                     __end_of_RB7_ISR:
  1509                           	callstack 0
  1510                           
  1511 ;; *************** function _RB6_ISR *****************
  1512 ;; Defined at:
  1513 ;;		line 145 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;  RB6_Source      1    wreg     unsigned char 
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;  RB6_Source      1    0[COMRAM] unsigned char 
  1518 ;; Return value:  Size  Location     Type
  1519 ;;                  1    wreg      void 
  1520 ;; Registers used:
  1521 ;;		wreg, status,2, status,0
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1528 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1530 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1531 ;;Total ram usage:        1 bytes
  1532 ;; Hardware stack levels used: 1
  1533 ;; This function calls:
  1534 ;;		Nothing
  1535 ;; This function is called by:
  1536 ;;		_InterruptManager
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           	psect	text9
  1541   0014BC                     __ptext9:
  1542                           	callstack 0
  1543   0014BC                     _RB6_ISR:
  1544                           	callstack 27
  1545                           
  1546                           ;incstack = 0
  1547                           ;RB6_ISR@RB6_Source stored from wreg
  1548   0014BC  6E76               	movwf	RB6_ISR@RB6_Source^0,c
  1549   0014BE                     
  1550                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 147:     (INTCONbits.RBIF = 0);
  1551   0014BE  90F2               	bcf	242,0,c	;volatile
  1552   0014C0                     
  1553                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 150:     if(0 == RB6_Source){
  1554   0014C0  5076               	movf	RB6_ISR@RB6_Source^0,w,c
  1555   0014C2  A4D8               	btfss	status,2,c
  1556   0014C4  EF66  F00A         	goto	i2u34_41
  1557   0014C8  EF68  F00A         	goto	i2u34_40
  1558   0014CC                     i2u34_41:
  1559   0014CC  EF6A  F00A         	goto	i2l2738
  1560   0014D0                     i2u34_40:
  1561   0014D0  EF6A  F00A         	goto	i2l1034
  1562   0014D4                     i2l2738:
  1563   0014D4                     i2l1034:
  1564   0014D4  0012               	return		;funcret
  1565   0014D6                     __end_of_RB6_ISR:
  1566                           	callstack 0
  1567                           
  1568 ;; *************** function _RB5_ISR *****************
  1569 ;; Defined at:
  1570 ;;		line 126 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;  RB5_Source      1    wreg     unsigned char 
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;  RB5_Source      1    0[COMRAM] unsigned char 
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  1    wreg      void 
  1577 ;; Registers used:
  1578 ;;		wreg, status,2, status,0
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1585 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1587 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1588 ;;Total ram usage:        1 bytes
  1589 ;; Hardware stack levels used: 1
  1590 ;; This function calls:
  1591 ;;		Nothing
  1592 ;; This function is called by:
  1593 ;;		_InterruptManager
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           	psect	text10
  1598   0014D6                     __ptext10:
  1599                           	callstack 0
  1600   0014D6                     _RB5_ISR:
  1601                           	callstack 27
  1602                           
  1603                           ;incstack = 0
  1604                           ;RB5_ISR@RB5_Source stored from wreg
  1605   0014D6  6E76               	movwf	RB5_ISR@RB5_Source^0,c
  1606   0014D8                     
  1607                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 128:     (INTCONbits.RBIF = 0);
  1608   0014D8  90F2               	bcf	242,0,c	;volatile
  1609   0014DA                     
  1610                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 131:     if(0 == RB5_Source){
  1611   0014DA  5076               	movf	RB5_ISR@RB5_Source^0,w,c
  1612   0014DC  A4D8               	btfss	status,2,c
  1613   0014DE  EF73  F00A         	goto	i2u33_41
  1614   0014E2  EF75  F00A         	goto	i2u33_40
  1615   0014E6                     i2u33_41:
  1616   0014E6  EF77  F00A         	goto	i2l2724
  1617   0014EA                     i2u33_40:
  1618   0014EA  EF77  F00A         	goto	i2l1023
  1619   0014EE                     i2l2724:
  1620   0014EE                     i2l1023:
  1621   0014EE  0012               	return		;funcret
  1622   0014F0                     __end_of_RB5_ISR:
  1623                           	callstack 0
  1624                           
  1625 ;; *************** function _RB4_ISR *****************
  1626 ;; Defined at:
  1627 ;;		line 107 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;  RB4_Source      1    wreg     unsigned char 
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;  RB4_Source      1    0[COMRAM] unsigned char 
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  1    wreg      void 
  1634 ;; Registers used:
  1635 ;;		wreg, status,2, status,0
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1642 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1644 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1645 ;;Total ram usage:        1 bytes
  1646 ;; Hardware stack levels used: 1
  1647 ;; This function calls:
  1648 ;;		Nothing
  1649 ;; This function is called by:
  1650 ;;		_InterruptManager
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           	psect	text11
  1655   0014F0                     __ptext11:
  1656                           	callstack 0
  1657   0014F0                     _RB4_ISR:
  1658                           	callstack 27
  1659                           
  1660                           ;incstack = 0
  1661                           ;RB4_ISR@RB4_Source stored from wreg
  1662   0014F0  6E76               	movwf	RB4_ISR@RB4_Source^0,c
  1663   0014F2                     
  1664                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 109:     (INTCONbits.RBIF = 0);
  1665   0014F2  90F2               	bcf	242,0,c	;volatile
  1666   0014F4                     
  1667                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 112:     if(0 == RB4_Source){
  1668   0014F4  5076               	movf	RB4_ISR@RB4_Source^0,w,c
  1669   0014F6  A4D8               	btfss	status,2,c
  1670   0014F8  EF80  F00A         	goto	i2u32_41
  1671   0014FC  EF82  F00A         	goto	i2u32_40
  1672   001500                     i2u32_41:
  1673   001500  EF84  F00A         	goto	i2l2710
  1674   001504                     i2u32_40:
  1675   001504  EF84  F00A         	goto	i2l1012
  1676   001508                     i2l2710:
  1677   001508                     i2l1012:
  1678   001508  0012               	return		;funcret
  1679   00150A                     __end_of_RB4_ISR:
  1680                           	callstack 0
  1681                           
  1682 ;; *************** function _MSSP_SPI_ISR *****************
  1683 ;; Defined at:
  1684 ;;		line 105 in file "MCAL_Layer/SPI/hal_spi.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;		None
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;		None
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  1    wreg      void 
  1691 ;; Registers used:
  1692 ;;		None
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1702 ;;Total ram usage:        0 bytes
  1703 ;; Hardware stack levels used: 1
  1704 ;; This function calls:
  1705 ;;		Nothing
  1706 ;; This function is called by:
  1707 ;;		_InterruptManager
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           	psect	text12
  1712   001578                     __ptext12:
  1713                           	callstack 0
  1714   001578                     _MSSP_SPI_ISR:
  1715                           	callstack 27
  1716   001578  0012               	return		;funcret
  1717   00157A                     __end_of_MSSP_SPI_ISR:
  1718                           	callstack 0
  1719                           
  1720 ;; *************** function _MSSP_I2C_ISR *****************
  1721 ;; Defined at:
  1722 ;;		line 242 in file "MCAL_Layer/I2C/hal_i2c.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;		None
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;		None
  1727 ;; Return value:  Size  Location     Type
  1728 ;;                  1    wreg      void 
  1729 ;; Registers used:
  1730 ;;		None
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1740 ;;Total ram usage:        0 bytes
  1741 ;; Hardware stack levels used: 1
  1742 ;; This function calls:
  1743 ;;		Nothing
  1744 ;; This function is called by:
  1745 ;;		_InterruptManager
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749                           	psect	text13
  1750   001552                     __ptext13:
  1751                           	callstack 0
  1752   001552                     _MSSP_I2C_ISR:
  1753                           	callstack 27
  1754   001552                     
  1755                           ;MCAL_Layer/I2C/hal_i2c.c: 244:     (PIR1bits.SSPIF = 0);
  1756   001552  969E               	bcf	158,3,c	;volatile
  1757   001554  0012               	return		;funcret
  1758   001556                     __end_of_MSSP_I2C_ISR:
  1759                           	callstack 0
  1760                           
  1761 ;; *************** function _MSSP_I2C_BC_ISR *****************
  1762 ;; Defined at:
  1763 ;;		line 251 in file "MCAL_Layer/I2C/hal_i2c.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;		None
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;		None
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  1    wreg      void 
  1770 ;; Registers used:
  1771 ;;		None
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1781 ;;Total ram usage:        0 bytes
  1782 ;; Hardware stack levels used: 1
  1783 ;; This function calls:
  1784 ;;		Nothing
  1785 ;; This function is called by:
  1786 ;;		_InterruptManager
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790                           	psect	text14
  1791   001556                     __ptext14:
  1792                           	callstack 0
  1793   001556                     _MSSP_I2C_BC_ISR:
  1794                           	callstack 27
  1795   001556                     
  1796                           ;MCAL_Layer/I2C/hal_i2c.c: 253:     (PIR2bits.BCLIF = 0);
  1797   001556  96A1               	bcf	161,3,c	;volatile
  1798   001558  0012               	return		;funcret
  1799   00155A                     __end_of_MSSP_I2C_BC_ISR:
  1800                           	callstack 0
  1801                           
  1802 ;; *************** function _INT2_ISR *****************
  1803 ;; Defined at:
  1804 ;;		line 95 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;		None
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;		None
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  1    wreg      void 
  1811 ;; Registers used:
  1812 ;;		None
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1822 ;;Total ram usage:        0 bytes
  1823 ;; Hardware stack levels used: 1
  1824 ;; This function calls:
  1825 ;;		Nothing
  1826 ;; This function is called by:
  1827 ;;		_InterruptManager
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           	psect	text15
  1832   00155A                     __ptext15:
  1833                           	callstack 0
  1834   00155A                     _INT2_ISR:
  1835                           	callstack 27
  1836   00155A                     
  1837                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 97:     (INTCON3bits.INT2IF = 0);
  1838   00155A  92F0               	bcf	240,1,c	;volatile
  1839   00155C  0012               	return		;funcret
  1840   00155E                     __end_of_INT2_ISR:
  1841                           	callstack 0
  1842                           
  1843 ;; *************** function _INT1_ISR *****************
  1844 ;; Defined at:
  1845 ;;		line 86 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;		None
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;		None
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  1    wreg      void 
  1852 ;; Registers used:
  1853 ;;		None
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1863 ;;Total ram usage:        0 bytes
  1864 ;; Hardware stack levels used: 1
  1865 ;; This function calls:
  1866 ;;		Nothing
  1867 ;; This function is called by:
  1868 ;;		_InterruptManager
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           	psect	text16
  1873   00155E                     __ptext16:
  1874                           	callstack 0
  1875   00155E                     _INT1_ISR:
  1876                           	callstack 27
  1877   00155E                     
  1878                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 88:     (INTCON3bits.INT1IF = 0);
  1879   00155E  90F0               	bcf	240,0,c	;volatile
  1880   001560  0012               	return		;funcret
  1881   001562                     __end_of_INT1_ISR:
  1882                           	callstack 0
  1883                           
  1884 ;; *************** function _INT0_ISR *****************
  1885 ;; Defined at:
  1886 ;;		line 74 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;		None
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;		None
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  1    wreg      void 
  1893 ;; Registers used:
  1894 ;;		None
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1904 ;;Total ram usage:        0 bytes
  1905 ;; Hardware stack levels used: 1
  1906 ;; This function calls:
  1907 ;;		Nothing
  1908 ;; This function is called by:
  1909 ;;		_InterruptManager
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           	psect	text17
  1914   001562                     __ptext17:
  1915                           	callstack 0
  1916   001562                     _INT0_ISR:
  1917                           	callstack 27
  1918   001562                     
  1919                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 76:     (INTCONbits.INT0IF = 0);
  1920   001562  92F2               	bcf	242,1,c	;volatile
  1921   001564  0012               	return		;funcret
  1922   001566                     __end_of_INT0_ISR:
  1923                           	callstack 0
  1924                           
  1925 ;; *************** function _EUSART_TX_ISR *****************
  1926 ;; Defined at:
  1927 ;;		line 243 in file "MCAL_Layer/usart/hal_usart.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;		None
  1930 ;; Auto vars:     Size  Location     Type
  1931 ;;		None
  1932 ;; Return value:  Size  Location     Type
  1933 ;;                  1    wreg      void 
  1934 ;; Registers used:
  1935 ;;		None
  1936 ;; Tracked objects:
  1937 ;;		On entry : 0/0
  1938 ;;		On exit  : 0/0
  1939 ;;		Unchanged: 0/0
  1940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1945 ;;Total ram usage:        0 bytes
  1946 ;; Hardware stack levels used: 1
  1947 ;; This function calls:
  1948 ;;		Nothing
  1949 ;; This function is called by:
  1950 ;;		_InterruptManager
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           	psect	text18
  1955   001566                     __ptext18:
  1956                           	callstack 0
  1957   001566                     _EUSART_TX_ISR:
  1958                           	callstack 27
  1959   001566                     
  1960                           ;MCAL_Layer/usart/hal_usart.c: 244:     (PIE1bits.TXIE = 0);
  1961   001566  989D               	bcf	157,4,c	;volatile
  1962   001568  0012               	return		;funcret
  1963   00156A                     __end_of_EUSART_TX_ISR:
  1964                           	callstack 0
  1965                           
  1966 ;; *************** function _EUSART_RX_ISR *****************
  1967 ;; Defined at:
  1968 ;;		line 250 in file "MCAL_Layer/usart/hal_usart.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;		None
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;		None
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  1    wreg      void 
  1975 ;; Registers used:
  1976 ;;		wreg, status,2, status,0
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1986 ;;Total ram usage:        0 bytes
  1987 ;; Hardware stack levels used: 1
  1988 ;; This function calls:
  1989 ;;		Nothing
  1990 ;; This function is called by:
  1991 ;;		_InterruptManager
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           	psect	text19
  1996   00157A                     __ptext19:
  1997                           	callstack 0
  1998   00157A                     _EUSART_RX_ISR:
  1999                           	callstack 27
  2000   00157A  0012               	return		;funcret
  2001   00157C                     __end_of_EUSART_RX_ISR:
  2002                           	callstack 0
  2003                           
  2004 ;; *************** function _CCP2_ISR *****************
  2005 ;; Defined at:
  2006 ;;		line 260 in file "MCAL_Layer/CCP/hal_ccp.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;		None
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;		None
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  1    wreg      void 
  2013 ;; Registers used:
  2014 ;;		None
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2024 ;;Total ram usage:        0 bytes
  2025 ;; Hardware stack levels used: 1
  2026 ;; This function calls:
  2027 ;;		Nothing
  2028 ;; This function is called by:
  2029 ;;		_InterruptManager
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032                           
  2033                           	psect	text20
  2034   00156A                     __ptext20:
  2035                           	callstack 0
  2036   00156A                     _CCP2_ISR:
  2037                           	callstack 27
  2038   00156A                     
  2039                           ;MCAL_Layer/CCP/hal_ccp.c: 261:     (PIR2bits.CCP2IF = 0);
  2040   00156A  90A1               	bcf	161,0,c	;volatile
  2041   00156C  0012               	return		;funcret
  2042   00156E                     __end_of_CCP2_ISR:
  2043                           	callstack 0
  2044                           
  2045 ;; *************** function _CCP1_ISR *****************
  2046 ;; Defined at:
  2047 ;;		line 252 in file "MCAL_Layer/CCP/hal_ccp.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;		None
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;		None
  2052 ;; Return value:  Size  Location     Type
  2053 ;;                  1    wreg      void 
  2054 ;; Registers used:
  2055 ;;		None
  2056 ;; Tracked objects:
  2057 ;;		On entry : 0/0
  2058 ;;		On exit  : 0/0
  2059 ;;		Unchanged: 0/0
  2060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2065 ;;Total ram usage:        0 bytes
  2066 ;; Hardware stack levels used: 1
  2067 ;; This function calls:
  2068 ;;		Nothing
  2069 ;; This function is called by:
  2070 ;;		_InterruptManager
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074                           	psect	text21
  2075   00156E                     __ptext21:
  2076                           	callstack 0
  2077   00156E                     _CCP1_ISR:
  2078                           	callstack 27
  2079   00156E                     
  2080                           ;MCAL_Layer/CCP/hal_ccp.c: 253:     (PIR1bits.CCP1IF = 0);
  2081   00156E  949E               	bcf	158,2,c	;volatile
  2082   001570  0012               	return		;funcret
  2083   001572                     __end_of_CCP1_ISR:
  2084                           	callstack 0
  2085                           
  2086 ;; *************** function _ADC_ISR *****************
  2087 ;; Defined at:
  2088 ;;		line 296 in file "MCAL_Layer/ADC/hal_adc.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;		None
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;		None
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  1    wreg      void 
  2095 ;; Registers used:
  2096 ;;		None
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2106 ;;Total ram usage:        0 bytes
  2107 ;; Hardware stack levels used: 1
  2108 ;; This function calls:
  2109 ;;		Nothing
  2110 ;; This function is called by:
  2111 ;;		_InterruptManager
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115                           	psect	text22
  2116   001572                     __ptext22:
  2117                           	callstack 0
  2118   001572                     _ADC_ISR:
  2119                           	callstack 27
  2120   001572                     
  2121                           ;MCAL_Layer/ADC/hal_adc.c: 297:     (PIR1bits.ADIF = 0);
  2122   001572  9C9E               	bcf	158,6,c	;volatile
  2123   001574  0012               	return		;funcret
  2124   001576                     __end_of_ADC_ISR:
  2125                           	callstack 0
  2126                           
  2127                           	psect	rparam
  2128   000000                     
  2129                           	psect	temp
  2130   000077                     btemp:
  2131                           	callstack 0
  2132   000077                     	ds	1
  2133   000000                     int$flags	set	btemp
  2134   000000                     wtemp8	set	btemp+1
  2135   000000                     ttemp5	set	btemp+1
  2136   000000                     ttemp6	set	btemp+4
  2137   000000                     ttemp7	set	btemp+8
  2138                           
  2139                           	psect	idloc
  2140                           
  2141                           ;Config register IDLOC0 @ 0x200000
  2142                           ;	unspecified, using default values
  2143   200000                     	org	2097152
  2144   200000  FF                 	db	255
  2145                           
  2146                           ;Config register IDLOC1 @ 0x200001
  2147                           ;	unspecified, using default values
  2148   200001                     	org	2097153
  2149   200001  FF                 	db	255
  2150                           
  2151                           ;Config register IDLOC2 @ 0x200002
  2152                           ;	unspecified, using default values
  2153   200002                     	org	2097154
  2154   200002  FF                 	db	255
  2155                           
  2156                           ;Config register IDLOC3 @ 0x200003
  2157                           ;	unspecified, using default values
  2158   200003                     	org	2097155
  2159   200003  FF                 	db	255
  2160                           
  2161                           ;Config register IDLOC4 @ 0x200004
  2162                           ;	unspecified, using default values
  2163   200004                     	org	2097156
  2164   200004  FF                 	db	255
  2165                           
  2166                           ;Config register IDLOC5 @ 0x200005
  2167                           ;	unspecified, using default values
  2168   200005                     	org	2097157
  2169   200005  FF                 	db	255
  2170                           
  2171                           ;Config register IDLOC6 @ 0x200006
  2172                           ;	unspecified, using default values
  2173   200006                     	org	2097158
  2174   200006  FF                 	db	255
  2175                           
  2176                           ;Config register IDLOC7 @ 0x200007
  2177                           ;	unspecified, using default values
  2178   200007                     	org	2097159
  2179   200007  FF                 	db	255
  2180                           
  2181                           	psect	config
  2182                           
  2183                           ; Padding undefined space
  2184   300000                     	org	3145728
  2185   300000  FF                 	db	255
  2186                           
  2187                           ;Config register CONFIG1H @ 0x300001
  2188                           ;	Oscillator Selection bits
  2189                           ;	OSC = HS, HS oscillator
  2190                           ;	Fail-Safe Clock Monitor Enable bit
  2191                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2192                           ;	Internal/External Oscillator Switchover bit
  2193                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2194   300001                     	org	3145729
  2195   300001  02                 	db	2
  2196                           
  2197                           ;Config register CONFIG2L @ 0x300002
  2198                           ;	Power-up Timer Enable bit
  2199                           ;	PWRT = OFF, PWRT disabled
  2200                           ;	Brown-out Reset Enable bits
  2201                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2202                           ;	Brown Out Reset Voltage bits
  2203                           ;	BORV = 1, 
  2204   300002                     	org	3145730
  2205   300002  09                 	db	9
  2206                           
  2207                           ;Config register CONFIG2H @ 0x300003
  2208                           ;	Watchdog Timer Enable bit
  2209                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2210                           ;	Watchdog Timer Postscale Select bits
  2211                           ;	WDTPS = 512, 1:512
  2212   300003                     	org	3145731
  2213   300003  12                 	db	18
  2214                           
  2215                           ; Padding undefined space
  2216   300004                     	org	3145732
  2217   300004  FF                 	db	255
  2218                           
  2219                           ;Config register CONFIG3H @ 0x300005
  2220                           ;	CCP2 MUX bit
  2221                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2222                           ;	PORTB A/D Enable bit
  2223                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2224                           ;	Low-Power Timer1 Oscillator Enable bit
  2225                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2226                           ;	MCLR Pin Enable bit
  2227                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2228   300005                     	org	3145733
  2229   300005  81                 	db	129
  2230                           
  2231                           ;Config register CONFIG4L @ 0x300006
  2232                           ;	Stack Full/Underflow Reset Enable bit
  2233                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2234                           ;	Single-Supply ICSP Enable bit
  2235                           ;	LVP = OFF, Single-Supply ICSP disabled
  2236                           ;	Extended Instruction Set Enable bit
  2237                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2238                           ;	Background Debugger Enable bit
  2239                           ;	DEBUG = 0x1, unprogrammed default
  2240   300006                     	org	3145734
  2241   300006  81                 	db	129
  2242                           
  2243                           ; Padding undefined space
  2244   300007                     	org	3145735
  2245   300007  FF                 	db	255
  2246                           
  2247                           ;Config register CONFIG5L @ 0x300008
  2248                           ;	Code Protection bit
  2249                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2250                           ;	Code Protection bit
  2251                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2252                           ;	Code Protection bit
  2253                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2254                           ;	Code Protection bit
  2255                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2256   300008                     	org	3145736
  2257   300008  0F                 	db	15
  2258                           
  2259                           ;Config register CONFIG5H @ 0x300009
  2260                           ;	Boot Block Code Protection bit
  2261                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2262                           ;	Data EEPROM Code Protection bit
  2263                           ;	CPD = OFF, Data EEPROM not code-protected
  2264   300009                     	org	3145737
  2265   300009  C0                 	db	192
  2266                           
  2267                           ;Config register CONFIG6L @ 0x30000A
  2268                           ;	Write Protection bit
  2269                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2270                           ;	Write Protection bit
  2271                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2272                           ;	Write Protection bit
  2273                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2274                           ;	Write Protection bit
  2275                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2276   30000A                     	org	3145738
  2277   30000A  0F                 	db	15
  2278                           
  2279                           ;Config register CONFIG6H @ 0x30000B
  2280                           ;	Configuration Register Write Protection bit
  2281                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2282                           ;	Boot Block Write Protection bit
  2283                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2284                           ;	Data EEPROM Write Protection bit
  2285                           ;	WRTD = OFF, Data EEPROM not write-protected
  2286   30000B                     	org	3145739
  2287   30000B  E0                 	db	224
  2288                           
  2289                           ;Config register CONFIG7L @ 0x30000C
  2290                           ;	Table Read Protection bit
  2291                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2292                           ;	Table Read Protection bit
  2293                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2294                           ;	Table Read Protection bit
  2295                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2296                           ;	Table Read Protection bit
  2297                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2298   30000C                     	org	3145740
  2299   30000C  0F                 	db	15
  2300                           
  2301                           ;Config register CONFIG7H @ 0x30000D
  2302                           ;	Boot Block Table Read Protection bit
  2303                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2304   30000D                     	org	3145741
  2305   30000D  40                 	db	64
  2306                           tosu	equ	0xFFF
  2307                           tosh	equ	0xFFE
  2308                           tosl	equ	0xFFD
  2309                           stkptr	equ	0xFFC
  2310                           pclatu	equ	0xFFB
  2311                           pclath	equ	0xFFA
  2312                           pcl	equ	0xFF9
  2313                           tblptru	equ	0xFF8
  2314                           tblptrh	equ	0xFF7
  2315                           tblptrl	equ	0xFF6
  2316                           tablat	equ	0xFF5
  2317                           prodh	equ	0xFF4
  2318                           prodl	equ	0xFF3
  2319                           indf0	equ	0xFEF
  2320                           postinc0	equ	0xFEE
  2321                           postdec0	equ	0xFED
  2322                           preinc0	equ	0xFEC
  2323                           plusw0	equ	0xFEB
  2324                           fsr0h	equ	0xFEA
  2325                           fsr0l	equ	0xFE9
  2326                           wreg	equ	0xFE8
  2327                           indf1	equ	0xFE7
  2328                           postinc1	equ	0xFE6
  2329                           postdec1	equ	0xFE5
  2330                           preinc1	equ	0xFE4
  2331                           plusw1	equ	0xFE3
  2332                           fsr1h	equ	0xFE2
  2333                           fsr1l	equ	0xFE1
  2334                           bsr	equ	0xFE0
  2335                           indf2	equ	0xFDF
  2336                           postinc2	equ	0xFDE
  2337                           postdec2	equ	0xFDD
  2338                           preinc2	equ	0xFDC
  2339                           plusw2	equ	0xFDB
  2340                           fsr2h	equ	0xFDA
  2341                           fsr2l	equ	0xFD9
  2342                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        57
    BSS         70
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      1     118
    BANK0           128      0      10
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    ADC_GetConversionResult@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_Init@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_Capture_Mode_Config@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Capture_Mode_Config@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Compare_Mode_Config@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Compare_Mode_Config@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_DeInit@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_DeInit@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Init@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Init@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Interrupt_Config@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Interrupt_Config@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Mode_Timer_Select@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Mode_Timer_Select@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Mode_Config@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Mode_Config@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Set_Duty@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Set_Duty@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Start@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Start@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Stop@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Stop@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    configure_voltage_reference@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    I2C_DefaultInterruptHandle	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Master_Mode_Clock_Configurations@i2c_obj$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Report_Receive_Overflow_InterruptHandle	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Report_Write_Collision_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Slave_Mode_Configurations@i2c_obj$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Configurations@i2c_obj$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Configurations@i2c_obj$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_INTx_Clear_Flag@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_SetInterruptHandler@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlllll[1]), LATB(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), 
		 -> LATE(BITBIGSFRllllh[1]), 

    MSSP_I2C_Init@i2c_obj$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Interrupt_Configurations@i2c_obj$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Interrupt_Configurations@i2c_obj$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Interrupt_Configurations@i2c_obj$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), 
		 -> PORTE(BITBIGSFRlllll[1]), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1182$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1182$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1893$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1893$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    S1893$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    S2414$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2530$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    S2530$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    S3288$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3453$TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3643$TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3772$TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3966$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S3966$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S3966$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3966$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S4832$buffer	PTR unsigned char  size(2) Largest target is 0

    S4832$source	PTR const unsigned char  size(2) Largest target is 0

    S764$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    select_result_format@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    Timer0_Init@_timer$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Mode_Select@_timer$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Prescaler_Config@_timer$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Register_Size_Config@_timer$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Init@_timer$TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Mode_Select@_timer$TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer2_Init@_timer$TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Init@_timer$TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Mode_Select@_timer$TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    TMR1_InterruptHandler	PTR FTN()volatile void  size(2) Largest target is 1
		 -> NULL(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRlllll[1]), TRISB(ABS[1]), TRISC(ABS[1]), TRISD(ABS[1]), 
		 -> TRISE(ABS[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptManager in COMRAM

    _InterruptManager->_RB4_ISR
    _InterruptManager->_RB5_ISR
    _InterruptManager->_RB6_ISR
    _InterruptManager->_RB7_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
              _application_intialize
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                1     1      0       0
                _ecu_layer_intialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_intialize                                  1     1      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _InterruptManager                                     0     0      0     120
                            _ADC_ISR
                           _CCP1_ISR
                           _CCP2_ISR
                      _EUSART_RX_ISR
                      _EUSART_TX_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                    _MSSP_I2C_BC_ISR
                       _MSSP_I2C_ISR
                       _MSSP_SPI_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (4) _TMR3_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TMR2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TMR0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _RB7_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _RB6_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _RB5_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _RB4_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _MSSP_SPI_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _MSSP_I2C_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _MSSP_I2C_BC_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART_TX_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART_RX_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CCP2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CCP1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_intialize
     _ecu_layer_intialize

 _InterruptManager (ROOT)
   _ADC_ISR
   _CCP1_ISR
   _CCP2_ISR
   _EUSART_RX_ISR
   _EUSART_TX_ISR
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _MSSP_I2C_BC_ISR
   _MSSP_I2C_ISR
   _MSSP_SPI_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _TMR0_ISR
   _TMR1_ISR
   _TMR2_ISR
   _TMR3_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       A       5        7.8%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      1      76       1       93.7%
BITBIGSFRhlhhlh     18      0       0      38        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRlllhh       6      0       0      46        0.0%
BITBIGSFRhlhhll      5      0       0      39        0.0%
BITBIGSFRllhllh      4      0       0      43        0.0%
BITBIGSFRllllh       4      0       0      47        0.0%
BITBIGSFRllhllh      4      0       0      44        0.0%
BITBIGSFRlllll       4      0       0      48        0.0%
BITBIGSFRllhllh      1      0       0      42        0.0%
BITBIGSFRllhlh       1      0       0      41        0.0%
BITBIGSFRllhh        1      0       0      40        0.0%
BITBIGSFRllhlll      1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      80      12        0.0%
DATA                 0      0      80       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Aug 13 01:54:30 2024

                               ??_InterruptManager 0077                                        _SSPSTATbits 0FC7  
                                              l351 1576                                                _PR2 0FCB  
                        _RB5_InterruptHandler_HIGH 0027                                    __end_of_ADC_ISR 1576  
                              led_initialize@F3026 0046                              relay_initialize@F3020 0042  
                                              wreg 0FE8                                    __end_of_RB4_ISR 150A  
                                  __end_of_RB5_ISR 14F0                                    __end_of_RB6_ISR 14D6  
                                  __end_of_RB7_ISR 14BC                                               l1711 1550  
                                             l1705 150E                                               l1706 150E  
                                             l2470 1576                                               l5014 150A  
                                             l5016 150A                                               l2854 154C  
                                             l2856 154C                                               STR_1 1011  
                                             _LATA 0F89                                               _LATB 0F8A  
                                             _LATC 0F8B                                               _LATD 0F8C  
                                             _LATE 0F8D                                               _TMR2 0FCC  
                          ??_application_intialize 0077                           _RB4_InterruptHandler_LOW 0029  
                                             _main 150A                                   __end_of_CCP1_ISR 1572  
                                 __end_of_CCP2_ISR 156E                           _RB7_InterruptHandler_LOW 001D  
                                             fsr1l 0FE1                                               btemp 0077  
                                             start 000E                                       ___param_bank 0000  
                                 __end_of_INT0_ISR 1566                                   __end_of_INT1_ISR 1562  
                                 __end_of_INT2_ISR 155E                                      _EUSART_RX_ISR 157A  
                                    _EUSART_TX_ISR 1566                                              ?_main 0076  
                                            _EEADR 0FA9                                              i2l477 1574  
                                            i2l573 1570                                              i2l578 156C  
                                            i2l923 1554                                              i2l927 1558  
                                            i2l991 1564                                              i2l996 1560  
                                            _RCREG 0FAE                                relay_turn_off@F3030 0040  
                                            _TMR0H 0FD7                                              _TMR1H 0FCF  
                                            _TMR0L 0FD6                                              _TMR1L 0FCE  
                                            _TMR3H 0FB3                                              _TMR3L 0FB2  
                                            _SPBRG 0FAF                                              _PORTA 0F80  
                                            _PORTB 0F81                                              _PORTC 0F82  
                                            _PORTD 0F83                                              _PORTE 0F84  
                                            _TRISA 0F92                                              _TRISB 0F93  
                                            _TRISC 0F94                                              _TRISD 0F95  
                                            _TRISE 0F96                                              _TXREG 0FAD  
                                 __end_of_TMR0_ISR 153A                                   __end_of_TMR1_ISR 152E  
                                 __end_of_TMR2_ISR 154C                                   __end_of_TMR3_ISR 1522  
                                            _lcd_1 0065                                              _lcd_2 0080  
                                            tablat 0FF5                                              ttemp5 0078  
                                            ttemp6 007B                                              ttemp7 007F  
                                            status 0FD8                                              wtemp8 0078  
                                  __initialization 141C                                       __end_of_main 1516  
                                        ??_ADC_ISR 0076                                     ?_EUSART_RX_ISR 0076  
                                   ?_EUSART_TX_ISR 0076                                      _lat_registers 0051  
                                           ??_main 0077                                      __activetblptr 0003  
                            _TMR3_InterruptHandler 0011                                   led_turn_on@F3031 0045  
                                        ??_RB4_ISR 0076                                          ??_RB5_ISR 0076  
                                        ??_RB6_ISR 0076                                          ??_RB7_ISR 0076  
                       _EUSART_OverrunErrorHandler 0007                                             _ADRESH 0FC4  
                                           _EEADRH 0FAA                                             _ADRESL 0FC3  
                                           _EEDATA 0FA8                                             _CCPR1L 0FBE  
                                           _CCPR2L 0FBB                                             _EECON2 0FA7  
                                           i2l1001 155C                                             i2l1012 1508  
                                           i2l1023 14EE                                             i2l1034 14D4  
                                           i2l1220 1038                                             i2l1045 14BA  
                                           i2l1230 1144                                             i2l1222 1058  
                                           i2l1240 1298                                             i2l1232 1188  
                                           i2l1224 1078                                             i2l1250 1338  
                                           i2l1242 12B8                                             i2l1234 11CC  
                                           i2l1226 10BC                                             i2l1260 13D8  
                                           i2l1252 1358                                             i2l1244 12D8  
                                           i2l1236 1210                                             i2l1228 1100  
                                           i2l1325 1578                                             i2l1262 13F8  
                                           i2l1254 1378                                             i2l1246 12F8  
                                           i2l1238 1254                                             i2l1511 154A  
                                           i2l1256 1398                                             i2l1248 1318  
                                           i2l1265 1418                                             i2l1258 13B8  
                                           i2l1460 152C                                             i2l1391 1538  
                                           i2l1555 1520                                             i2l2710 1508  
                                           i2l2702 14F2                                             i2l2704 14F4  
                                           i2l2800 152E                                             i2l4400 11E8  
                                           i2l2730 14BE                                             i2l2802 1530  
                                           i2l2810 1524                                             i2l4410 122C  
                                           i2l4402 11F6                                             i2l2652 156E  
                                           i2l2724 14EE                                             i2l2716 14D8  
                                           i2l2732 14C0                                             i2l2804 1534  
                                           i2l2812 1528                                             i2l2820 1516  
                                           i2l4420 1270                                             i2l4412 123A  
                                           i2l4404 1206                                             i2l4340 1046  
                                           i2l2718 14DA                                             i2l2822 1518  
                                           i2l4430 12B4                                             i2l4422 127E  
                                           i2l4414 124A                                             i2l4406 120A  
                                           i2l4350 1094                                             i2l4342 1054  
                                           i2l4334 1018                                             i2l1687 1568  
                                           i2l2648 1572                                             i2l1696 157A  
                                           i2l2680 1556                                             i2l2752 14BA  
                                           i2l2744 14A4                                             i2l2808 1522  
                                           i2l2816 1544                                             i2l2824 151C  
                                           i2l4440 1306                                             i2l4432 12C6  
                                           i2l4424 128E                                             i2l4416 124E  
                                           i2l4408 121E                                             i2l4360 10D8  
                                           i2l4352 10A2                                             i2l4344 1066  
                                           i2l4336 1026                                             i2l2658 156A  
                                           i2l2834 157A                                             i2l2690 155E  
                                           i2l2738 14D4                                             i2l2746 14A6  
                                           i2l4450 1354                                             i2l4442 1314  
                                           i2l4434 12D4                                             i2l4426 1292  
                                           i2l4418 1262                                             i2l4370 111C  
                                           i2l4362 10E6                                             i2l4354 10B2  
                                           i2l4346 1074                                             i2l4338 1034  
                                           i2l2828 1566                                             i2l2684 1562  
                                           i2l2676 1552                                             i2l4460 13A6  
                                           i2l4452 1366                                             i2l4444 1326  
                                           i2l4436 12E6                                             i2l4428 12A6  
                                           i2l4380 1160                                             i2l4372 112A  
                                           i2l4364 10F6                                             i2l4356 10B6  
                                           i2l4348 1086                                             i2l4470 13F4  
                                           i2l4462 13B4                                             i2l4454 1374  
                                           i2l4446 1334                                             i2l4438 12F4  
                                           i2l4390 11A4                                             i2l4382 116E  
                                           i2l4374 113A                                             i2l4366 10FA  
                                           i2l4358 10CA                                             i2l2696 155A  
                                           i2l4472 1406                                             i2l4464 13C6  
                                           i2l4456 1386                                             i2l4448 1346  
                                           i2l4392 11B2                                             i2l4384 117E  
                                           i2l4376 113E                                             i2l4368 110E  
                                           i2l4474 1414                                             i2l4466 13D4  
                                           i2l4458 1394                                             i2l4394 11C2  
                                           i2l4386 1182                                             i2l4378 1152  
                                           i2l4468 13E6                                             i2l4396 11C6  
                                           i2l4388 1196                                             i2l4398 11DA  
                                           _SPBRGH 0FB0                                             _SSPADD 0FC8  
                                           _SSPBUF 0FC9                                             clear_0 1462  
                                           isa$std 0001        _I2C_Report_Receive_Overflow_InterruptHandle 0033  
                                        ?_CCP1_ISR 0076                                       __pdataCOMRAM 0047  
                                        ?_CCP2_ISR 0076                                       __mediumconst 0000  
                                           tblptrh 0FF7                                             tblptrl 0FF6  
                                           tblptru 0FF8                                         __accesstop 0080  
                          __end_of__initialization 1468                                          ?_INT0_ISR 0076  
                                        ?_INT1_ISR 0076                                          ?_INT2_ISR 0076  
                                    ___rparam_used 0001                                  RB5_ISR@RB5_Source 0076  
                                   __pcstackCOMRAM 0076                         _I2C_DefaultInterruptHandle 0035  
                                     __pidataBANK0 153A                                          ?_TMR0_ISR 0076  
                                  ??_EUSART_RX_ISR 0076                                          ?_TMR1_ISR 0076  
                                        ?_TMR2_ISR 0076                                          ?_TMR3_ISR 0076  
                                  ??_EUSART_TX_ISR 0076                                         ??_CCP1_ISR 0076  
                                       ??_CCP2_ISR 0076                              _INT0_InterruptHandler 0031  
                                       ??_INT0_ISR 0076                                         ??_INT1_ISR 0076  
                                       ??_INT2_ISR 0076                      __end_of_application_intialize 1552  
                                       ??_TMR0_ISR 0076                                         ??_TMR1_ISR 0076  
                                       ??_TMR2_ISR 0076                                         ??_TMR3_ISR 0076  
                                led_turn_off@F3036 0044                                            _ADC_ISR 1572  
                                RB7_ISR@RB7_Source 0076                                            _RB4_ISR 14F0  
                                          _RB5_ISR 14D6                                            _RB6_ISR 14BC  
                                          _RB7_ISR 14A2                          _RB6_InterruptHandler_HIGH 0023  
                                    ?_MSSP_I2C_ISR 0076                               led_turn_toggle@F3041 0043  
                                          i2u32_40 1504                                            i2u32_41 1500  
                                          i2u33_40 14EA                                            i2u33_41 14E6  
                                          i2u34_40 14D0                                            i2u34_41 14CC  
                                          i2u35_40 14B6                                            i2u35_41 14B2  
                                       _btn_values 1001                                     _tris_registers 005B  
                         _RB6_InterruptHandler_LOW 0021                                      ?_MSSP_SPI_ISR 0076  
                                ??_MSSP_I2C_BC_ISR 0076                               _ADC_InterruptHandler 003D  
                                          __Hparam 0000                                            __Lparam 0000  
                              _ecu_layer_intialize 1576                                       __psmallconst 1000  
                                          __pcinit 141C                                            __ramtop 1000  
                                          __ptext0 150A                                            __ptext1 154C  
                                          __ptext2 1576                                            __ptext4 1516  
                                          __ptext5 1544                                            __ptext6 1522  
                                          __ptext7 152E                                            __ptext8 14A2  
                                          __ptext9 14BC                                          _T0CONbits 0FD5  
                                        _T1CONbits 0FCD                                     ??_MSSP_I2C_ISR 0076  
                                        _T2CONbits 0FCA                                          _T3CONbits 0FB1  
                             ?_ecu_layer_intialize 0076                                     __pintcode_body 1016  
                             end_of_initialization 1468                                            int_func 1016  
                                   ??_MSSP_SPI_ISR 0076                                          _RCSTAbits 0FAB  
                                          postdec1 0FE5                                            postinc0 0FEE  
                            _INT1_InterruptHandler 002F                                          _PORTBbits 0F81  
                                 _InterruptManager 0008                              ??_ecu_layer_intialize 0077  
                                        _TRISCbits 0F94                                        _CCP1CONbits 0FBD  
                                      _CCP2CONbits 0FBA                                          _TXSTAbits 0FAC  
                               relay_turn_on@F3025 0041                      convert_uint16_to_string@F3176 0001  
                                      _BAUDCONbits 0FB8                                      __pidataCOMRAM 1472  
                                   _timer0_preload 0019                                     _timer1_preload 0015  
                                   _timer2_preload 003F                                start_initialization 141C  
                                   _timer3_preload 000F  MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3070 0070  
MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3072 006F   MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3081 006C  
 MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3083 006B  MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3068 0071  
 MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3077 006E   MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3079 006D  
                        _EUSART_RxInterruptHandler 000B                               __end_of_MSSP_I2C_ISR 1556  
                       _EUSART_FramingErrorHandler 0009                                        __pdataBANK0 0080  
                                         ?_ADC_ISR 0076                              __end_of_EUSART_RX_ISR 157C  
                            __end_of_EUSART_TX_ISR 156A                               __end_of_MSSP_SPI_ISR 157A  
                                         ?_RB4_ISR 0076                                           ?_RB5_ISR 0076  
                                         ?_RB6_ISR 0076                                           ?_RB7_ISR 0076  
                                      __pbssCOMRAM 0001        _I2C_Report_Write_Collision_InterruptHandler 0037  
                                  _MSSP_I2C_BC_ISR 1556                              _INT2_InterruptHandler 002D  
                            _TMR0_InterruptHandler 001B                              _application_intialize 154C  
                                        __pintcode 0008                                        __smallconst 1000  
                        _RB4_InterruptHandler_HIGH 002B                                           _CCP1_ISR 156E  
                                         _CCP2_ISR 156A                          _RB7_InterruptHandler_HIGH 001F  
                         _RB5_InterruptHandler_LOW 0025                                           _INT0_ISR 1562  
                                         _INT1_ISR 155E                                           _INT2_ISR 155A  
                                         _RB4_Flag 0075                                           _RB5_Flag 0074  
                                         _RB6_Flag 0073                                           _RB7_Flag 0072  
                                RB4_ISR@RB4_Source 0076                           __end_of_InterruptManager 141C  
                                         _PIE1bits 0F9D                                           _PIE2bits 0FA0  
                                         i2u220_40 1094                                           i2u220_41 1090  
                                         i2u221_40 10A2                                           i2u213_40 1026  
                                         i2u221_41 109E                                           i2u213_41 1022  
                                         i2u230_40 113A                                           i2u222_40 10B2  
                                         i2u214_40 1034                                           i2u230_41 1136  
                                         i2u222_41 10AE                                           i2u214_41 1030  
                                         i2u231_40 1152                                           i2u223_40 10CA  
                                         i2u215_40 1046                                           i2u231_41 114E  
                                         i2u223_41 10C6                                           i2u215_41 1042  
                                         i2u240_40 11E8                                           i2u232_40 1160  
                                         i2u224_40 10D8                                           i2u216_40 1054  
                                         i2u240_41 11E4                                           i2u232_41 115C  
                                         i2u224_41 10D4                                           i2u216_41 1050  
                                         i2u241_40 11F6                                           i2u233_40 116E  
                                         i2u225_40 10E6                                           i2u217_40 1066  
                                         i2u241_41 11F2                                           i2u233_41 116A  
                                         i2u225_41 10E2                                           i2u217_41 1062  
                                         i2u250_40 128E                                           i2u242_40 1206  
                                         i2u234_40 117E                                           i2u226_40 10F6  
                                         i2u218_40 1074                                           i2u250_41 128A  
                                         i2u242_41 1202                                           i2u234_41 117A  
                                         i2u226_41 10F2                                           i2u218_41 1070  
                                         i2u251_40 12A6                                           i2u243_40 121E  
                                         i2u235_40 1196                                           i2u227_40 110E  
                                         i2u219_40 1086                                           i2u251_41 12A2  
                                         i2u243_41 121A                                           i2u235_41 1192  
                                         i2u227_41 110A                                           i2u219_41 1082  
                                         i2u260_40 1334                                           i2u252_40 12B4  
                                         i2u244_40 122C                                           i2u236_40 11A4  
                                         i2u228_40 111C                                           i2u260_41 1330  
                                         i2u252_41 12B0                                           i2u244_41 1228  
                                         i2u236_41 11A0                                           i2u228_41 1118  
                                         i2u261_40 1346                                           i2u253_40 12C6  
                                         i2u245_40 123A                                           i2u237_40 11B2  
                                         i2u229_40 112A                                           i2u261_41 1342  
                                         i2u253_41 12C2                                           i2u245_41 1236  
                                         i2u237_41 11AE                                           i2u229_41 1126  
                                         i2u270_40 13D4                                           i2u262_40 1354  
                                         i2u254_40 12D4                                           i2u246_40 124A  
                                         i2u238_40 11C2                                           i2u270_41 13D0  
                                         i2u262_41 1350                                           i2u254_41 12D0  
                                         i2u246_41 1246                                           i2u238_41 11BE  
                                         i2u271_40 13E6                                           i2u263_40 1366  
                                         i2u255_40 12E6                                           i2u247_40 1262  
                                         i2u239_40 11DA                                           i2u271_41 13E2  
                                         i2u263_41 1362                                           i2u255_41 12E2  
                                         i2u247_41 125E                                           i2u239_41 11D6  
                                         i2u272_40 13F4                                           i2u264_40 1374  
                                         i2u256_40 12F4                                           i2u248_40 1270  
                                         i2u272_41 13F0                                           i2u264_41 1370  
                                         i2u256_41 12F0                                           i2u248_41 126C  
                                         i2u273_40 1406                                           i2u265_40 1386  
                                         i2u257_40 1306                                           i2u249_40 127E  
                                         i2u273_41 1402                                           i2u265_41 1382  
                                         i2u257_41 1302                                           i2u249_41 127A  
                                         _PIR1bits 0F9E                                           i2u274_40 1414  
                                         i2u266_40 1394                                           i2u258_40 1314  
                                         i2u274_41 1410                                           i2u266_41 1390  
                                         i2u258_41 1310                                           i2u267_40 13A6  
                                         i2u259_40 1326                                           i2u267_41 13A2  
                                         i2u259_41 1322                                           _PIR2bits 0FA1  
                                         i2u268_40 13B4                                           i2u268_41 13B0  
                                         i2u269_40 13C6                                           i2u269_41 13C2  
                                         _TMR0_ISR 152E                                           _TMR1_ISR 1522  
                                         _TMR2_ISR 1544                                           _TMR3_ISR 1516  
                                       _ADCON0bits 0FC2                                         _ADCON1bits 0FC1  
                                       _ADCON2bits 0FC0                            __end_of_MSSP_I2C_BC_ISR 155A  
                                      _INTCON2bits 0FF1                                        _INTCON3bits 0FF0  
                                        copy_data0 1430                                          copy_data1 1450  
                                       _EECON1bits 0FA6                             ?_application_intialize 0076  
                                         __Hrparam 0000                                           __Lrparam 0000  
                                RB6_ISR@RB6_Source 0076                              _CCP1_InterruptHandler 003B  
                      __end_of_ecu_layer_intialize 1578                                 __end_of_btn_values 1011  
                            _TMR1_InterruptHandler 0017                                       _MSSP_I2C_ISR 1552  
                                         __ptext10 14D6                                           __ptext11 14F0  
                                         __ptext20 156A                                           __ptext12 1578  
                                         __ptext21 156E                                           __ptext13 1552  
                                         __ptext22 1572                                           __ptext14 1556  
                                         __ptext15 155A                                           __ptext16 155E  
                                         __ptext17 1562                                           __ptext18 1566  
                                         __ptext19 157A                                       _MSSP_SPI_ISR 1578  
                                         isa$xinst 0000                                           int$flags 0077  
                                 ?_MSSP_I2C_BC_ISR 0076                                         _INTCONbits 0FF2  
                                         intlevel2 0000                          _EUSART_TxInterruptHandler 000D  
                                   _port_registers 0047                                        _SSPCON1bits 0FC6  
                                      _SSPCON2bits 0FC5                              _CCP2_InterruptHandler 0039  
                            _TMR2_InterruptHandler 0013                                  ?_InterruptManager 0076  
