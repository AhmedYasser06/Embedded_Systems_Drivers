

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Oct 08 22:54:31 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    40   000000                     
    41                           ; Version 2.20
    42                           ; Generated 12/02/2020 GMT
    43                           ; 
    44                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F4620 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75   000000                     
    76                           	psect	idataCOMRAM
    77   001452                     __pidataCOMRAM:
    78                           	callstack 0
    79                           
    80                           ;initializer for _port_registers
    81   001452  80                 	db	128
    82   001453  0F                 	db	15
    83   001454  81                 	db	129
    84   001455  0F                 	db	15
    85   001456  82                 	db	130
    86   001457  0F                 	db	15
    87   001458  83                 	db	131
    88   001459  0F                 	db	15
    89   00145A  84                 	db	132
    90   00145B  0F                 	db	15
    91                           
    92                           ;initializer for _lat_registers
    93   00145C  89                 	db	137
    94   00145D  0F                 	db	15
    95   00145E  8A                 	db	138
    96   00145F  0F                 	db	15
    97   001460  8B                 	db	139
    98   001461  0F                 	db	15
    99   001462  8C                 	db	140
   100   001463  0F                 	db	15
   101   001464  8D                 	db	141
   102   001465  0F                 	db	15
   103                           
   104                           ;initializer for _tris_registers
   105   001466  92                 	db	146
   106   001467  0F                 	db	15
   107   001468  93                 	db	147
   108   001469  0F                 	db	15
   109   00146A  94                 	db	148
   110   00146B  0F                 	db	15
   111   00146C  95                 	db	149
   112   00146D  0F                 	db	15
   113   00146E  96                 	db	150
   114   00146F  0F                 	db	15
   115                           
   116                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3093
   117   001470  68                 	db	104
   118                           
   119                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3091
   120   001471  5A                 	db	90
   121                           
   122                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3089
   123   001472  62                 	db	98
   124                           
   125                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3087
   126   001473  2A                 	db	42
   127                           
   128                           ;initializer for MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3082
   129   001474  1A                 	db	26
   130                           
   131                           ;initializer for MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3080
   132   001475  62                 	db	98
   133                           
   134                           ;initializer for MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3078
   135   001476  2A                 	db	42
   136                           
   137                           ;initializer for _RB7_Flag
   138   001477  01                 	db	1
   139                           
   140                           ;initializer for _RB6_Flag
   141   001478  01                 	db	1
   142                           
   143                           ;initializer for _RB5_Flag
   144   001479  01                 	db	1
   145                           
   146                           ;initializer for _RB4_Flag
   147   00147A  01                 	db	1
   148                           
   149                           	psect	smallconst
   150   001000                     __psmallconst:
   151                           	callstack 0
   152   001000  00                 	db	0
   153   001001                     _btn_values:
   154                           	callstack 0
   155   001001  37                 	db	55
   156   001002  38                 	db	56
   157   001003  39                 	db	57
   158   001004  2F                 	db	47
   159   001005  34                 	db	52
   160   001006  35                 	db	53
   161   001007  36                 	db	54
   162   001008  2A                 	db	42
   163   001009  31                 	db	49
   164   00100A  32                 	db	50
   165   00100B  33                 	db	51
   166   00100C  2D                 	db	45
   167   00100D  23                 	db	35
   168   00100E  30                 	db	48
   169   00100F  3D                 	db	61
   170   001010  2B                 	db	43
   171   001011                     __end_of_btn_values:
   172                           	callstack 0
   173   000000                     _SPBRGH	set	4016
   174   000000                     _SPBRG	set	4015
   175   000000                     _TXREG	set	4013
   176   000000                     _TXSTAbits	set	4012
   177   000000                     _RCREG	set	4014
   178   000000                     _RCSTAbits	set	4011
   179   000000                     _TMR3L	set	4018
   180   000000                     _TMR3H	set	4019
   181   000000                     _TMR2	set	4044
   182   000000                     _T2CONbits	set	4042
   183   000000                     _TMR1L	set	4046
   184   000000                     _TMR1H	set	4047
   185   000000                     _T1CONbits	set	4045
   186   000000                     _TMR0L	set	4054
   187   000000                     _TMR0H	set	4055
   188   000000                     _T0CONbits	set	4053
   189   000000                     _INTCON2bits	set	4081
   190   000000                     _INTCON3bits	set	4080
   191   000000                     _SSPBUF	set	4041
   192   000000                     _SSPSTATbits	set	4039
   193   000000                     _SSPADD	set	4040
   194   000000                     _SSPCON2bits	set	4037
   195   000000                     _SSPCON1bits	set	4038
   196   000000                     _EECON2	set	4007
   197   000000                     _ADCON1bits	set	4033
   198   000000                     _ADRESL	set	4035
   199   000000                     _ADRESH	set	4036
   200   000000                     _INTCONbits	set	4082
   201   000000                     _TRISD	set	3989
   202   000000                     _TRISC	set	3988
   203   000000                     _PR2	set	4043
   204   000000                     _TRISB	set	3987
   205   000000                     _TRISE	set	3990
   206   000000                     _PORTBbits	set	3969
   207   000000                     _TRISCbits	set	3988
   208   000000                     _PIE1bits	set	3997
   209   000000                     _ADCON2bits	set	4032
   210   000000                     _ADCON0bits	set	4034
   211   000000                     _PORTE	set	3972
   212   000000                     _PORTD	set	3971
   213   000000                     _PORTC	set	3970
   214   000000                     _PORTB	set	3969
   215   000000                     _PORTA	set	3968
   216   000000                     _LATA	set	3977
   217   000000                     _TRISA	set	3986
   218   000000                     _PIE2bits	set	4000
   219   000000                     _CCP2CONbits	set	4026
   220   000000                     _CCP1CONbits	set	4029
   221   000000                     _PIR1bits	set	3998
   222   000000                     _CCPR1L	set	4030
   223   000000                     _CCPR2L	set	4027
   224   000000                     _EECON1bits	set	4006
   225   000000                     _EEDATA	set	4008
   226   000000                     _EEADR	set	4009
   227   000000                     _EEADRH	set	4010
   228   000000                     _T3CONbits	set	4017
   229   000000                     _PIR2bits	set	4001
   230   000000                     _LATE	set	3981
   231   000000                     _LATD	set	3980
   232   000000                     _LATC	set	3979
   233   000000                     _LATB	set	3978
   234   000000                     _BAUDCONbits	set	4024
   235   001011                     STR_1:
   236   001011  25                 	db	37
   237   001012  69                 	db	105	;'i'
   238   001013  00                 	db	0
   239   001014  00                 	db	0	; dummy byte at the end
   240   000000                     
   241                           ; #config settings
   242                           
   243                           	psect	cinit
   244   00141C                     __pcinit:
   245                           	callstack 0
   246   00141C                     start_initialization:
   247                           	callstack 0
   248   00141C                     __initialization:
   249                           	callstack 0
   250                           
   251                           ; Initialize objects allocated to COMRAM (41 bytes)
   252                           ; load TBLPTR registers with __pidataCOMRAM
   253   00141C  0E52               	movlw	low __pidataCOMRAM
   254   00141E  6EF6               	movwf	tblptrl,c
   255   001420  0E14               	movlw	high __pidataCOMRAM
   256   001422  6EF7               	movwf	tblptrh,c
   257   001424  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   258   001426  6EF8               	movwf	tblptru,c
   259   001428  EE00  F049         	lfsr	0,__pdataCOMRAM
   260   00142C  EE10 F029          	lfsr	1,41
   261   001430                     copy_data0:
   262   001430  0009               	tblrd		*+
   263   001432  CFF5 FFEE          	movff	tablat,postinc0
   264   001436  50E5               	movf	postdec1,w,c
   265   001438  50E1               	movf	fsr1l,w,c
   266   00143A  E1FA               	bnz	copy_data0
   267                           
   268                           ; Clear objects allocated to COMRAM (72 bytes)
   269   00143C  EE00  F001         	lfsr	0,__pbssCOMRAM
   270   001440  0E48               	movlw	72
   271   001442                     clear_0:
   272   001442  6AEE               	clrf	postinc0,c
   273   001444  06E8               	decf	wreg,f,c
   274   001446  E1FD               	bnz	clear_0
   275   001448                     end_of_initialization:
   276                           	callstack 0
   277   001448                     __end_of__initialization:
   278                           	callstack 0
   279   001448  9073               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   280   00144A  9273               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   281   00144C  0100               	movlb	0
   282   00144E  EF72  F00A         	goto	_main	;jump to C main() function
   283                           
   284                           	psect	bssCOMRAM
   285   000001                     __pbssCOMRAM:
   286                           	callstack 0
   287   000001                     	ds	6
   288   000007                     _EUSART_OverrunErrorHandler:
   289                           	callstack 0
   290   000007                     	ds	2
   291   000009                     _EUSART_FramingErrorHandler:
   292                           	callstack 0
   293   000009                     	ds	2
   294   00000B                     _EUSART_RxInterruptHandler:
   295                           	callstack 0
   296   00000B                     	ds	2
   297   00000D                     _EUSART_TxInterruptHandler:
   298                           	callstack 0
   299   00000D                     	ds	2
   300   00000F                     _timer3_preload:
   301                           	callstack 0
   302   00000F                     	ds	2
   303   000011                     _TMR3_InterruptHandler:
   304                           	callstack 0
   305   000011                     	ds	2
   306   000013                     _TMR2_InterruptHandler:
   307                           	callstack 0
   308   000013                     	ds	2
   309   000015                     _timer1_preload:
   310                           	callstack 0
   311   000015                     	ds	2
   312   000017                     _TMR1_InterruptHandler:
   313                           	callstack 0
   314   000017                     	ds	2
   315   000019                     _timer0_preload:
   316                           	callstack 0
   317   000019                     	ds	2
   318   00001B                     _TMR0_InterruptHandler:
   319                           	callstack 0
   320   00001B                     	ds	2
   321   00001D                     _SPI_InterruptHandler:
   322                           	callstack 0
   323   00001D                     	ds	2
   324   00001F                     _RB7_InterruptHandler_LOW:
   325                           	callstack 0
   326   00001F                     	ds	2
   327   000021                     _RB7_InterruptHandler_HIGH:
   328                           	callstack 0
   329   000021                     	ds	2
   330   000023                     _RB6_InterruptHandler_LOW:
   331                           	callstack 0
   332   000023                     	ds	2
   333   000025                     _RB6_InterruptHandler_HIGH:
   334                           	callstack 0
   335   000025                     	ds	2
   336   000027                     _RB5_InterruptHandler_LOW:
   337                           	callstack 0
   338   000027                     	ds	2
   339   000029                     _RB5_InterruptHandler_HIGH:
   340                           	callstack 0
   341   000029                     	ds	2
   342   00002B                     _RB4_InterruptHandler_LOW:
   343                           	callstack 0
   344   00002B                     	ds	2
   345   00002D                     _RB4_InterruptHandler_HIGH:
   346                           	callstack 0
   347   00002D                     	ds	2
   348   00002F                     _INT2_InterruptHandler:
   349                           	callstack 0
   350   00002F                     	ds	2
   351   000031                     _INT1_InterruptHandler:
   352                           	callstack 0
   353   000031                     	ds	2
   354   000033                     _INT0_InterruptHandler:
   355                           	callstack 0
   356   000033                     	ds	2
   357   000035                     _I2C_Report_Receive_Overflow_InterruptHandle:
   358                           	callstack 0
   359   000035                     	ds	2
   360   000037                     _I2C_DefaultInterruptHandle:
   361                           	callstack 0
   362   000037                     	ds	2
   363   000039                     _I2C_Report_Write_Collision_InterruptHandler:
   364                           	callstack 0
   365   000039                     	ds	2
   366   00003B                     _CCP2_InterruptHandler:
   367                           	callstack 0
   368   00003B                     	ds	2
   369   00003D                     _CCP1_InterruptHandler:
   370                           	callstack 0
   371   00003D                     	ds	2
   372   00003F                     _ADC_InterruptHandler:
   373                           	callstack 0
   374   00003F                     	ds	2
   375   000041                     _timer2_preload:
   376                           	callstack 0
   377   000041                     	ds	1
   378   000042                     relay_turn_off@F3030:
   379                           	callstack 0
   380   000042                     	ds	1
   381   000043                     relay_turn_on@F3025:
   382                           	callstack 0
   383   000043                     	ds	1
   384   000044                     relay_initialize@F3020:
   385                           	callstack 0
   386   000044                     	ds	1
   387   000045                     led_turn_toggle@F3041:
   388                           	callstack 0
   389   000045                     	ds	1
   390   000046                     led_turn_off@F3036:
   391                           	callstack 0
   392   000046                     	ds	1
   393   000047                     led_turn_on@F3031:
   394                           	callstack 0
   395   000047                     	ds	1
   396   000048                     led_initialize@F3026:
   397                           	callstack 0
   398   000048                     	ds	1
   399                           
   400                           	psect	dataCOMRAM
   401   000049                     __pdataCOMRAM:
   402                           	callstack 0
   403   000049                     _port_registers:
   404                           	callstack 0
   405   000049                     	ds	10
   406   000053                     _lat_registers:
   407                           	callstack 0
   408   000053                     	ds	10
   409   00005D                     _tris_registers:
   410                           	callstack 0
   411   00005D                     	ds	10
   412   000067                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3093:
   413                           	callstack 0
   414   000067                     	ds	1
   415   000068                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3091:
   416                           	callstack 0
   417   000068                     	ds	1
   418   000069                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3089:
   419                           	callstack 0
   420   000069                     	ds	1
   421   00006A                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3087:
   422                           	callstack 0
   423   00006A                     	ds	1
   424   00006B                     MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3082:
   425                           	callstack 0
   426   00006B                     	ds	1
   427   00006C                     MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3080:
   428                           	callstack 0
   429   00006C                     	ds	1
   430   00006D                     MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3078:
   431                           	callstack 0
   432   00006D                     	ds	1
   433   00006E                     _RB7_Flag:
   434                           	callstack 0
   435   00006E                     	ds	1
   436   00006F                     _RB6_Flag:
   437                           	callstack 0
   438   00006F                     	ds	1
   439   000070                     _RB5_Flag:
   440                           	callstack 0
   441   000070                     	ds	1
   442   000071                     _RB4_Flag:
   443                           	callstack 0
   444   000071                     	ds	1
   445                           
   446                           	psect	cstackCOMRAM
   447   000072                     __pcstackCOMRAM:
   448                           	callstack 0
   449   000072                     RB4_ISR@RB4_Source:
   450                           	callstack 0
   451   000072                     RB5_ISR@RB5_Source:
   452                           	callstack 0
   453   000072                     RB6_ISR@RB6_Source:
   454                           	callstack 0
   455   000072                     RB7_ISR@RB7_Source:
   456                           	callstack 0
   457                           
   458                           ; 1 bytes @ 0x0
   459   000072                     	ds	1
   460   000073                     
   461                           ; 1 bytes @ 0x1
   462 ;;
   463 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   464 ;;
   465 ;; *************** function _main *****************
   466 ;; Defined at:
   467 ;;		line 9 in file "application.c"
   468 ;; Parameters:    Size  Location     Type
   469 ;;		None
   470 ;; Auto vars:     Size  Location     Type
   471 ;;  ret             1    0        unsigned char 
   472 ;; Return value:  Size  Location     Type
   473 ;;                  2  1707[None  ] int 
   474 ;; Registers used:
   475 ;;		wreg, status,2, cstack
   476 ;; Tracked objects:
   477 ;;		On entry : 0/0
   478 ;;		On exit  : 0/0
   479 ;;		Unchanged: 0/0
   480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   485 ;;Total ram usage:        0 bytes
   486 ;; Hardware stack levels required when called: 4
   487 ;; This function calls:
   488 ;;		_application_intialize
   489 ;; This function is called by:
   490 ;;		Startup code after reset
   491 ;; This function uses a non-reentrant model
   492 ;;
   493                           
   494                           	psect	text0
   495   0014E4                     __ptext0:
   496                           	callstack 0
   497   0014E4                     _main:
   498                           	callstack 27
   499   0014E4                     
   500                           ;application.c: 12:     application_intialize();
   501   0014E4  EC8E  F00A         	call	_application_intialize	;wreg free
   502   0014E8                     l1708:
   503   0014E8  EF74  F00A         	goto	l1708
   504   0014EC  EF07  F000         	goto	start
   505   0014F0                     __end_of_main:
   506                           	callstack 0
   507                           
   508 ;; *************** function _application_intialize *****************
   509 ;; Defined at:
   510 ;;		line 19 in file "application.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;		None
   513 ;; Auto vars:     Size  Location     Type
   514 ;;  ret             1    0        unsigned char 
   515 ;; Return value:  Size  Location     Type
   516 ;;                  1    wreg      void 
   517 ;; Registers used:
   518 ;;		wreg, status,2, cstack
   519 ;; Tracked objects:
   520 ;;		On entry : 0/0
   521 ;;		On exit  : 0/0
   522 ;;		Unchanged: 0/0
   523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   528 ;;Total ram usage:        0 bytes
   529 ;; Hardware stack levels used: 1
   530 ;; Hardware stack levels required when called: 3
   531 ;; This function calls:
   532 ;;		_ecu_layer_intialize
   533 ;; This function is called by:
   534 ;;		_main
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538                           	psect	text1
   539   00151C                     __ptext1:
   540                           	callstack 0
   541   00151C                     _application_intialize:
   542                           	callstack 27
   543   00151C                     
   544                           ;application.c: 21:     ecu_layer_intialize();
   545   00151C  ECA5  F00A         	call	_ecu_layer_intialize	;wreg free
   546   001520  0012               	return		;funcret
   547   001522                     __end_of_application_intialize:
   548                           	callstack 0
   549                           
   550 ;; *************** function _ecu_layer_intialize *****************
   551 ;; Defined at:
   552 ;;		line 11 in file "ECU_Layer/ecu_layer_init.c"
   553 ;; Parameters:    Size  Location     Type
   554 ;;		None
   555 ;; Auto vars:     Size  Location     Type
   556 ;;  ret             1    0        unsigned char 
   557 ;; Return value:  Size  Location     Type
   558 ;;                  1    wreg      void 
   559 ;; Registers used:
   560 ;;		wreg, status,2
   561 ;; Tracked objects:
   562 ;;		On entry : 0/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   570 ;;Total ram usage:        0 bytes
   571 ;; Hardware stack levels used: 1
   572 ;; Hardware stack levels required when called: 2
   573 ;; This function calls:
   574 ;;		Nothing
   575 ;; This function is called by:
   576 ;;		_application_intialize
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580                           	psect	text2
   581   00154A                     __ptext2:
   582                           	callstack 0
   583   00154A                     _ecu_layer_intialize:
   584                           	callstack 27
   585   00154A  0012               	return		;funcret
   586   00154C                     __end_of_ecu_layer_intialize:
   587                           	callstack 0
   588                           
   589 ;; *************** function _InterruptManager *****************
   590 ;; Defined at:
   591 ;;		line 32 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;		None
   594 ;; Auto vars:     Size  Location     Type
   595 ;;		None
   596 ;; Return value:  Size  Location     Type
   597 ;;                  1    wreg      void 
   598 ;; Registers used:
   599 ;;		wreg, status,2, status,0, cstack
   600 ;; Tracked objects:
   601 ;;		On entry : 0/0
   602 ;;		On exit  : 0/0
   603 ;;		Unchanged: 0/0
   604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   609 ;;Total ram usage:        0 bytes
   610 ;; Hardware stack levels used: 1
   611 ;; Hardware stack levels required when called: 1
   612 ;; This function calls:
   613 ;;		_ADC_ISR
   614 ;;		_CCP1_ISR
   615 ;;		_CCP2_ISR
   616 ;;		_EUSART_RX_ISR
   617 ;;		_EUSART_TX_ISR
   618 ;;		_INT0_ISR
   619 ;;		_INT1_ISR
   620 ;;		_INT2_ISR
   621 ;;		_MSSP_I2C_BC_ISR
   622 ;;		_MSSP_I2C_ISR
   623 ;;		_MSSP_SPI_ISR
   624 ;;		_RB4_ISR
   625 ;;		_RB5_ISR
   626 ;;		_RB6_ISR
   627 ;;		_RB7_ISR
   628 ;;		_TMR0_ISR
   629 ;;		_TMR1_ISR
   630 ;;		_TMR2_ISR
   631 ;;		_TMR3_ISR
   632 ;; This function is called by:
   633 ;;		Interrupt level 2
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637                           	psect	intcode
   638   000008                     __pintcode:
   639                           	callstack 0
   640   000008                     _InterruptManager:
   641                           	callstack 27
   642                           
   643                           ;incstack = 0
   644   000008  8273               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   645   00000A  ED0B  F008         	call	int_func,f	;refresh shadow registers
   646                           
   647                           	psect	intcode_body
   648   001016                     __pintcode_body:
   649                           	callstack 27
   650   001016                     int_func:
   651                           	callstack 27
   652   001016  0006               	pop		; remove dummy address from shadow register refresh
   653   001018                     
   654                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 34:     if((1 == INTCONbits.INT0IE) && (
      +                          1 == INTCONbits.INT0IF)){
   655   001018  A8F2               	btfss	242,4,c	;volatile
   656   00101A  EF11  F008         	goto	i2u213_41
   657   00101E  EF13  F008         	goto	i2u213_40
   658   001022                     i2u213_41:
   659   001022  EF1C  F008         	goto	i2l1216
   660   001026                     i2u213_40:
   661   001026  A2F2               	btfss	242,1,c	;volatile
   662   001028  EF18  F008         	goto	i2u214_41
   663   00102C  EF1A  F008         	goto	i2u214_40
   664   001030                     i2u214_41:
   665   001030  EF1C  F008         	goto	i2l1216
   666   001034                     i2u214_40:
   667   001034                     
   668                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 35:         INT0_ISR();
   669   001034  EC9B  F00A         	call	_INT0_ISR	;wreg free
   670   001038                     i2l1216:
   671                           
   672                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 38:     if((1 == INTCON3bits.INT1E) && (
      +                          1 == INTCON3bits.INT1F)){
   673   001038  A6F0               	btfss	240,3,c	;volatile
   674   00103A  EF21  F008         	goto	i2u215_41
   675   00103E  EF23  F008         	goto	i2u215_40
   676   001042                     i2u215_41:
   677   001042  EF2C  F008         	goto	i2l1218
   678   001046                     i2u215_40:
   679   001046  A0F0               	btfss	240,0,c	;volatile
   680   001048  EF28  F008         	goto	i2u216_41
   681   00104C  EF2A  F008         	goto	i2u216_40
   682   001050                     i2u216_41:
   683   001050  EF2C  F008         	goto	i2l1218
   684   001054                     i2u216_40:
   685   001054                     
   686                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 39:         INT1_ISR();
   687   001054  EC99  F00A         	call	_INT1_ISR	;wreg free
   688   001058                     i2l1218:
   689                           
   690                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 42:     if((1 == INTCON3bits.INT2IE) && 
      +                          (1 == INTCON3bits.INT2IF)){
   691   001058  A8F0               	btfss	240,4,c	;volatile
   692   00105A  EF31  F008         	goto	i2u217_41
   693   00105E  EF33  F008         	goto	i2u217_40
   694   001062                     i2u217_41:
   695   001062  EF3C  F008         	goto	i2l1220
   696   001066                     i2u217_40:
   697   001066  A2F0               	btfss	240,1,c	;volatile
   698   001068  EF38  F008         	goto	i2u218_41
   699   00106C  EF3A  F008         	goto	i2u218_40
   700   001070                     i2u218_41:
   701   001070  EF3C  F008         	goto	i2l1220
   702   001074                     i2u218_40:
   703   001074                     
   704                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 43:         INT2_ISR();
   705   001074  EC97  F00A         	call	_INT2_ISR	;wreg free
   706   001078                     i2l1220:
   707                           
   708                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 49:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
   709   001078  A6F2               	btfss	242,3,c	;volatile
   710   00107A  EF41  F008         	goto	i2u219_41
   711   00107E  EF43  F008         	goto	i2u219_40
   712   001082                     i2u219_41:
   713   001082  EF5E  F008         	goto	i2l1222
   714   001086                     i2u219_40:
   715   001086  A0F2               	btfss	242,0,c	;volatile
   716   001088  EF48  F008         	goto	i2u220_41
   717   00108C  EF4A  F008         	goto	i2u220_40
   718   001090                     i2u220_41:
   719   001090  EF5E  F008         	goto	i2l1222
   720   001094                     i2u220_40:
   721   001094  A881               	btfss	129,4,c	;volatile
   722   001096  EF4F  F008         	goto	i2u221_41
   723   00109A  EF51  F008         	goto	i2u221_40
   724   00109E                     i2u221_41:
   725   00109E  EF5E  F008         	goto	i2l1222
   726   0010A2                     i2u221_40:
   727   0010A2  0471               	decf	_RB4_Flag^0,w,c	;volatile
   728   0010A4  A4D8               	btfss	status,2,c
   729   0010A6  EF57  F008         	goto	i2u222_41
   730   0010AA  EF59  F008         	goto	i2u222_40
   731   0010AE                     i2u222_41:
   732   0010AE  EF5E  F008         	goto	i2l1222
   733   0010B2                     i2u222_40:
   734   0010B2                     
   735                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 50:        (PORTBbits.RB4 == GPIO_HIGH) 
      +                          && (RB4_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 51:         RB4_Flag
      +                           = 0;
   736   0010B2  0E00               	movlw	0
   737   0010B4  6E71               	movwf	_RB4_Flag^0,c	;volatile
   738   0010B6                     
   739                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 52:         RB4_ISR(0);
   740   0010B6  0E00               	movlw	0
   741   0010B8  EC65  F00A         	call	_RB4_ISR
   742   0010BC                     i2l1222:
   743                           
   744                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 55:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
   745   0010BC  A6F2               	btfss	242,3,c	;volatile
   746   0010BE  EF63  F008         	goto	i2u223_41
   747   0010C2  EF65  F008         	goto	i2u223_40
   748   0010C6                     i2u223_41:
   749   0010C6  EF80  F008         	goto	i2l1224
   750   0010CA                     i2u223_40:
   751   0010CA  A0F2               	btfss	242,0,c	;volatile
   752   0010CC  EF6A  F008         	goto	i2u224_41
   753   0010D0  EF6C  F008         	goto	i2u224_40
   754   0010D4                     i2u224_41:
   755   0010D4  EF80  F008         	goto	i2l1224
   756   0010D8                     i2u224_40:
   757   0010D8  B881               	btfsc	129,4,c	;volatile
   758   0010DA  EF71  F008         	goto	i2u225_41
   759   0010DE  EF73  F008         	goto	i2u225_40
   760   0010E2                     i2u225_41:
   761   0010E2  EF80  F008         	goto	i2l1224
   762   0010E6                     i2u225_40:
   763   0010E6  5071               	movf	_RB4_Flag^0,w,c	;volatile
   764   0010E8  A4D8               	btfss	status,2,c
   765   0010EA  EF79  F008         	goto	i2u226_41
   766   0010EE  EF7B  F008         	goto	i2u226_40
   767   0010F2                     i2u226_41:
   768   0010F2  EF80  F008         	goto	i2l1224
   769   0010F6                     i2u226_40:
   770   0010F6                     
   771                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 56:        (PORTBbits.RB4 == GPIO_LOW) &
      +                          & (RB4_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 57:         RB4_Flag 
      +                          = 1;
   772   0010F6  0E01               	movlw	1
   773   0010F8  6E71               	movwf	_RB4_Flag^0,c	;volatile
   774   0010FA                     
   775                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 58:         RB4_ISR(1);
   776   0010FA  0E01               	movlw	1
   777   0010FC  EC65  F00A         	call	_RB4_ISR
   778   001100                     i2l1224:
   779                           
   780                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 61:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
   781   001100  A6F2               	btfss	242,3,c	;volatile
   782   001102  EF85  F008         	goto	i2u227_41
   783   001106  EF87  F008         	goto	i2u227_40
   784   00110A                     i2u227_41:
   785   00110A  EFA2  F008         	goto	i2l1226
   786   00110E                     i2u227_40:
   787   00110E  A0F2               	btfss	242,0,c	;volatile
   788   001110  EF8C  F008         	goto	i2u228_41
   789   001114  EF8E  F008         	goto	i2u228_40
   790   001118                     i2u228_41:
   791   001118  EFA2  F008         	goto	i2l1226
   792   00111C                     i2u228_40:
   793   00111C  AA81               	btfss	129,5,c	;volatile
   794   00111E  EF93  F008         	goto	i2u229_41
   795   001122  EF95  F008         	goto	i2u229_40
   796   001126                     i2u229_41:
   797   001126  EFA2  F008         	goto	i2l1226
   798   00112A                     i2u229_40:
   799   00112A  0470               	decf	_RB5_Flag^0,w,c	;volatile
   800   00112C  A4D8               	btfss	status,2,c
   801   00112E  EF9B  F008         	goto	i2u230_41
   802   001132  EF9D  F008         	goto	i2u230_40
   803   001136                     i2u230_41:
   804   001136  EFA2  F008         	goto	i2l1226
   805   00113A                     i2u230_40:
   806   00113A                     
   807                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 62:        (PORTBbits.RB5 == GPIO_HIGH) 
      +                          && (RB5_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 63:         RB5_Flag
      +                           = 0;
   808   00113A  0E00               	movlw	0
   809   00113C  6E70               	movwf	_RB5_Flag^0,c	;volatile
   810   00113E                     
   811                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 64:         RB5_ISR(0);
   812   00113E  0E00               	movlw	0
   813   001140  EC58  F00A         	call	_RB5_ISR
   814   001144                     i2l1226:
   815                           
   816                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 67:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
   817   001144  A6F2               	btfss	242,3,c	;volatile
   818   001146  EFA7  F008         	goto	i2u231_41
   819   00114A  EFA9  F008         	goto	i2u231_40
   820   00114E                     i2u231_41:
   821   00114E  EFC4  F008         	goto	i2l1228
   822   001152                     i2u231_40:
   823   001152  A0F2               	btfss	242,0,c	;volatile
   824   001154  EFAE  F008         	goto	i2u232_41
   825   001158  EFB0  F008         	goto	i2u232_40
   826   00115C                     i2u232_41:
   827   00115C  EFC4  F008         	goto	i2l1228
   828   001160                     i2u232_40:
   829   001160  BA81               	btfsc	129,5,c	;volatile
   830   001162  EFB5  F008         	goto	i2u233_41
   831   001166  EFB7  F008         	goto	i2u233_40
   832   00116A                     i2u233_41:
   833   00116A  EFC4  F008         	goto	i2l1228
   834   00116E                     i2u233_40:
   835   00116E  5070               	movf	_RB5_Flag^0,w,c	;volatile
   836   001170  A4D8               	btfss	status,2,c
   837   001172  EFBD  F008         	goto	i2u234_41
   838   001176  EFBF  F008         	goto	i2u234_40
   839   00117A                     i2u234_41:
   840   00117A  EFC4  F008         	goto	i2l1228
   841   00117E                     i2u234_40:
   842   00117E                     
   843                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 68:        (PORTBbits.RB5 == GPIO_LOW) &
      +                          & (RB5_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 69:         RB5_Flag 
      +                          = 1;
   844   00117E  0E01               	movlw	1
   845   001180  6E70               	movwf	_RB5_Flag^0,c	;volatile
   846   001182                     
   847                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 70:         RB5_ISR(1);
   848   001182  0E01               	movlw	1
   849   001184  EC58  F00A         	call	_RB5_ISR
   850   001188                     i2l1228:
   851                           
   852                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 73:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
   853   001188  A6F2               	btfss	242,3,c	;volatile
   854   00118A  EFC9  F008         	goto	i2u235_41
   855   00118E  EFCB  F008         	goto	i2u235_40
   856   001192                     i2u235_41:
   857   001192  EFE6  F008         	goto	i2l1230
   858   001196                     i2u235_40:
   859   001196  A0F2               	btfss	242,0,c	;volatile
   860   001198  EFD0  F008         	goto	i2u236_41
   861   00119C  EFD2  F008         	goto	i2u236_40
   862   0011A0                     i2u236_41:
   863   0011A0  EFE6  F008         	goto	i2l1230
   864   0011A4                     i2u236_40:
   865   0011A4  AC81               	btfss	129,6,c	;volatile
   866   0011A6  EFD7  F008         	goto	i2u237_41
   867   0011AA  EFD9  F008         	goto	i2u237_40
   868   0011AE                     i2u237_41:
   869   0011AE  EFE6  F008         	goto	i2l1230
   870   0011B2                     i2u237_40:
   871   0011B2  046F               	decf	_RB6_Flag^0,w,c	;volatile
   872   0011B4  A4D8               	btfss	status,2,c
   873   0011B6  EFDF  F008         	goto	i2u238_41
   874   0011BA  EFE1  F008         	goto	i2u238_40
   875   0011BE                     i2u238_41:
   876   0011BE  EFE6  F008         	goto	i2l1230
   877   0011C2                     i2u238_40:
   878   0011C2                     
   879                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 74:        (PORTBbits.RB6 == GPIO_HIGH) 
      +                          && (RB6_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 75:         RB6_Flag
      +                           = 0;
   880   0011C2  0E00               	movlw	0
   881   0011C4  6E6F               	movwf	_RB6_Flag^0,c	;volatile
   882   0011C6                     
   883                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 76:         RB6_ISR(0);
   884   0011C6  0E00               	movlw	0
   885   0011C8  EC4B  F00A         	call	_RB6_ISR
   886   0011CC                     i2l1230:
   887                           
   888                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 79:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
   889   0011CC  A6F2               	btfss	242,3,c	;volatile
   890   0011CE  EFEB  F008         	goto	i2u239_41
   891   0011D2  EFED  F008         	goto	i2u239_40
   892   0011D6                     i2u239_41:
   893   0011D6  EF08  F009         	goto	i2l1232
   894   0011DA                     i2u239_40:
   895   0011DA  A0F2               	btfss	242,0,c	;volatile
   896   0011DC  EFF2  F008         	goto	i2u240_41
   897   0011E0  EFF4  F008         	goto	i2u240_40
   898   0011E4                     i2u240_41:
   899   0011E4  EF08  F009         	goto	i2l1232
   900   0011E8                     i2u240_40:
   901   0011E8  BC81               	btfsc	129,6,c	;volatile
   902   0011EA  EFF9  F008         	goto	i2u241_41
   903   0011EE  EFFB  F008         	goto	i2u241_40
   904   0011F2                     i2u241_41:
   905   0011F2  EF08  F009         	goto	i2l1232
   906   0011F6                     i2u241_40:
   907   0011F6  506F               	movf	_RB6_Flag^0,w,c	;volatile
   908   0011F8  A4D8               	btfss	status,2,c
   909   0011FA  EF01  F009         	goto	i2u242_41
   910   0011FE  EF03  F009         	goto	i2u242_40
   911   001202                     i2u242_41:
   912   001202  EF08  F009         	goto	i2l1232
   913   001206                     i2u242_40:
   914   001206                     
   915                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 80:        (PORTBbits.RB6 == GPIO_LOW) &
      +                          & (RB6_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 81:         RB6_Flag 
      +                          = 1;
   916   001206  0E01               	movlw	1
   917   001208  6E6F               	movwf	_RB6_Flag^0,c	;volatile
   918   00120A                     
   919                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 82:         RB6_ISR(1);
   920   00120A  0E01               	movlw	1
   921   00120C  EC4B  F00A         	call	_RB6_ISR
   922   001210                     i2l1232:
   923                           
   924                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 85:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
   925   001210  A6F2               	btfss	242,3,c	;volatile
   926   001212  EF0D  F009         	goto	i2u243_41
   927   001216  EF0F  F009         	goto	i2u243_40
   928   00121A                     i2u243_41:
   929   00121A  EF2A  F009         	goto	i2l1234
   930   00121E                     i2u243_40:
   931   00121E  A0F2               	btfss	242,0,c	;volatile
   932   001220  EF14  F009         	goto	i2u244_41
   933   001224  EF16  F009         	goto	i2u244_40
   934   001228                     i2u244_41:
   935   001228  EF2A  F009         	goto	i2l1234
   936   00122C                     i2u244_40:
   937   00122C  AE81               	btfss	129,7,c	;volatile
   938   00122E  EF1B  F009         	goto	i2u245_41
   939   001232  EF1D  F009         	goto	i2u245_40
   940   001236                     i2u245_41:
   941   001236  EF2A  F009         	goto	i2l1234
   942   00123A                     i2u245_40:
   943   00123A  046E               	decf	_RB7_Flag^0,w,c	;volatile
   944   00123C  A4D8               	btfss	status,2,c
   945   00123E  EF23  F009         	goto	i2u246_41
   946   001242  EF25  F009         	goto	i2u246_40
   947   001246                     i2u246_41:
   948   001246  EF2A  F009         	goto	i2l1234
   949   00124A                     i2u246_40:
   950   00124A                     
   951                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 86:        (PORTBbits.RB7 == GPIO_HIGH) 
      +                          && (RB7_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 87:         RB7_Flag
      +                           = 0;
   952   00124A  0E00               	movlw	0
   953   00124C  6E6E               	movwf	_RB7_Flag^0,c	;volatile
   954   00124E                     
   955                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 88:         RB7_ISR(0);
   956   00124E  0E00               	movlw	0
   957   001250  EC3E  F00A         	call	_RB7_ISR
   958   001254                     i2l1234:
   959                           
   960                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 91:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
   961   001254  A6F2               	btfss	242,3,c	;volatile
   962   001256  EF2F  F009         	goto	i2u247_41
   963   00125A  EF31  F009         	goto	i2u247_40
   964   00125E                     i2u247_41:
   965   00125E  EF4C  F009         	goto	i2l1236
   966   001262                     i2u247_40:
   967   001262  A0F2               	btfss	242,0,c	;volatile
   968   001264  EF36  F009         	goto	i2u248_41
   969   001268  EF38  F009         	goto	i2u248_40
   970   00126C                     i2u248_41:
   971   00126C  EF4C  F009         	goto	i2l1236
   972   001270                     i2u248_40:
   973   001270  BE81               	btfsc	129,7,c	;volatile
   974   001272  EF3D  F009         	goto	i2u249_41
   975   001276  EF3F  F009         	goto	i2u249_40
   976   00127A                     i2u249_41:
   977   00127A  EF4C  F009         	goto	i2l1236
   978   00127E                     i2u249_40:
   979   00127E  506E               	movf	_RB7_Flag^0,w,c	;volatile
   980   001280  A4D8               	btfss	status,2,c
   981   001282  EF45  F009         	goto	i2u250_41
   982   001286  EF47  F009         	goto	i2u250_40
   983   00128A                     i2u250_41:
   984   00128A  EF4C  F009         	goto	i2l1236
   985   00128E                     i2u250_40:
   986   00128E                     
   987                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 92:        (PORTBbits.RB7 == GPIO_LOW) &
      +                          & (RB7_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 93:         RB7_Flag 
      +                          = 1;
   988   00128E  0E01               	movlw	1
   989   001290  6E6E               	movwf	_RB7_Flag^0,c	;volatile
   990   001292                     
   991                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 94:         RB7_ISR(1);
   992   001292  0E01               	movlw	1
   993   001294  EC3E  F00A         	call	_RB7_ISR
   994   001298                     i2l1236:
   995                           
   996                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 99:     if((1 == PIE1bits.ADIE) && (1 ==
      +                           PIR1bits.ADIF)){
   997   001298  AC9D               	btfss	157,6,c	;volatile
   998   00129A  EF51  F009         	goto	i2u251_41
   999   00129E  EF53  F009         	goto	i2u251_40
  1000   0012A2                     i2u251_41:
  1001   0012A2  EF5C  F009         	goto	i2l1238
  1002   0012A6                     i2u251_40:
  1003   0012A6  AC9E               	btfss	158,6,c	;volatile
  1004   0012A8  EF58  F009         	goto	i2u252_41
  1005   0012AC  EF5A  F009         	goto	i2u252_40
  1006   0012B0                     i2u252_41:
  1007   0012B0  EF5C  F009         	goto	i2l1238
  1008   0012B4                     i2u252_40:
  1009   0012B4                     
  1010                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 100:         ADC_ISR();
  1011   0012B4  ECA3  F00A         	call	_ADC_ISR	;wreg free
  1012   0012B8                     i2l1238:
  1013                           
  1014                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 104:     if((1 == INTCONbits.TMR0IE) && 
      +                          (1 == INTCONbits.TMR0IF)){
  1015   0012B8  AAF2               	btfss	242,5,c	;volatile
  1016   0012BA  EF61  F009         	goto	i2u253_41
  1017   0012BE  EF63  F009         	goto	i2u253_40
  1018   0012C2                     i2u253_41:
  1019   0012C2  EF6C  F009         	goto	i2l1240
  1020   0012C6                     i2u253_40:
  1021   0012C6  A4F2               	btfss	242,2,c	;volatile
  1022   0012C8  EF68  F009         	goto	i2u254_41
  1023   0012CC  EF6A  F009         	goto	i2u254_40
  1024   0012D0                     i2u254_41:
  1025   0012D0  EF6C  F009         	goto	i2l1240
  1026   0012D4                     i2u254_40:
  1027   0012D4                     
  1028                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 105:         TMR0_ISR();
  1029   0012D4  EC84  F00A         	call	_TMR0_ISR	;wreg free
  1030   0012D8                     i2l1240:
  1031                           
  1032                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 108:     if((1 == PIE1bits.TMR1IE) && (1
      +                           == PIR1bits.TMR1IF)){
  1033   0012D8  A09D               	btfss	157,0,c	;volatile
  1034   0012DA  EF71  F009         	goto	i2u255_41
  1035   0012DE  EF73  F009         	goto	i2u255_40
  1036   0012E2                     i2u255_41:
  1037   0012E2  EF7C  F009         	goto	i2l1242
  1038   0012E6                     i2u255_40:
  1039   0012E6  A09E               	btfss	158,0,c	;volatile
  1040   0012E8  EF78  F009         	goto	i2u256_41
  1041   0012EC  EF7A  F009         	goto	i2u256_40
  1042   0012F0                     i2u256_41:
  1043   0012F0  EF7C  F009         	goto	i2l1242
  1044   0012F4                     i2u256_40:
  1045   0012F4                     
  1046                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 109:         TMR1_ISR();
  1047   0012F4  EC7E  F00A         	call	_TMR1_ISR	;wreg free
  1048   0012F8                     i2l1242:
  1049                           
  1050                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 112:     if((1 == PIE1bits.TMR2IE) && (1
      +                           == PIR1bits.TMR2IF)){
  1051   0012F8  A29D               	btfss	157,1,c	;volatile
  1052   0012FA  EF81  F009         	goto	i2u257_41
  1053   0012FE  EF83  F009         	goto	i2u257_40
  1054   001302                     i2u257_41:
  1055   001302  EF8C  F009         	goto	i2l1244
  1056   001306                     i2u257_40:
  1057   001306  A29E               	btfss	158,1,c	;volatile
  1058   001308  EF88  F009         	goto	i2u258_41
  1059   00130C  EF8A  F009         	goto	i2u258_40
  1060   001310                     i2u258_41:
  1061   001310  EF8C  F009         	goto	i2l1244
  1062   001314                     i2u258_40:
  1063   001314                     
  1064                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 113:         TMR2_ISR();
  1065   001314  EC8A  F00A         	call	_TMR2_ISR	;wreg free
  1066   001318                     i2l1244:
  1067                           
  1068                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 116:     if((1 == PIE2bits.TMR3IE) && (1
      +                           == PIR2bits.TMR3IF)){
  1069   001318  A2A0               	btfss	160,1,c	;volatile
  1070   00131A  EF91  F009         	goto	i2u259_41
  1071   00131E  EF93  F009         	goto	i2u259_40
  1072   001322                     i2u259_41:
  1073   001322  EF9C  F009         	goto	i2l1246
  1074   001326                     i2u259_40:
  1075   001326  A2A1               	btfss	161,1,c	;volatile
  1076   001328  EF98  F009         	goto	i2u260_41
  1077   00132C  EF9A  F009         	goto	i2u260_40
  1078   001330                     i2u260_41:
  1079   001330  EF9C  F009         	goto	i2l1246
  1080   001334                     i2u260_40:
  1081   001334                     
  1082                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 117:         TMR3_ISR();
  1083   001334  EC78  F00A         	call	_TMR3_ISR	;wreg free
  1084   001338                     i2l1246:
  1085                           
  1086                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 121:     if((1 == PIE1bits.TXIE) && (1 =
      +                          = PIR1bits.TXIF)){
  1087   001338  A89D               	btfss	157,4,c	;volatile
  1088   00133A  EFA1  F009         	goto	i2u261_41
  1089   00133E  EFA3  F009         	goto	i2u261_40
  1090   001342                     i2u261_41:
  1091   001342  EFAC  F009         	goto	i2l1248
  1092   001346                     i2u261_40:
  1093   001346  A89E               	btfss	158,4,c	;volatile
  1094   001348  EFA8  F009         	goto	i2u262_41
  1095   00134C  EFAA  F009         	goto	i2u262_40
  1096   001350                     i2u262_41:
  1097   001350  EFAC  F009         	goto	i2l1248
  1098   001354                     i2u262_40:
  1099   001354                     
  1100                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 122:         EUSART_TX_ISR();
  1101   001354  EC9D  F00A         	call	_EUSART_TX_ISR	;wreg free
  1102   001358                     i2l1248:
  1103                           
  1104                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 125:     if((1 == PIE1bits.RCIE) && (1 =
      +                          = PIR1bits.RCIF)){
  1105   001358  AA9D               	btfss	157,5,c	;volatile
  1106   00135A  EFB1  F009         	goto	i2u263_41
  1107   00135E  EFB3  F009         	goto	i2u263_40
  1108   001362                     i2u263_41:
  1109   001362  EFBC  F009         	goto	i2l1250
  1110   001366                     i2u263_40:
  1111   001366  AA9E               	btfss	158,5,c	;volatile
  1112   001368  EFB8  F009         	goto	i2u264_41
  1113   00136C  EFBA  F009         	goto	i2u264_40
  1114   001370                     i2u264_41:
  1115   001370  EFBC  F009         	goto	i2l1250
  1116   001374                     i2u264_40:
  1117   001374                     
  1118                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 126:         EUSART_RX_ISR();
  1119   001374  ECA6  F00A         	call	_EUSART_RX_ISR	;wreg free
  1120   001378                     i2l1250:
  1121                           
  1122                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 131:     if((1 == PIE1bits.SSPIE) && (1 
      +                          == PIR1bits.SSPIF)){
  1123   001378  A69D               	btfss	157,3,c	;volatile
  1124   00137A  EFC1  F009         	goto	i2u265_41
  1125   00137E  EFC3  F009         	goto	i2u265_40
  1126   001382                     i2u265_41:
  1127   001382  EFCC  F009         	goto	i2l1252
  1128   001386                     i2u265_40:
  1129   001386  A69E               	btfss	158,3,c	;volatile
  1130   001388  EFC8  F009         	goto	i2u266_41
  1131   00138C  EFCA  F009         	goto	i2u266_40
  1132   001390                     i2u266_41:
  1133   001390  EFCC  F009         	goto	i2l1252
  1134   001394                     i2u266_40:
  1135   001394                     
  1136                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 132:         MSSP_I2C_ISR();
  1137   001394  EC93  F00A         	call	_MSSP_I2C_ISR	;wreg free
  1138   001398                     i2l1252:
  1139                           
  1140                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 135:     if((1 == PIE2bits.BCLIE) && (1 
      +                          == PIR2bits.BCLIF)){
  1141   001398  A6A0               	btfss	160,3,c	;volatile
  1142   00139A  EFD1  F009         	goto	i2u267_41
  1143   00139E  EFD3  F009         	goto	i2u267_40
  1144   0013A2                     i2u267_41:
  1145   0013A2  EFDC  F009         	goto	i2l1254
  1146   0013A6                     i2u267_40:
  1147   0013A6  A6A1               	btfss	161,3,c	;volatile
  1148   0013A8  EFD8  F009         	goto	i2u268_41
  1149   0013AC  EFDA  F009         	goto	i2u268_40
  1150   0013B0                     i2u268_41:
  1151   0013B0  EFDC  F009         	goto	i2l1254
  1152   0013B4                     i2u268_40:
  1153   0013B4                     
  1154                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 136:         MSSP_I2C_BC_ISR();
  1155   0013B4  EC95  F00A         	call	_MSSP_I2C_BC_ISR	;wreg free
  1156   0013B8                     i2l1254:
  1157                           
  1158                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 139:     if((1 == PIE1bits.SSPIE) && (1 
      +                          == PIR1bits.SSPIF)){
  1159   0013B8  A69D               	btfss	157,3,c	;volatile
  1160   0013BA  EFE1  F009         	goto	i2u269_41
  1161   0013BE  EFE3  F009         	goto	i2u269_40
  1162   0013C2                     i2u269_41:
  1163   0013C2  EFEC  F009         	goto	i2l1256
  1164   0013C6                     i2u269_40:
  1165   0013C6  A69E               	btfss	158,3,c	;volatile
  1166   0013C8  EFE8  F009         	goto	i2u270_41
  1167   0013CC  EFEA  F009         	goto	i2u270_40
  1168   0013D0                     i2u270_41:
  1169   0013D0  EFEC  F009         	goto	i2l1256
  1170   0013D4                     i2u270_40:
  1171   0013D4                     
  1172                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 140:         MSSP_SPI_ISR();
  1173   0013D4  EC91  F00A         	call	_MSSP_SPI_ISR	;wreg free
  1174   0013D8                     i2l1256:
  1175                           
  1176                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 145:     if((1 == PIE1bits.CCP1IE) && (1
      +                           == PIR1bits.CCP1IF)){
  1177   0013D8  A49D               	btfss	157,2,c	;volatile
  1178   0013DA  EFF1  F009         	goto	i2u271_41
  1179   0013DE  EFF3  F009         	goto	i2u271_40
  1180   0013E2                     i2u271_41:
  1181   0013E2  EFFC  F009         	goto	i2l1258
  1182   0013E6                     i2u271_40:
  1183   0013E6  A49E               	btfss	158,2,c	;volatile
  1184   0013E8  EFF8  F009         	goto	i2u272_41
  1185   0013EC  EFFA  F009         	goto	i2u272_40
  1186   0013F0                     i2u272_41:
  1187   0013F0  EFFC  F009         	goto	i2l1258
  1188   0013F4                     i2u272_40:
  1189   0013F4                     
  1190                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 146:         CCP1_ISR();
  1191   0013F4  ECA1  F00A         	call	_CCP1_ISR	;wreg free
  1192   0013F8                     i2l1258:
  1193                           
  1194                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 149:     if((1 == PIE2bits.CCP2IE) && (1
      +                           == PIR2bits.CCP2IF)){
  1195   0013F8  A0A0               	btfss	160,0,c	;volatile
  1196   0013FA  EF01  F00A         	goto	i2u273_41
  1197   0013FE  EF03  F00A         	goto	i2u273_40
  1198   001402                     i2u273_41:
  1199   001402  EF0C  F00A         	goto	i2l1261
  1200   001406                     i2u273_40:
  1201   001406  A0A1               	btfss	161,0,c	;volatile
  1202   001408  EF08  F00A         	goto	i2u274_41
  1203   00140C  EF0A  F00A         	goto	i2u274_40
  1204   001410                     i2u274_41:
  1205   001410  EF0C  F00A         	goto	i2l1261
  1206   001414                     i2u274_40:
  1207   001414                     
  1208                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 150:         CCP2_ISR();
  1209   001414  EC9F  F00A         	call	_CCP2_ISR	;wreg free
  1210   001418                     i2l1261:
  1211   001418  9273               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1212   00141A  0011               	retfie		f
  1213   00141C                     __end_of_InterruptManager:
  1214                           	callstack 0
  1215                           
  1216 ;; *************** function _TMR3_ISR *****************
  1217 ;; Defined at:
  1218 ;;		line 102 in file "MCAL_Layer/Timer3/hal_timr3.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;		None
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;		None
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  1    wreg      void 
  1225 ;; Registers used:
  1226 ;;		wreg, status,2
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1236 ;;Total ram usage:        0 bytes
  1237 ;; Hardware stack levels used: 1
  1238 ;; This function calls:
  1239 ;;		Nothing
  1240 ;; This function is called by:
  1241 ;;		_InterruptManager
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           	psect	text4
  1246   0014F0                     __ptext4:
  1247                           	callstack 0
  1248   0014F0                     _TMR3_ISR:
  1249                           	callstack 27
  1250   0014F0                     
  1251                           ;MCAL_Layer/Timer3/hal_timr3.c: 103:     (PIR2bits.TMR3IF = 0);
  1252   0014F0  92A1               	bcf	161,1,c	;volatile
  1253   0014F2                     
  1254                           ;MCAL_Layer/Timer3/hal_timr3.c: 104:     TMR3H = (timer3_preload) >> 8;
  1255   0014F2  5010               	movf	(_timer3_preload+1)^0,w,c
  1256   0014F4  6EB3               	movwf	179,c	;volatile
  1257   0014F6                     
  1258                           ;MCAL_Layer/Timer3/hal_timr3.c: 105:     TMR3L = (uint8)(timer3_preload);
  1259   0014F6  C00F  FFB2         	movff	_timer3_preload,4018	;volatile
  1260   0014FA  0012               	return		;funcret
  1261   0014FC                     __end_of_TMR3_ISR:
  1262                           	callstack 0
  1263                           
  1264 ;; *************** function _TMR2_ISR *****************
  1265 ;; Defined at:
  1266 ;;		line 95 in file "MCAL_Layer/Timer2/hal_timr2.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;		None
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;		None
  1271 ;; Return value:  Size  Location     Type
  1272 ;;                  1    wreg      void 
  1273 ;; Registers used:
  1274 ;;		None
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1284 ;;Total ram usage:        0 bytes
  1285 ;; Hardware stack levels used: 1
  1286 ;; This function calls:
  1287 ;;		Nothing
  1288 ;; This function is called by:
  1289 ;;		_InterruptManager
  1290 ;; This function uses a non-reentrant model
  1291 ;;
  1292                           
  1293                           	psect	text5
  1294   001514                     __ptext5:
  1295                           	callstack 0
  1296   001514                     _TMR2_ISR:
  1297                           	callstack 27
  1298   001514                     
  1299                           ;MCAL_Layer/Timer2/hal_timr2.c: 96:     (PIR1bits.TMR2IF = 0);
  1300   001514  929E               	bcf	158,1,c	;volatile
  1301                           
  1302                           ;MCAL_Layer/Timer2/hal_timr2.c: 97:     TMR2 = timer2_preload;
  1303   001516  C041  FFCC         	movff	_timer2_preload,4044	;volatile
  1304   00151A  0012               	return		;funcret
  1305   00151C                     __end_of_TMR2_ISR:
  1306                           	callstack 0
  1307                           
  1308 ;; *************** function _TMR1_ISR *****************
  1309 ;; Defined at:
  1310 ;;		line 102 in file "MCAL_Layer/Timer1/hal_timr1.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;		None
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;		None
  1315 ;; Return value:  Size  Location     Type
  1316 ;;                  1    wreg      void 
  1317 ;; Registers used:
  1318 ;;		wreg, status,2
  1319 ;; Tracked objects:
  1320 ;;		On entry : 0/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1328 ;;Total ram usage:        0 bytes
  1329 ;; Hardware stack levels used: 1
  1330 ;; This function calls:
  1331 ;;		Nothing
  1332 ;; This function is called by:
  1333 ;;		_InterruptManager
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           	psect	text6
  1338   0014FC                     __ptext6:
  1339                           	callstack 0
  1340   0014FC                     _TMR1_ISR:
  1341                           	callstack 27
  1342   0014FC                     
  1343                           ;MCAL_Layer/Timer1/hal_timr1.c: 103:     (PIR1bits.TMR1IF = 0);
  1344   0014FC  909E               	bcf	158,0,c	;volatile
  1345   0014FE                     
  1346                           ;MCAL_Layer/Timer1/hal_timr1.c: 104:     TMR1H = (timer1_preload) >> 8;
  1347   0014FE  5016               	movf	(_timer1_preload+1)^0,w,c	;volatile
  1348   001500  6ECF               	movwf	207,c	;volatile
  1349   001502                     
  1350                           ;MCAL_Layer/Timer1/hal_timr1.c: 105:     TMR1L = (uint8)(timer1_preload);
  1351   001502  C015  FFCE         	movff	_timer1_preload,4046	;volatile
  1352   001506  0012               	return		;funcret
  1353   001508                     __end_of_TMR1_ISR:
  1354                           	callstack 0
  1355                           
  1356 ;; *************** function _TMR0_ISR *****************
  1357 ;; Defined at:
  1358 ;;		line 107 in file "MCAL_Layer/Timer0/hal_timr0.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;		None
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;		None
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  1    wreg      void 
  1365 ;; Registers used:
  1366 ;;		wreg, status,2
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1376 ;;Total ram usage:        0 bytes
  1377 ;; Hardware stack levels used: 1
  1378 ;; This function calls:
  1379 ;;		Nothing
  1380 ;; This function is called by:
  1381 ;;		_InterruptManager
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           	psect	text7
  1386   001508                     __ptext7:
  1387                           	callstack 0
  1388   001508                     _TMR0_ISR:
  1389                           	callstack 27
  1390   001508                     
  1391                           ;MCAL_Layer/Timer0/hal_timr0.c: 108:     (INTCONbits.TMR0IF = 0);
  1392   001508  94F2               	bcf	242,2,c	;volatile
  1393   00150A                     
  1394                           ;MCAL_Layer/Timer0/hal_timr0.c: 109:     TMR0H = (timer0_preload) >> 8;
  1395   00150A  501A               	movf	(_timer0_preload+1)^0,w,c
  1396   00150C  6ED7               	movwf	215,c	;volatile
  1397   00150E                     
  1398                           ;MCAL_Layer/Timer0/hal_timr0.c: 110:     TMR0L = (uint8)(timer0_preload);
  1399   00150E  C019  FFD6         	movff	_timer0_preload,4054	;volatile
  1400   001512  0012               	return		;funcret
  1401   001514                     __end_of_TMR0_ISR:
  1402                           	callstack 0
  1403                           
  1404 ;; *************** function _RB7_ISR *****************
  1405 ;; Defined at:
  1406 ;;		line 164 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;  RB7_Source      1    wreg     unsigned char 
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;  RB7_Source      1    0[COMRAM] unsigned char 
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  1    wreg      void 
  1413 ;; Registers used:
  1414 ;;		wreg, status,2, status,0
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1421 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1423 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1424 ;;Total ram usage:        1 bytes
  1425 ;; Hardware stack levels used: 1
  1426 ;; This function calls:
  1427 ;;		Nothing
  1428 ;; This function is called by:
  1429 ;;		_InterruptManager
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432                           
  1433                           	psect	text8
  1434   00147C                     __ptext8:
  1435                           	callstack 0
  1436   00147C                     _RB7_ISR:
  1437                           	callstack 27
  1438                           
  1439                           ;incstack = 0
  1440                           ;RB7_ISR@RB7_Source stored from wreg
  1441   00147C  6E72               	movwf	RB7_ISR@RB7_Source^0,c
  1442   00147E                     
  1443                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 166:     (INTCONbits.RBIF = 0);
  1444   00147E  90F2               	bcf	242,0,c	;volatile
  1445   001480                     
  1446                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 169:     if(0 == RB7_Source){
  1447   001480  5072               	movf	RB7_ISR@RB7_Source^0,w,c
  1448   001482  A4D8               	btfss	status,2,c
  1449   001484  EF46  F00A         	goto	i2u35_41
  1450   001488  EF48  F00A         	goto	i2u35_40
  1451   00148C                     i2u35_41:
  1452   00148C  EF4A  F00A         	goto	i2l2759
  1453   001490                     i2u35_40:
  1454   001490  EF4A  F00A         	goto	i2l1041
  1455   001494                     i2l2759:
  1456   001494                     i2l1041:
  1457   001494  0012               	return		;funcret
  1458   001496                     __end_of_RB7_ISR:
  1459                           	callstack 0
  1460                           
  1461 ;; *************** function _RB6_ISR *****************
  1462 ;; Defined at:
  1463 ;;		line 145 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;  RB6_Source      1    wreg     unsigned char 
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;  RB6_Source      1    0[COMRAM] unsigned char 
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  1    wreg      void 
  1470 ;; Registers used:
  1471 ;;		wreg, status,2, status,0
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1478 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1480 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1481 ;;Total ram usage:        1 bytes
  1482 ;; Hardware stack levels used: 1
  1483 ;; This function calls:
  1484 ;;		Nothing
  1485 ;; This function is called by:
  1486 ;;		_InterruptManager
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           	psect	text9
  1491   001496                     __ptext9:
  1492                           	callstack 0
  1493   001496                     _RB6_ISR:
  1494                           	callstack 27
  1495                           
  1496                           ;incstack = 0
  1497                           ;RB6_ISR@RB6_Source stored from wreg
  1498   001496  6E72               	movwf	RB6_ISR@RB6_Source^0,c
  1499   001498                     
  1500                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 147:     (INTCONbits.RBIF = 0);
  1501   001498  90F2               	bcf	242,0,c	;volatile
  1502   00149A                     
  1503                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 150:     if(0 == RB6_Source){
  1504   00149A  5072               	movf	RB6_ISR@RB6_Source^0,w,c
  1505   00149C  A4D8               	btfss	status,2,c
  1506   00149E  EF53  F00A         	goto	i2u34_41
  1507   0014A2  EF55  F00A         	goto	i2u34_40
  1508   0014A6                     i2u34_41:
  1509   0014A6  EF57  F00A         	goto	i2l2745
  1510   0014AA                     i2u34_40:
  1511   0014AA  EF57  F00A         	goto	i2l1030
  1512   0014AE                     i2l2745:
  1513   0014AE                     i2l1030:
  1514   0014AE  0012               	return		;funcret
  1515   0014B0                     __end_of_RB6_ISR:
  1516                           	callstack 0
  1517                           
  1518 ;; *************** function _RB5_ISR *****************
  1519 ;; Defined at:
  1520 ;;		line 126 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  1521 ;; Parameters:    Size  Location     Type
  1522 ;;  RB5_Source      1    wreg     unsigned char 
  1523 ;; Auto vars:     Size  Location     Type
  1524 ;;  RB5_Source      1    0[COMRAM] unsigned char 
  1525 ;; Return value:  Size  Location     Type
  1526 ;;                  1    wreg      void 
  1527 ;; Registers used:
  1528 ;;		wreg, status,2, status,0
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1535 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1537 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1538 ;;Total ram usage:        1 bytes
  1539 ;; Hardware stack levels used: 1
  1540 ;; This function calls:
  1541 ;;		Nothing
  1542 ;; This function is called by:
  1543 ;;		_InterruptManager
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           	psect	text10
  1548   0014B0                     __ptext10:
  1549                           	callstack 0
  1550   0014B0                     _RB5_ISR:
  1551                           	callstack 27
  1552                           
  1553                           ;incstack = 0
  1554                           ;RB5_ISR@RB5_Source stored from wreg
  1555   0014B0  6E72               	movwf	RB5_ISR@RB5_Source^0,c
  1556   0014B2                     
  1557                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 128:     (INTCONbits.RBIF = 0);
  1558   0014B2  90F2               	bcf	242,0,c	;volatile
  1559   0014B4                     
  1560                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 131:     if(0 == RB5_Source){
  1561   0014B4  5072               	movf	RB5_ISR@RB5_Source^0,w,c
  1562   0014B6  A4D8               	btfss	status,2,c
  1563   0014B8  EF60  F00A         	goto	i2u33_41
  1564   0014BC  EF62  F00A         	goto	i2u33_40
  1565   0014C0                     i2u33_41:
  1566   0014C0  EF64  F00A         	goto	i2l2731
  1567   0014C4                     i2u33_40:
  1568   0014C4  EF64  F00A         	goto	i2l1019
  1569   0014C8                     i2l2731:
  1570   0014C8                     i2l1019:
  1571   0014C8  0012               	return		;funcret
  1572   0014CA                     __end_of_RB5_ISR:
  1573                           	callstack 0
  1574                           
  1575 ;; *************** function _RB4_ISR *****************
  1576 ;; Defined at:
  1577 ;;		line 107 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;  RB4_Source      1    wreg     unsigned char 
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;  RB4_Source      1    0[COMRAM] unsigned char 
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  1    wreg      void 
  1584 ;; Registers used:
  1585 ;;		wreg, status,2, status,0
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1592 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1594 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1595 ;;Total ram usage:        1 bytes
  1596 ;; Hardware stack levels used: 1
  1597 ;; This function calls:
  1598 ;;		Nothing
  1599 ;; This function is called by:
  1600 ;;		_InterruptManager
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604                           	psect	text11
  1605   0014CA                     __ptext11:
  1606                           	callstack 0
  1607   0014CA                     _RB4_ISR:
  1608                           	callstack 27
  1609                           
  1610                           ;incstack = 0
  1611                           ;RB4_ISR@RB4_Source stored from wreg
  1612   0014CA  6E72               	movwf	RB4_ISR@RB4_Source^0,c
  1613   0014CC                     
  1614                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 109:     (INTCONbits.RBIF = 0);
  1615   0014CC  90F2               	bcf	242,0,c	;volatile
  1616   0014CE                     
  1617                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 112:     if(0 == RB4_Source){
  1618   0014CE  5072               	movf	RB4_ISR@RB4_Source^0,w,c
  1619   0014D0  A4D8               	btfss	status,2,c
  1620   0014D2  EF6D  F00A         	goto	i2u32_41
  1621   0014D6  EF6F  F00A         	goto	i2u32_40
  1622   0014DA                     i2u32_41:
  1623   0014DA  EF71  F00A         	goto	i2l2717
  1624   0014DE                     i2u32_40:
  1625   0014DE  EF71  F00A         	goto	i2l1008
  1626   0014E2                     i2l2717:
  1627   0014E2                     i2l1008:
  1628   0014E2  0012               	return		;funcret
  1629   0014E4                     __end_of_RB4_ISR:
  1630                           	callstack 0
  1631                           
  1632 ;; *************** function _MSSP_SPI_ISR *****************
  1633 ;; Defined at:
  1634 ;;		line 107 in file "MCAL_Layer/SPI/hal_spi.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;		None
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;		None
  1639 ;; Return value:  Size  Location     Type
  1640 ;;                  1    wreg      void 
  1641 ;; Registers used:
  1642 ;;		None
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1652 ;;Total ram usage:        0 bytes
  1653 ;; Hardware stack levels used: 1
  1654 ;; This function calls:
  1655 ;;		Nothing
  1656 ;; This function is called by:
  1657 ;;		_InterruptManager
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           	psect	text12
  1662   001522                     __ptext12:
  1663                           	callstack 0
  1664   001522                     _MSSP_SPI_ISR:
  1665                           	callstack 27
  1666   001522                     
  1667                           ;MCAL_Layer/SPI/hal_spi.c: 109:     (PIR1bits.SSPIF = 0);
  1668   001522  969E               	bcf	158,3,c	;volatile
  1669   001524  0012               	return		;funcret
  1670   001526                     __end_of_MSSP_SPI_ISR:
  1671                           	callstack 0
  1672                           
  1673 ;; *************** function _MSSP_I2C_ISR *****************
  1674 ;; Defined at:
  1675 ;;		line 242 in file "MCAL_Layer/I2C/hal_i2c.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;		None
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;		None
  1680 ;; Return value:  Size  Location     Type
  1681 ;;                  1    wreg      void 
  1682 ;; Registers used:
  1683 ;;		None
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1693 ;;Total ram usage:        0 bytes
  1694 ;; Hardware stack levels used: 1
  1695 ;; This function calls:
  1696 ;;		Nothing
  1697 ;; This function is called by:
  1698 ;;		_InterruptManager
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702                           	psect	text13
  1703   001526                     __ptext13:
  1704                           	callstack 0
  1705   001526                     _MSSP_I2C_ISR:
  1706                           	callstack 27
  1707   001526                     
  1708                           ;MCAL_Layer/I2C/hal_i2c.c: 244:     (PIR1bits.SSPIF = 0);
  1709   001526  969E               	bcf	158,3,c	;volatile
  1710   001528  0012               	return		;funcret
  1711   00152A                     __end_of_MSSP_I2C_ISR:
  1712                           	callstack 0
  1713                           
  1714 ;; *************** function _MSSP_I2C_BC_ISR *****************
  1715 ;; Defined at:
  1716 ;;		line 251 in file "MCAL_Layer/I2C/hal_i2c.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;		None
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;		None
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  1    wreg      void 
  1723 ;; Registers used:
  1724 ;;		None
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1734 ;;Total ram usage:        0 bytes
  1735 ;; Hardware stack levels used: 1
  1736 ;; This function calls:
  1737 ;;		Nothing
  1738 ;; This function is called by:
  1739 ;;		_InterruptManager
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           	psect	text14
  1744   00152A                     __ptext14:
  1745                           	callstack 0
  1746   00152A                     _MSSP_I2C_BC_ISR:
  1747                           	callstack 27
  1748   00152A                     
  1749                           ;MCAL_Layer/I2C/hal_i2c.c: 253:     (PIR2bits.BCLIF = 0);
  1750   00152A  96A1               	bcf	161,3,c	;volatile
  1751   00152C  0012               	return		;funcret
  1752   00152E                     __end_of_MSSP_I2C_BC_ISR:
  1753                           	callstack 0
  1754                           
  1755 ;; *************** function _INT2_ISR *****************
  1756 ;; Defined at:
  1757 ;;		line 95 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;		None
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;		None
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  1    wreg      void 
  1764 ;; Registers used:
  1765 ;;		None
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1775 ;;Total ram usage:        0 bytes
  1776 ;; Hardware stack levels used: 1
  1777 ;; This function calls:
  1778 ;;		Nothing
  1779 ;; This function is called by:
  1780 ;;		_InterruptManager
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           	psect	text15
  1785   00152E                     __ptext15:
  1786                           	callstack 0
  1787   00152E                     _INT2_ISR:
  1788                           	callstack 27
  1789   00152E                     
  1790                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 97:     (INTCON3bits.INT2IF = 0);
  1791   00152E  92F0               	bcf	240,1,c	;volatile
  1792   001530  0012               	return		;funcret
  1793   001532                     __end_of_INT2_ISR:
  1794                           	callstack 0
  1795                           
  1796 ;; *************** function _INT1_ISR *****************
  1797 ;; Defined at:
  1798 ;;		line 86 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;		None
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;		None
  1803 ;; Return value:  Size  Location     Type
  1804 ;;                  1    wreg      void 
  1805 ;; Registers used:
  1806 ;;		None
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/0
  1809 ;;		On exit  : 0/0
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1816 ;;Total ram usage:        0 bytes
  1817 ;; Hardware stack levels used: 1
  1818 ;; This function calls:
  1819 ;;		Nothing
  1820 ;; This function is called by:
  1821 ;;		_InterruptManager
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           	psect	text16
  1826   001532                     __ptext16:
  1827                           	callstack 0
  1828   001532                     _INT1_ISR:
  1829                           	callstack 27
  1830   001532                     
  1831                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 88:     (INTCON3bits.INT1IF = 0);
  1832   001532  90F0               	bcf	240,0,c	;volatile
  1833   001534  0012               	return		;funcret
  1834   001536                     __end_of_INT1_ISR:
  1835                           	callstack 0
  1836                           
  1837 ;; *************** function _INT0_ISR *****************
  1838 ;; Defined at:
  1839 ;;		line 74 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  1840 ;; Parameters:    Size  Location     Type
  1841 ;;		None
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;		None
  1844 ;; Return value:  Size  Location     Type
  1845 ;;                  1    wreg      void 
  1846 ;; Registers used:
  1847 ;;		None
  1848 ;; Tracked objects:
  1849 ;;		On entry : 0/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1857 ;;Total ram usage:        0 bytes
  1858 ;; Hardware stack levels used: 1
  1859 ;; This function calls:
  1860 ;;		Nothing
  1861 ;; This function is called by:
  1862 ;;		_InterruptManager
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866                           	psect	text17
  1867   001536                     __ptext17:
  1868                           	callstack 0
  1869   001536                     _INT0_ISR:
  1870                           	callstack 27
  1871   001536                     
  1872                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 76:     (INTCONbits.INT0IF = 0);
  1873   001536  92F2               	bcf	242,1,c	;volatile
  1874   001538  0012               	return		;funcret
  1875   00153A                     __end_of_INT0_ISR:
  1876                           	callstack 0
  1877                           
  1878 ;; *************** function _EUSART_TX_ISR *****************
  1879 ;; Defined at:
  1880 ;;		line 245 in file "MCAL_Layer/usart/hal_usart.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;		None
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;		None
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      void 
  1887 ;; Registers used:
  1888 ;;		None
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1898 ;;Total ram usage:        0 bytes
  1899 ;; Hardware stack levels used: 1
  1900 ;; This function calls:
  1901 ;;		Nothing
  1902 ;; This function is called by:
  1903 ;;		_InterruptManager
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907                           	psect	text18
  1908   00153A                     __ptext18:
  1909                           	callstack 0
  1910   00153A                     _EUSART_TX_ISR:
  1911                           	callstack 27
  1912   00153A                     
  1913                           ;MCAL_Layer/usart/hal_usart.c: 246:     (PIE1bits.TXIE = 0);
  1914   00153A  989D               	bcf	157,4,c	;volatile
  1915   00153C  0012               	return		;funcret
  1916   00153E                     __end_of_EUSART_TX_ISR:
  1917                           	callstack 0
  1918                           
  1919 ;; *************** function _EUSART_RX_ISR *****************
  1920 ;; Defined at:
  1921 ;;		line 252 in file "MCAL_Layer/usart/hal_usart.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;		None
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;		None
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  1    wreg      void 
  1928 ;; Registers used:
  1929 ;;		wreg, status,2, status,0
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1939 ;;Total ram usage:        0 bytes
  1940 ;; Hardware stack levels used: 1
  1941 ;; This function calls:
  1942 ;;		Nothing
  1943 ;; This function is called by:
  1944 ;;		_InterruptManager
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948                           	psect	text19
  1949   00154C                     __ptext19:
  1950                           	callstack 0
  1951   00154C                     _EUSART_RX_ISR:
  1952                           	callstack 27
  1953   00154C  0012               	return		;funcret
  1954   00154E                     __end_of_EUSART_RX_ISR:
  1955                           	callstack 0
  1956                           
  1957 ;; *************** function _CCP2_ISR *****************
  1958 ;; Defined at:
  1959 ;;		line 260 in file "MCAL_Layer/CCP/hal_ccp.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;		None
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;		None
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  1    wreg      void 
  1966 ;; Registers used:
  1967 ;;		None
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1977 ;;Total ram usage:        0 bytes
  1978 ;; Hardware stack levels used: 1
  1979 ;; This function calls:
  1980 ;;		Nothing
  1981 ;; This function is called by:
  1982 ;;		_InterruptManager
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           	psect	text20
  1987   00153E                     __ptext20:
  1988                           	callstack 0
  1989   00153E                     _CCP2_ISR:
  1990                           	callstack 27
  1991   00153E                     
  1992                           ;MCAL_Layer/CCP/hal_ccp.c: 261:     (PIR2bits.CCP2IF = 0);
  1993   00153E  90A1               	bcf	161,0,c	;volatile
  1994   001540  0012               	return		;funcret
  1995   001542                     __end_of_CCP2_ISR:
  1996                           	callstack 0
  1997                           
  1998 ;; *************** function _CCP1_ISR *****************
  1999 ;; Defined at:
  2000 ;;		line 252 in file "MCAL_Layer/CCP/hal_ccp.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;		None
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;		None
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  1    wreg      void 
  2007 ;; Registers used:
  2008 ;;		None
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2018 ;;Total ram usage:        0 bytes
  2019 ;; Hardware stack levels used: 1
  2020 ;; This function calls:
  2021 ;;		Nothing
  2022 ;; This function is called by:
  2023 ;;		_InterruptManager
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           	psect	text21
  2028   001542                     __ptext21:
  2029                           	callstack 0
  2030   001542                     _CCP1_ISR:
  2031                           	callstack 27
  2032   001542                     
  2033                           ;MCAL_Layer/CCP/hal_ccp.c: 253:     (PIR1bits.CCP1IF = 0);
  2034   001542  949E               	bcf	158,2,c	;volatile
  2035   001544  0012               	return		;funcret
  2036   001546                     __end_of_CCP1_ISR:
  2037                           	callstack 0
  2038                           
  2039 ;; *************** function _ADC_ISR *****************
  2040 ;; Defined at:
  2041 ;;		line 296 in file "MCAL_Layer/ADC/hal_adc.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;		None
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;		None
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  1    wreg      void 
  2048 ;; Registers used:
  2049 ;;		None
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2059 ;;Total ram usage:        0 bytes
  2060 ;; Hardware stack levels used: 1
  2061 ;; This function calls:
  2062 ;;		Nothing
  2063 ;; This function is called by:
  2064 ;;		_InterruptManager
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           	psect	text22
  2069   001546                     __ptext22:
  2070                           	callstack 0
  2071   001546                     _ADC_ISR:
  2072                           	callstack 27
  2073   001546                     
  2074                           ;MCAL_Layer/ADC/hal_adc.c: 297:     (PIR1bits.ADIF = 0);
  2075   001546  9C9E               	bcf	158,6,c	;volatile
  2076   001548  0012               	return		;funcret
  2077   00154A                     __end_of_ADC_ISR:
  2078                           	callstack 0
  2079                           
  2080                           	psect	rparam
  2081   000000                     
  2082                           	psect	temp
  2083   000073                     btemp:
  2084                           	callstack 0
  2085   000073                     	ds	1
  2086   000000                     int$flags	set	btemp
  2087   000000                     wtemp8	set	btemp+1
  2088   000000                     ttemp5	set	btemp+1
  2089   000000                     ttemp6	set	btemp+4
  2090   000000                     ttemp7	set	btemp+8
  2091                           
  2092                           	psect	idloc
  2093                           
  2094                           ;Config register IDLOC0 @ 0x200000
  2095                           ;	unspecified, using default values
  2096   200000                     	org	2097152
  2097   200000  FF                 	db	255
  2098                           
  2099                           ;Config register IDLOC1 @ 0x200001
  2100                           ;	unspecified, using default values
  2101   200001                     	org	2097153
  2102   200001  FF                 	db	255
  2103                           
  2104                           ;Config register IDLOC2 @ 0x200002
  2105                           ;	unspecified, using default values
  2106   200002                     	org	2097154
  2107   200002  FF                 	db	255
  2108                           
  2109                           ;Config register IDLOC3 @ 0x200003
  2110                           ;	unspecified, using default values
  2111   200003                     	org	2097155
  2112   200003  FF                 	db	255
  2113                           
  2114                           ;Config register IDLOC4 @ 0x200004
  2115                           ;	unspecified, using default values
  2116   200004                     	org	2097156
  2117   200004  FF                 	db	255
  2118                           
  2119                           ;Config register IDLOC5 @ 0x200005
  2120                           ;	unspecified, using default values
  2121   200005                     	org	2097157
  2122   200005  FF                 	db	255
  2123                           
  2124                           ;Config register IDLOC6 @ 0x200006
  2125                           ;	unspecified, using default values
  2126   200006                     	org	2097158
  2127   200006  FF                 	db	255
  2128                           
  2129                           ;Config register IDLOC7 @ 0x200007
  2130                           ;	unspecified, using default values
  2131   200007                     	org	2097159
  2132   200007  FF                 	db	255
  2133                           
  2134                           	psect	config
  2135                           
  2136                           ; Padding undefined space
  2137   300000                     	org	3145728
  2138   300000  FF                 	db	255
  2139                           
  2140                           ;Config register CONFIG1H @ 0x300001
  2141                           ;	Oscillator Selection bits
  2142                           ;	OSC = HS, HS oscillator
  2143                           ;	Fail-Safe Clock Monitor Enable bit
  2144                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2145                           ;	Internal/External Oscillator Switchover bit
  2146                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2147   300001                     	org	3145729
  2148   300001  02                 	db	2
  2149                           
  2150                           ;Config register CONFIG2L @ 0x300002
  2151                           ;	Power-up Timer Enable bit
  2152                           ;	PWRT = OFF, PWRT disabled
  2153                           ;	Brown-out Reset Enable bits
  2154                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2155                           ;	Brown Out Reset Voltage bits
  2156                           ;	BORV = 1, 
  2157   300002                     	org	3145730
  2158   300002  09                 	db	9
  2159                           
  2160                           ;Config register CONFIG2H @ 0x300003
  2161                           ;	Watchdog Timer Enable bit
  2162                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2163                           ;	Watchdog Timer Postscale Select bits
  2164                           ;	WDTPS = 512, 1:512
  2165   300003                     	org	3145731
  2166   300003  12                 	db	18
  2167                           
  2168                           ; Padding undefined space
  2169   300004                     	org	3145732
  2170   300004  FF                 	db	255
  2171                           
  2172                           ;Config register CONFIG3H @ 0x300005
  2173                           ;	CCP2 MUX bit
  2174                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2175                           ;	PORTB A/D Enable bit
  2176                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2177                           ;	Low-Power Timer1 Oscillator Enable bit
  2178                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2179                           ;	MCLR Pin Enable bit
  2180                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2181   300005                     	org	3145733
  2182   300005  81                 	db	129
  2183                           
  2184                           ;Config register CONFIG4L @ 0x300006
  2185                           ;	Stack Full/Underflow Reset Enable bit
  2186                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2187                           ;	Single-Supply ICSP Enable bit
  2188                           ;	LVP = OFF, Single-Supply ICSP disabled
  2189                           ;	Extended Instruction Set Enable bit
  2190                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2191                           ;	Background Debugger Enable bit
  2192                           ;	DEBUG = 0x1, unprogrammed default
  2193   300006                     	org	3145734
  2194   300006  81                 	db	129
  2195                           
  2196                           ; Padding undefined space
  2197   300007                     	org	3145735
  2198   300007  FF                 	db	255
  2199                           
  2200                           ;Config register CONFIG5L @ 0x300008
  2201                           ;	Code Protection bit
  2202                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2203                           ;	Code Protection bit
  2204                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2205                           ;	Code Protection bit
  2206                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2207                           ;	Code Protection bit
  2208                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2209   300008                     	org	3145736
  2210   300008  0F                 	db	15
  2211                           
  2212                           ;Config register CONFIG5H @ 0x300009
  2213                           ;	Boot Block Code Protection bit
  2214                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2215                           ;	Data EEPROM Code Protection bit
  2216                           ;	CPD = OFF, Data EEPROM not code-protected
  2217   300009                     	org	3145737
  2218   300009  C0                 	db	192
  2219                           
  2220                           ;Config register CONFIG6L @ 0x30000A
  2221                           ;	Write Protection bit
  2222                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2223                           ;	Write Protection bit
  2224                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2225                           ;	Write Protection bit
  2226                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2227                           ;	Write Protection bit
  2228                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2229   30000A                     	org	3145738
  2230   30000A  0F                 	db	15
  2231                           
  2232                           ;Config register CONFIG6H @ 0x30000B
  2233                           ;	Configuration Register Write Protection bit
  2234                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2235                           ;	Boot Block Write Protection bit
  2236                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2237                           ;	Data EEPROM Write Protection bit
  2238                           ;	WRTD = OFF, Data EEPROM not write-protected
  2239   30000B                     	org	3145739
  2240   30000B  E0                 	db	224
  2241                           
  2242                           ;Config register CONFIG7L @ 0x30000C
  2243                           ;	Table Read Protection bit
  2244                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2245                           ;	Table Read Protection bit
  2246                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2247                           ;	Table Read Protection bit
  2248                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2249                           ;	Table Read Protection bit
  2250                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2251   30000C                     	org	3145740
  2252   30000C  0F                 	db	15
  2253                           
  2254                           ;Config register CONFIG7H @ 0x30000D
  2255                           ;	Boot Block Table Read Protection bit
  2256                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2257   30000D                     	org	3145741
  2258   30000D  40                 	db	64
  2259                           tosu	equ	0xFFF
  2260                           tosh	equ	0xFFE
  2261                           tosl	equ	0xFFD
  2262                           stkptr	equ	0xFFC
  2263                           pclatu	equ	0xFFB
  2264                           pclath	equ	0xFFA
  2265                           pcl	equ	0xFF9
  2266                           tblptru	equ	0xFF8
  2267                           tblptrh	equ	0xFF7
  2268                           tblptrl	equ	0xFF6
  2269                           tablat	equ	0xFF5
  2270                           prodh	equ	0xFF4
  2271                           prodl	equ	0xFF3
  2272                           indf0	equ	0xFEF
  2273                           postinc0	equ	0xFEE
  2274                           postdec0	equ	0xFED
  2275                           preinc0	equ	0xFEC
  2276                           plusw0	equ	0xFEB
  2277                           fsr0h	equ	0xFEA
  2278                           fsr0l	equ	0xFE9
  2279                           wreg	equ	0xFE8
  2280                           indf1	equ	0xFE7
  2281                           postinc1	equ	0xFE6
  2282                           postdec1	equ	0xFE5
  2283                           preinc1	equ	0xFE4
  2284                           plusw1	equ	0xFE3
  2285                           fsr1h	equ	0xFE2
  2286                           fsr1l	equ	0xFE1
  2287                           bsr	equ	0xFE0
  2288                           indf2	equ	0xFDF
  2289                           postinc2	equ	0xFDE
  2290                           postdec2	equ	0xFDD
  2291                           preinc2	equ	0xFDC
  2292                           plusw2	equ	0xFDB
  2293                           fsr2h	equ	0xFDA
  2294                           fsr2l	equ	0xFD9
  2295                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        41
    BSS         72
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      1     114
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    ADC_GetConversionResult@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_Init@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_Capture_Mode_Config@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Capture_Mode_Config@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Compare_Mode_Config@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Compare_Mode_Config@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_DeInit@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_DeInit@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Init@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Init@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Interrupt_Config@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Interrupt_Config@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Mode_Timer_Select@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Mode_Timer_Select@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Mode_Config@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Mode_Config@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Set_Duty@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Set_Duty@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Start@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Start@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Stop@_ccp_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Stop@_ccp_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    configure_voltage_reference@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    I2C_DefaultInterruptHandle	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Master_Mode_Clock_Configurations@i2c_obj$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_Configurations@i2c_obj$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Report_Receive_Overflow_InterruptHandle	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Report_Write_Collision_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Slave_Mode_Configurations@i2c_obj$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Configurations@i2c_obj$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Configurations@i2c_obj$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_INTx_Clear_Flag@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_SetInterruptHandler@int_obj$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlllll[1]), LATB(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), 
		 -> LATE(BITBIGSFRllllh[1]), 

    MSSP_I2C_Init@i2c_obj$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Interrupt_Configurations@i2c_obj$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Interrupt_Configurations@i2c_obj$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Interrupt_Configurations@i2c_obj$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    MSSP_SPI_Interrupt_Init@Config$MSSP_SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@Config$MSSP_SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), 
		 -> PORTE(BITBIGSFRlllll[1]), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1124$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1124$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1835$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1835$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    S1835$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    S2356$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2472$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    S2472$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    S2964$MSSP_SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3297$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3462$TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3652$TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3781$TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3975$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S3975$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S3975$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3975$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S4841$buffer	PTR unsigned char  size(2) Largest target is 0

    S4841$source	PTR const unsigned char  size(2) Largest target is 0

    S706$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    select_result_format@_adc$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    SPI_Init@Config$MSSP_SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer0_Init@_timer$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Mode_Select@_timer$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Prescaler_Config@_timer$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Register_Size_Config@_timer$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Init@_timer$TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Mode_Select@_timer$TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer2_Init@_timer$TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Init@_timer$TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Mode_Select@_timer$TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    TMR1_InterruptHandler	PTR FTN()volatile void  size(2) Largest target is 1
		 -> NULL(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRlllll[1]), TRISB(ABS[1]), TRISC(ABS[1]), TRISD(ABS[1]), 
		 -> TRISE(ABS[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptManager in COMRAM

    _InterruptManager->_RB4_ISR
    _InterruptManager->_RB5_ISR
    _InterruptManager->_RB6_ISR
    _InterruptManager->_RB7_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
              _application_intialize
 ---------------------------------------------------------------------------------
 (1) _application_intialize                                1     1      0       0
                _ecu_layer_intialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_intialize                                  1     1      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _InterruptManager                                     0     0      0     120
                            _ADC_ISR
                           _CCP1_ISR
                           _CCP2_ISR
                      _EUSART_RX_ISR
                      _EUSART_TX_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                    _MSSP_I2C_BC_ISR
                       _MSSP_I2C_ISR
                       _MSSP_SPI_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (4) _TMR3_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TMR2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TMR0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _RB7_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _RB6_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _RB5_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _RB4_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _MSSP_SPI_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _MSSP_I2C_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _MSSP_I2C_BC_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART_TX_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART_RX_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CCP2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _CCP1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_intialize
     _ecu_layer_intialize

 _InterruptManager (ROOT)
   _ADC_ISR
   _CCP1_ISR
   _CCP2_ISR
   _EUSART_RX_ISR
   _EUSART_TX_ISR
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _MSSP_I2C_BC_ISR
   _MSSP_I2C_ISR
   _MSSP_SPI_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _TMR0_ISR
   _TMR1_ISR
   _TMR2_ISR
   _TMR3_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      1      72       1       90.5%
BITBIGSFRhlhhlh     18      0       0      38        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRlllhh       6      0       0      46        0.0%
BITBIGSFRhlhhll      5      0       0      39        0.0%
BITBIGSFRllhllh      4      0       0      43        0.0%
BITBIGSFRllllh       4      0       0      47        0.0%
BITBIGSFRllhllh      4      0       0      44        0.0%
BITBIGSFRlllll       4      0       0      48        0.0%
BITBIGSFRllhllh      1      0       0      42        0.0%
BITBIGSFRllhlh       1      0       0      41        0.0%
BITBIGSFRllhh        1      0       0      40        0.0%
BITBIGSFRllhlll      1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      72      12        0.0%
DATA                 0      0      72       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Oct 08 22:54:31 2024

                               ??_InterruptManager 0073                                        _SSPSTATbits 0FC7  
                                              l347 154A                                                _PR2 0FCB  
                        _RB5_InterruptHandler_HIGH 0029                                    __end_of_ADC_ISR 154A  
                              led_initialize@F3026 0048                              relay_initialize@F3020 0044  
                                              wreg 0FE8                                    __end_of_RB4_ISR 14E4  
                                  __end_of_RB5_ISR 14CA                                    __end_of_RB6_ISR 14B0  
                                  __end_of_RB7_ISR 1496                                               l1714 1520  
                                             l1708 14E8                                               l1709 14E8  
                                             l5031 14E4                                               l5033 14E4  
                                             l2477 154A                                               l2865 151C  
                                             l2867 151C                                               STR_1 1011  
                                             _LATA 0F89                                               _LATB 0F8A  
                                             _LATC 0F8B                                               _LATD 0F8C  
                                             _LATE 0F8D                                               _TMR2 0FCC  
                          ??_application_intialize 0073                           _RB4_InterruptHandler_LOW 002B  
                                             _main 14E4                                   __end_of_CCP1_ISR 1546  
                                 __end_of_CCP2_ISR 1542                           _RB7_InterruptHandler_LOW 001F  
                                             fsr1l 0FE1                                               btemp 0073  
                                             start 000E                                       ___param_bank 0000  
                                 __end_of_INT0_ISR 153A                                   __end_of_INT1_ISR 1536  
                                 __end_of_INT2_ISR 1532                                      _EUSART_RX_ISR 154C  
                                    _EUSART_TX_ISR 153A                                              ?_main 0072  
                                            _EEADR 0FA9                                              i2l473 1548  
                                            i2l574 1540                                              i2l569 1544  
                                            i2l923 152C                                              i2l919 1528  
                                            i2l992 1534                                              i2l987 1538  
                                            i2l997 1530                                              _RCREG 0FAE  
                              relay_turn_off@F3030 0042                                              _TMR0H 0FD7  
                                            _TMR1H 0FCF                                              _TMR0L 0FD6  
                                            _TMR1L 0FCE                                              _TMR3H 0FB3  
                                            _TMR3L 0FB2                                              _SPBRG 0FAF  
                                            _PORTA 0F80                                              _PORTB 0F81  
                                            _PORTC 0F82                                              _PORTD 0F83  
                                            _PORTE 0F84                                              _TRISA 0F92  
                                            _TRISB 0F93                                              _TRISC 0F94  
                                            _TRISD 0F95                                              _TRISE 0F96  
                                            _TXREG 0FAD                                   __end_of_TMR0_ISR 1514  
                                 __end_of_TMR1_ISR 1508                                   __end_of_TMR2_ISR 151C  
                                 __end_of_TMR3_ISR 14FC                                              tablat 0FF5  
                                            ttemp5 0074                                              ttemp6 0077  
                                            ttemp7 007B                                              status 0FD8  
                                            wtemp8 0074                                    __initialization 141C  
                                     __end_of_main 14F0                                          ??_ADC_ISR 0072  
                                   ?_EUSART_RX_ISR 0072                                     ?_EUSART_TX_ISR 0072  
                                    _lat_registers 0053                                             ??_main 0073  
                                    __activetblptr 0003                              _TMR3_InterruptHandler 0011  
                                 led_turn_on@F3031 0047                                          ??_RB4_ISR 0072  
                                        ??_RB5_ISR 0072                                          ??_RB6_ISR 0072  
                                        ??_RB7_ISR 0072                         _EUSART_OverrunErrorHandler 0007  
                                           _ADRESH 0FC4                                             _EEADRH 0FAA  
                                           _ADRESL 0FC3                                             _EEDATA 0FA8  
                                           _CCPR1L 0FBE                                             _CCPR2L 0FBB  
                                           _EECON2 0FA7                                             i2l1030 14AE  
                                           i2l1008 14E2                                             i2l1041 1494  
                                           i2l1019 14C8                                             i2l1220 1078  
                                           i2l1230 11CC                                             i2l1222 10BC  
                                           i2l1240 12D8                                             i2l1232 1210  
                                           i2l1224 1100                                             i2l1216 1038  
                                           i2l1250 1378                                             i2l1242 12F8  
                                           i2l1234 1254                                             i2l1226 1144  
                                           i2l1218 1058                                             i2l1252 1398  
                                           i2l1244 1318                                             i2l1236 1298  
                                           i2l1228 1188                                             i2l1261 1418  
                                           i2l1254 13B8                                             i2l1246 1338  
                                           i2l1238 12B8                                             i2l1328 1524  
                                           i2l1256 13D8                                             i2l1248 1358  
                                           i2l1514 151A                                             i2l1258 13F8  
                                           i2l1463 1506                                             i2l1394 1512  
                                           i2l1558 14FA                                             i2l2703 152E  
                                           i2l2711 14CE                                             i2l4401 11A4  
                                           i2l1690 153C                                             i2l2731 14C8  
                                           i2l2723 14B2                                             i2l2811 150E  
                                           i2l4411 11E8                                             i2l4403 11B2  
                                           i2l2717 14E2                                             i2l2709 14CC  
                                           i2l2725 14B4                                             i2l4421 122C  
                                           i2l4413 11F6                                             i2l4405 11C2  
                                           i2l2655 1546                                             i2l2751 147E  
                                           i2l2807 1508                                             i2l2815 14FC  
                                           i2l2823 1514                                             i2l2831 14F6  
                                           i2l4431 1270                                             i2l4423 123A  
                                           i2l4415 1206                                             i2l4407 11C6  
                                           i2l4351 1046                                             i2l2665 153E  
                                           i2l2841 154C                                             i2l2745 14AE  
                                           i2l2737 1498                                             i2l2753 1480  
                                           i2l2809 150A                                             i2l2817 14FE  
                                           i2l4441 12B4                                             i2l4433 127E  
                                           i2l4425 124A                                             i2l4417 120A  
                                           i2l4409 11DA                                             i2l4361 1094  
                                           i2l4353 1054                                             i2l4345 1018  
                                           i2l2659 1542                                             i2l1699 154C  
                                           i2l2835 153A                                             i2l2691 1536  
                                           i2l2683 1526                                             i2l2739 149A  
                                           i2l2819 1502                                             i2l2827 14F0  
                                           i2l4451 1306                                             i2l4443 12C6  
                                           i2l4435 128E                                             i2l4427 124E  
                                           i2l4419 121E                                             i2l4371 10D8  
                                           i2l4363 10A2                                             i2l4355 1066  
                                           i2l4347 1026                                             i2l2853 1522  
                                           i2l2829 14F2                                             i2l4461 1354  
                                           i2l4453 1314                                             i2l4445 12D4  
                                           i2l4437 1292                                             i2l4429 1262  
                                           i2l4381 111C                                             i2l4373 10E6  
                                           i2l4365 10B2                                             i2l4357 1074  
                                           i2l4349 1034                                             i2l2687 152A  
                                           i2l2759 1494                                             i2l4471 13A6  
                                           i2l4463 1366                                             i2l4455 1326  
                                           i2l4447 12E6                                             i2l4439 12A6  
                                           i2l4391 1160                                             i2l4383 112A  
                                           i2l4375 10F6                                             i2l4367 10B6  
                                           i2l4359 1086                                             i2l2697 1532  
                                           i2l4481 13F4                                             i2l4473 13B4  
                                           i2l4465 1374                                             i2l4457 1334  
                                           i2l4449 12F4                                             i2l4393 116E  
                                           i2l4385 113A                                             i2l4377 10FA  
                                           i2l4369 10CA                                             i2l4483 1406  
                                           i2l4475 13C6                                             i2l4467 1386  
                                           i2l4459 1346                                             i2l4395 117E  
                                           i2l4387 113E                                             i2l4379 110E  
                                           i2l4485 1414                                             i2l4477 13D4  
                                           i2l4469 1394                                             i2l4397 1182  
                                           i2l4389 1152                                             i2l4479 13E6  
                                           i2l4399 1196                                             _SPBRGH 0FB0  
                                           _SSPADD 0FC8                                             _SSPBUF 0FC9  
                                           clear_0 1442                                             isa$std 0001  
      _I2C_Report_Receive_Overflow_InterruptHandle 0035                                          ?_CCP1_ISR 0072  
                                     __pdataCOMRAM 0049                                          ?_CCP2_ISR 0072  
                                     __mediumconst 0000                                             tblptrh 0FF7  
                                           tblptrl 0FF6                                             tblptru 0FF8  
                                       __accesstop 0080                            __end_of__initialization 1448  
                                        ?_INT0_ISR 0072                                          ?_INT1_ISR 0072  
                                        ?_INT2_ISR 0072                                      ___rparam_used 0001  
                                RB5_ISR@RB5_Source 0072                                     __pcstackCOMRAM 0072  
                       _I2C_DefaultInterruptHandle 0037                                          ?_TMR0_ISR 0072  
                                  ??_EUSART_RX_ISR 0072                                          ?_TMR1_ISR 0072  
                                        ?_TMR2_ISR 0072                                          ?_TMR3_ISR 0072  
                                  ??_EUSART_TX_ISR 0072                                         ??_CCP1_ISR 0072  
                                       ??_CCP2_ISR 0072                              _INT0_InterruptHandler 0033  
                                       ??_INT0_ISR 0072                                         ??_INT1_ISR 0072  
                                       ??_INT2_ISR 0072                      __end_of_application_intialize 1522  
                                       ??_TMR0_ISR 0072                                         ??_TMR1_ISR 0072  
                                       ??_TMR2_ISR 0072                                         ??_TMR3_ISR 0072  
                                led_turn_off@F3036 0046                                            _ADC_ISR 1546  
                                RB7_ISR@RB7_Source 0072                                            _RB4_ISR 14CA  
                                          _RB5_ISR 14B0                                            _RB6_ISR 1496  
                                          _RB7_ISR 147C                          _RB6_InterruptHandler_HIGH 0025  
                                    ?_MSSP_I2C_ISR 0072                               led_turn_toggle@F3041 0045  
                                          i2u32_40 14DE                                            i2u32_41 14DA  
                                          i2u33_40 14C4                                            i2u33_41 14C0  
                                          i2u34_40 14AA                                            i2u34_41 14A6  
                                          i2u35_40 1490                                            i2u35_41 148C  
                                       _btn_values 1001                                     _tris_registers 005D  
                         _RB6_InterruptHandler_LOW 0023                                      ?_MSSP_SPI_ISR 0072  
                                ??_MSSP_I2C_BC_ISR 0072                               _ADC_InterruptHandler 003F  
                                          __Hparam 0000                                            __Lparam 0000  
                              _ecu_layer_intialize 154A                               _SPI_InterruptHandler 001D  
                                     __psmallconst 1000                                            __pcinit 141C  
                                          __ramtop 1000                                            __ptext0 14E4  
                                          __ptext1 151C                                            __ptext2 154A  
                                          __ptext4 14F0                                            __ptext5 1514  
                                          __ptext6 14FC                                            __ptext7 1508  
                                          __ptext8 147C                                            __ptext9 1496  
                                        _T0CONbits 0FD5                                          _T1CONbits 0FCD  
                                   ??_MSSP_I2C_ISR 0072                                          _T2CONbits 0FCA  
                                        _T3CONbits 0FB1                               ?_ecu_layer_intialize 0072  
                                   __pintcode_body 1016                               end_of_initialization 1448  
                                          int_func 1016                                     ??_MSSP_SPI_ISR 0072  
                                        _RCSTAbits 0FAB                                            postdec1 0FE5  
                                          postinc0 0FEE                              _INT1_InterruptHandler 0031  
                                        _PORTBbits 0F81                                   _InterruptManager 0008  
                            ??_ecu_layer_intialize 0073                                          _TRISCbits 0F94  
                                      _CCP1CONbits 0FBD                                        _CCP2CONbits 0FBA  
                                        _TXSTAbits 0FAC                                 relay_turn_on@F3025 0043  
                    convert_uint16_to_string@F3176 0001                                        _BAUDCONbits 0FB8  
                                    __pidataCOMRAM 1452                                     _timer0_preload 0019  
                                   _timer1_preload 0015                                     _timer2_preload 0041  
                              start_initialization 141C                                     _timer3_preload 000F  
MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3080 006C  MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3082 006B  
 MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3091 0068   MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3093 0067  
MSSP_SPI_Msster_Mode_GPIO_PIN_Configurations@F3078 006D   MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3087 006A  
 MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3089 0069                          _EUSART_RxInterruptHandler 000B  
                             __end_of_MSSP_I2C_ISR 152A                         _EUSART_FramingErrorHandler 0009  
                                         ?_ADC_ISR 0072                              __end_of_EUSART_RX_ISR 154E  
                            __end_of_EUSART_TX_ISR 153E                               __end_of_MSSP_SPI_ISR 1526  
                                         ?_RB4_ISR 0072                                           ?_RB5_ISR 0072  
                                         ?_RB6_ISR 0072                                           ?_RB7_ISR 0072  
                                      __pbssCOMRAM 0001        _I2C_Report_Write_Collision_InterruptHandler 0039  
                                  _MSSP_I2C_BC_ISR 152A                              _INT2_InterruptHandler 002F  
                            _TMR0_InterruptHandler 001B                              _application_intialize 151C  
                                        __pintcode 0008                                        __smallconst 1000  
                        _RB4_InterruptHandler_HIGH 002D                                           _CCP1_ISR 1542  
                                         _CCP2_ISR 153E                          _RB7_InterruptHandler_HIGH 0021  
                         _RB5_InterruptHandler_LOW 0027                                           _INT0_ISR 1536  
                                         _INT1_ISR 1532                                           _INT2_ISR 152E  
                                         _RB4_Flag 0071                                           _RB5_Flag 0070  
                                         _RB6_Flag 006F                                           _RB7_Flag 006E  
                                RB4_ISR@RB4_Source 0072                           __end_of_InterruptManager 141C  
                                         _PIE1bits 0F9D                                           _PIE2bits 0FA0  
                                         i2u220_40 1094                                           i2u220_41 1090  
                                         i2u221_40 10A2                                           i2u213_40 1026  
                                         i2u221_41 109E                                           i2u213_41 1022  
                                         i2u230_40 113A                                           i2u222_40 10B2  
                                         i2u214_40 1034                                           i2u230_41 1136  
                                         i2u222_41 10AE                                           i2u214_41 1030  
                                         i2u231_40 1152                                           i2u223_40 10CA  
                                         i2u215_40 1046                                           i2u231_41 114E  
                                         i2u223_41 10C6                                           i2u215_41 1042  
                                         i2u240_40 11E8                                           i2u232_40 1160  
                                         i2u224_40 10D8                                           i2u216_40 1054  
                                         i2u240_41 11E4                                           i2u232_41 115C  
                                         i2u224_41 10D4                                           i2u216_41 1050  
                                         i2u241_40 11F6                                           i2u233_40 116E  
                                         i2u225_40 10E6                                           i2u217_40 1066  
                                         i2u241_41 11F2                                           i2u233_41 116A  
                                         i2u225_41 10E2                                           i2u217_41 1062  
                                         i2u250_40 128E                                           i2u242_40 1206  
                                         i2u234_40 117E                                           i2u226_40 10F6  
                                         i2u218_40 1074                                           i2u250_41 128A  
                                         i2u242_41 1202                                           i2u234_41 117A  
                                         i2u226_41 10F2                                           i2u218_41 1070  
                                         i2u251_40 12A6                                           i2u243_40 121E  
                                         i2u235_40 1196                                           i2u227_40 110E  
                                         i2u219_40 1086                                           i2u251_41 12A2  
                                         i2u243_41 121A                                           i2u235_41 1192  
                                         i2u227_41 110A                                           i2u219_41 1082  
                                         i2u260_40 1334                                           i2u252_40 12B4  
                                         i2u244_40 122C                                           i2u236_40 11A4  
                                         i2u228_40 111C                                           i2u260_41 1330  
                                         i2u252_41 12B0                                           i2u244_41 1228  
                                         i2u236_41 11A0                                           i2u228_41 1118  
                                         i2u261_40 1346                                           i2u253_40 12C6  
                                         i2u245_40 123A                                           i2u237_40 11B2  
                                         i2u229_40 112A                                           i2u261_41 1342  
                                         i2u253_41 12C2                                           i2u245_41 1236  
                                         i2u237_41 11AE                                           i2u229_41 1126  
                                         i2u270_40 13D4                                           i2u262_40 1354  
                                         i2u254_40 12D4                                           i2u246_40 124A  
                                         i2u238_40 11C2                                           i2u270_41 13D0  
                                         i2u262_41 1350                                           i2u254_41 12D0  
                                         i2u246_41 1246                                           i2u238_41 11BE  
                                         i2u271_40 13E6                                           i2u263_40 1366  
                                         i2u255_40 12E6                                           i2u247_40 1262  
                                         i2u239_40 11DA                                           i2u271_41 13E2  
                                         i2u263_41 1362                                           i2u255_41 12E2  
                                         i2u247_41 125E                                           i2u239_41 11D6  
                                         i2u272_40 13F4                                           i2u264_40 1374  
                                         i2u256_40 12F4                                           i2u248_40 1270  
                                         i2u272_41 13F0                                           i2u264_41 1370  
                                         i2u256_41 12F0                                           i2u248_41 126C  
                                         i2u273_40 1406                                           i2u265_40 1386  
                                         i2u257_40 1306                                           i2u249_40 127E  
                                         i2u273_41 1402                                           i2u265_41 1382  
                                         i2u257_41 1302                                           i2u249_41 127A  
                                         _PIR1bits 0F9E                                           i2u274_40 1414  
                                         i2u266_40 1394                                           i2u258_40 1314  
                                         i2u274_41 1410                                           i2u266_41 1390  
                                         i2u258_41 1310                                           i2u267_40 13A6  
                                         i2u259_40 1326                                           i2u267_41 13A2  
                                         i2u259_41 1322                                           _PIR2bits 0FA1  
                                         i2u268_40 13B4                                           i2u268_41 13B0  
                                         i2u269_40 13C6                                           i2u269_41 13C2  
                                         _TMR0_ISR 1508                                           _TMR1_ISR 14FC  
                                         _TMR2_ISR 1514                                           _TMR3_ISR 14F0  
                                       _ADCON0bits 0FC2                                         _ADCON1bits 0FC1  
                                       _ADCON2bits 0FC0                            __end_of_MSSP_I2C_BC_ISR 152E  
                                      _INTCON2bits 0FF1                                        _INTCON3bits 0FF0  
                                        copy_data0 1430                                         _EECON1bits 0FA6  
                           ?_application_intialize 0072                                           __Hrparam 0000  
                                         __Lrparam 0000                                  RB6_ISR@RB6_Source 0072  
                            _CCP1_InterruptHandler 003D                        __end_of_ecu_layer_intialize 154C  
                               __end_of_btn_values 1011                              _TMR1_InterruptHandler 0017  
                                     _MSSP_I2C_ISR 1526                                           __ptext10 14B0  
                                         __ptext11 14CA                                           __ptext20 153E  
                                         __ptext12 1522                                           __ptext21 1542  
                                         __ptext13 1526                                           __ptext22 1546  
                                         __ptext14 152A                                           __ptext15 152E  
                                         __ptext16 1532                                           __ptext17 1536  
                                         __ptext18 153A                                           __ptext19 154C  
                                     _MSSP_SPI_ISR 1522                                           isa$xinst 0000  
                                         int$flags 0073                                   ?_MSSP_I2C_BC_ISR 0072  
                                       _INTCONbits 0FF2                                           intlevel2 0000  
                        _EUSART_TxInterruptHandler 000D                                     _port_registers 0049  
                                      _SSPCON1bits 0FC6                                        _SSPCON2bits 0FC5  
                            _CCP2_InterruptHandler 003B                              _TMR2_InterruptHandler 0013  
                                ?_InterruptManager 0072  
